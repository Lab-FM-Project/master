

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Feb 17 00:23:55 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	smallconst
    34  000300                     __psmallconst:
    35                           	opt stack 0
    36  000300  00                 	db	0
    37  000301                     _regDflt:
    38                           	opt stack 0
    39  000301  FFFF               	dw	65535
    40  000303  5B15               	dw	23317
    41  000305  D0B9               	dw	53433
    42  000307  A010               	dw	40976
    43  000309  0780               	dw	1920
    44  00030B  28AB               	dw	10411
    45  00030D  6400               	dw	25600
    46  00030F  1EE7               	dw	7911
    47  000311  7141               	dw	28993
    48  000313  007D               	dw	125
    49  000315  82C6               	dw	33478
    50  000317  4F55               	dw	20309
    51  000319  970C               	dw	38668
    52  00031B  B845               	dw	47173
    53  00031D  FC2D               	dw	64557
    54  00031F  8097               	dw	32919
    55  000321  04A1               	dw	1185
    56  000323  DF6A               	dw	57194
    57  000325                     __end_of_regDflt:
    58                           	opt stack 0
    59  0000                     _LCDCON	set	3929
    60  0000                     _LCDPS	set	3928
    61  0000                     _LCDSE0	set	3930
    62  0000                     _LCDSE1	set	3931
    63  0000                     _LCDSE2	set	3932
    64  0000                     _LCDSE3	set	3933
    65  0000                     _ADCON1	set	4033
    66  0000                     _INTCONbits	set	4082
    67  0000                     _OSCCON	set	4051
    68  0000                     _PIR1bits	set	3998
    69  0000                     _PORTA	set	3968
    70  0000                     _PORTAbits	set	3968
    71  0000                     _PORTB	set	3969
    72  0000                     _PORTBbits	set	3969
    73  0000                     _PORTC	set	3970
    74  0000                     _PORTGbits	set	3974
    75  0000                     _SSPADD	set	4040
    76  0000                     _SSPBUF	set	4041
    77  0000                     _SSPCON1	set	4038
    78  0000                     _SSPCON1bits	set	4038
    79  0000                     _SSPCON2	set	4037
    80  0000                     _SSPCON2bits	set	4037
    81  0000                     _SSPSTAT	set	4039
    82  0000                     _SSPSTATbits	set	4039
    83  0000                     _T0CON	set	4053
    84  0000                     _T0CONbits	set	4053
    85  0000                     _TMR0H	set	4055
    86  0000                     _TMR0L	set	4054
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISG	set	3992
    92  0000                     _LCDDATA0	set	3936
    93                           
    94                           ; #config settings
    95  000325  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           	psect	cinit
    98  0008C4                     __pcinit:
    99                           	opt stack 0
   100  0008C4                     start_initialization:
   101                           	opt stack 0
   102  0008C4                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Clear objects allocated to COMRAM (36 bytes)
   106  0008C4  EE00  F001         	lfsr	0,__pbssCOMRAM
   107  0008C8  0E24               	movlw	36
   108  0008CA                     clear_0:
   109  0008CA  6AEE               	clrf	postinc0,c
   110  0008CC  06E8               	decf	wreg,f,c
   111  0008CE  E1FD               	bnz	clear_0
   112  0008D0                     end_of_initialization:
   113                           	opt stack 0
   114  0008D0                     __end_of__initialization:
   115                           	opt stack 0
   116  0008D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  0008D2  6EF8               	movwf	tblptru,c
   118  0008D4  0100               	movlb	0
   119  0008D6  EF0F  F003         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           postinc0	equ	0xFEE
   122                           wreg	equ	0xFE8
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt stack 0
   127  000001                     _regImg:
   128                           	opt stack 0
   129  000001                     	ds	36
   130                           tblptru	equ	0xFF8
   131                           postinc0	equ	0xFEE
   132                           wreg	equ	0xFE8
   133                           
   134                           	psect	cstackCOMRAM
   135  000025                     __pcstackCOMRAM:
   136                           	opt stack 0
   137  000025                     ??_IdleI2C:
   138  000025                     OpenI2C@slew:
   139                           	opt stack 0
   140  000025                     dly@d:
   141                           	opt stack 0
   142  000025                     delay_10ms@n:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000025                     	ds	1
   147  000026                     OpenI2C@sync_mode:
   148                           	opt stack 0
   149  000026                     WriteI2C@data_out:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x1
   153  000026                     	ds	1
   154  000027                     ??_delay_10ms:
   155  000027                     ??_FMwrite:
   156  000027                     dly@i:
   157                           	opt stack 0
   158  000027                     FMread@data:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162  000027                     	ds	1
   163  000028                     ??_butnEvent:
   164  000028                     
   165                           ; 1 bytes @ 0x3
   166  000028                     	ds	1
   167  000029                     ??_FMread:
   168  000029                     FMwrite@firstByt:
   169                           	opt stack 0
   170  000029                     butnEvent@c:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x4
   174  000029                     	ds	1
   175  00002A                     FMwrite@secndByt:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x5
   179  00002A                     	ds	1
   180  00002B                     FMwrite@adr:
   181                           	opt stack 0
   182  00002B                     butnEvent@c_410:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x6
   186  00002B                     	ds	2
   187  00002D                     FMread@regAddr:
   188                           	opt stack 0
   189  00002D                     butnEvent@c_419:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x8
   193  00002D                     	ds	1
   194  00002E                     FMread@firstByt:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x9
   198  00002E                     	ds	1
   199  00002F                     FMread@secndByt:
   200                           	opt stack 0
   201  00002F                     butnEvent@c_420:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0xA
   205  00002F                     	ds	1
   206  000030                     FMready@rdy:
   207                           	opt stack 0
   208  000030                     FMvers@vsn:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0xB
   212  000030                     	ds	1
   213  000031                     butnEvent@c_427:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0xC
   217  000031                     	ds	1
   218  000032                     ??_FMready:
   219  000032                     
   220                           ; 1 bytes @ 0xD
   221  000032                     	ds	2
   222  000034                     FMready@sts:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0xF
   226  000034                     	ds	2
   227  000036                     FMinit@dat:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x11
   231  000036                     	ds	2
   232  000038                     FMinit@ad:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x13
   236  000038                     	ds	1
   237  000039                     main@evt:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x14
   241  000039                     	ds	1
   242  00003A                     main@ui:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x15
   246  00003A                     	ds	2
   247                           tblptru	equ	0xFF8
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 528 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  ui              2   21[COMRAM] unsigned int 
   261 ;;  evt             1   20[COMRAM] unsigned char 
   262 ;;  btn             1    0        unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   272 ;;      Params:         0       0       0       0
   273 ;;      Locals:         3       0       0       0
   274 ;;      Temps:          0       0       0       0
   275 ;;      Totals:         3       0       0       0
   276 ;;Total ram usage:        3 bytes
   277 ;; Hardware stack levels required when called:    5
   278 ;; This function calls:
   279 ;;		_FMinit
   280 ;;		_FMvers
   281 ;;		_Init
   282 ;;		_MuteHard
   283 ;;		_VolumeDown
   284 ;;		_VolumeUp
   285 ;;		_butnEvent
   286 ;;		_dly
   287 ;;		_errfm
   288 ;;		_nextChannel
   289 ;;		_previousChannel
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  00061E                     __ptext0:
   297                           	opt stack 0
   298  00061E                     _main:
   299                           	opt stack 26
   300                           
   301                           ;main.c: 530: unsigned char btn;
   302                           ;main.c: 531: unsigned char evt;
   303                           ;main.c: 532: unsigned int ui;
   304                           ;main.c: 534: dly(20);
   305                           
   306                           ;incstack = 0
   307  00061E  0E00               	movlw	0
   308  000620  6E26               	movwf	dly@d+1,c
   309  000622  0E14               	movlw	20
   310  000624  6E25               	movwf	dly@d,c
   311  000626  EC1B  F004         	call	_dly	;wreg free
   312                           
   313                           ;main.c: 535: Init();
   314  00062A  EC99  F003         	call	_Init	;wreg free
   315                           
   316                           ;main.c: 536: FMvers(&ui);
   317  00062E  0E3A               	movlw	low main@ui
   318  000630  6E30               	movwf	FMvers@vsn,c
   319  000632  0E00               	movlw	high main@ui
   320  000634  6E31               	movwf	FMvers@vsn+1,c
   321  000636  EC88  F004         	call	_FMvers	;wreg free
   322                           
   323                           ;main.c: 537: if (ui != 0x1010) errfm();
   324  00063A  0E10               	movlw	16
   325  00063C  183A               	xorwf	main@ui,w,c
   326  00063E  E103               	bnz	u1140
   327  000640  0E10               	movlw	16
   328  000642  183B               	xorwf	main@ui+1,w,c
   329  000644  A4D8               	btfss	status,2,c
   330  000646                     u1140:
   331  000646  EC90  F004         	call	_errfm	;wreg free
   332                           
   333                           ;main.c: 538: if (FMinit() != 0) errfm();
   334  00064A  ECAC  F002         	call	_FMinit	;wreg free
   335  00064E  0900               	iorlw	0
   336  000650  A4D8               	btfss	status,2,c
   337  000652  EC90  F004         	call	_errfm	;wreg free
   338  000656                     l1712:
   339                           
   340                           ;main.c: 541: evt = butnEvent();
   341  000656  EC93  F001         	call	_butnEvent	;wreg free
   342  00065A  6E39               	movwf	main@evt,c
   343                           
   344                           ;main.c: 542: switch (evt) {
   345  00065C  D015               	goto	l1728
   346  00065E                     l1714:
   347  00065E  EC76  F004         	call	_nextChannel	;wreg free
   348                           
   349                           ;main.c: 544: break;
   350  000662  D7F9               	goto	l1712
   351  000664                     l1716:
   352  000664  EC6D  F004         	call	_previousChannel	;wreg free
   353                           
   354                           ;main.c: 546: break;
   355  000668  D7F6               	goto	l1712
   356  00066A                     l1718:
   357  00066A  0E00               	movlw	0
   358  00066C  EC91  F004         	call	_VolumeUp
   359                           
   360                           ;main.c: 548: break;
   361  000670  D7F2               	goto	l1712
   362  000672                     l1720:
   363  000672  0E00               	movlw	0
   364  000674  EC92  F004         	call	_VolumeDown
   365                           
   366                           ;main.c: 550: break;
   367  000678  D7EE               	goto	l1712
   368  00067A                     l1722:
   369  00067A  0E00               	movlw	0
   370  00067C  EC93  F004         	call	_MuteHard
   371                           
   372                           ;main.c: 552: break;
   373  000680  D7EA               	goto	l1712
   374  000682                     l1724:
   375  000682  EC90  F004         	call	_errfm	;wreg free
   376                           
   377                           ;main.c: 558: }
   378                           
   379                           ;main.c: 557: default: break;
   380                           
   381                           ;main.c: 555: break;
   382  000686  D7E7               	goto	l1712
   383  000688                     l1728:
   384  000688  5039               	movf	main@evt,w,c
   385                           
   386                           ; Switch size 1, requested type "space"
   387                           ; Number of cases is 6, Range of values is 1 to 8
   388                           ; switch strategies available:
   389                           ; Name         Instructions Cycles
   390                           ; simple_byte           19    10 (average)
   391                           ;	Chosen strategy is simple_byte
   392  00068A  0A01               	xorlw	1	; case 1
   393  00068C  B4D8               	btfsc	status,2,c
   394  00068E  D7E7               	goto	l1714
   395  000690  0A03               	xorlw	3	; case 2
   396  000692  B4D8               	btfsc	status,2,c
   397  000694  D7E7               	goto	l1716
   398  000696  0A01               	xorlw	1	; case 3
   399  000698  B4D8               	btfsc	status,2,c
   400  00069A  D7E7               	goto	l1718
   401  00069C  0A07               	xorlw	7	; case 4
   402  00069E  B4D8               	btfsc	status,2,c
   403  0006A0  D7E8               	goto	l1720
   404  0006A2  0A01               	xorlw	1	; case 5
   405  0006A4  B4D8               	btfsc	status,2,c
   406  0006A6  D7E9               	goto	l1722
   407  0006A8  0A0D               	xorlw	13	; case 8
   408  0006AA  B4D8               	btfsc	status,2,c
   409  0006AC  D7EA               	goto	l1724
   410                           
   411                           ;main.c: 559: }
   412  0006AE  D7D3               	goto	l1712
   413  0006B0                     __end_of_main:
   414                           	opt stack 0
   415                           tblptru	equ	0xFF8
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           status	equ	0xFD8
   419                           
   420 ;; *************** function _previousChannel *****************
   421 ;; Defined at:
   422 ;;		line 466 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      unsigned char 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   436 ;;      Params:         0       0       0       0
   437 ;;      Locals:         0       0       0       0
   438 ;;      Temps:          0       0       0       0
   439 ;;      Totals:         0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    1
   443 ;; This function calls:
   444 ;;		_delay_10ms
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451  0008DA                     __ptext1:
   452                           	opt stack 0
   453  0008DA                     _previousChannel:
   454                           	opt stack 29
   455                           
   456                           ;main.c: 467: PORTBbits.RB2 = 1;
   457                           
   458                           ;incstack = 0
   459  0008DA  8481               	bsf	3969,2,c	;volatile
   460                           
   461                           ;main.c: 468: delay_10ms(20);
   462  0008DC  0E00               	movlw	0
   463  0008DE  6E26               	movwf	delay_10ms@n+1,c
   464  0008E0  0E14               	movlw	20
   465  0008E2  6E25               	movwf	delay_10ms@n,c
   466  0008E4  EC34  F004         	call	_delay_10ms	;wreg free
   467                           
   468                           ;main.c: 469: PORTBbits.RB2 = 0;
   469  0008E8  9481               	bcf	3969,2,c	;volatile
   470  0008EA  0012               	return	
   471  0008EC                     __end_of_previousChannel:
   472                           	opt stack 0
   473                           tblptru	equ	0xFF8
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           status	equ	0xFD8
   477                           
   478 ;; *************** function _nextChannel *****************
   479 ;; Defined at:
   480 ;;		line 457 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      unsigned char 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   494 ;;      Params:         0       0       0       0
   495 ;;      Locals:         0       0       0       0
   496 ;;      Temps:          0       0       0       0
   497 ;;      Totals:         0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    1
   501 ;; This function calls:
   502 ;;		_delay_10ms
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509  0008EC                     __ptext2:
   510                           	opt stack 0
   511  0008EC                     _nextChannel:
   512                           	opt stack 29
   513                           
   514                           ;main.c: 458: PORTBbits.RB1 = 1;
   515                           
   516                           ;incstack = 0
   517  0008EC  8281               	bsf	3969,1,c	;volatile
   518                           
   519                           ;main.c: 459: delay_10ms(20);
   520  0008EE  0E00               	movlw	0
   521  0008F0  6E26               	movwf	delay_10ms@n+1,c
   522  0008F2  0E14               	movlw	20
   523  0008F4  6E25               	movwf	delay_10ms@n,c
   524  0008F6  EC34  F004         	call	_delay_10ms	;wreg free
   525                           
   526                           ;main.c: 460: PORTBbits.RB1 = 0;
   527  0008FA  9281               	bcf	3969,1,c	;volatile
   528  0008FC  0012               	return	
   529  0008FE                     __end_of_nextChannel:
   530                           	opt stack 0
   531                           tblptru	equ	0xFF8
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           status	equ	0xFD8
   535                           
   536 ;; *************** function _errfm *****************
   537 ;; Defined at:
   538 ;;		line 503 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		None
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   552 ;;      Params:         0       0       0       0
   553 ;;      Locals:         0       0       0       0
   554 ;;      Temps:          0       0       0       0
   555 ;;      Totals:         0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text3
   566  000920                     __ptext3:
   567                           	opt stack 0
   568  000920                     _errfm:
   569                           	opt stack 30
   570  000920                     l201:
   571  000920  D7FF               	goto	l201
   572  000922                     __end_of_errfm:
   573                           	opt stack 0
   574                           tblptru	equ	0xFF8
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           status	equ	0xFD8
   578                           
   579 ;; *************** function _butnEvent *****************
   580 ;; Defined at:
   581 ;;		line 80 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  c               2   12[COMRAM] int 
   586 ;;  c               2   10[COMRAM] int 
   587 ;;  c               2    8[COMRAM] int 
   588 ;;  c               2    6[COMRAM] int 
   589 ;;  c               2    4[COMRAM] int 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      unsigned char 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   599 ;;      Params:         0       0       0       0
   600 ;;      Locals:        10       0       0       0
   601 ;;      Temps:          1       0       0       0
   602 ;;      Totals:        11       0       0       0
   603 ;;Total ram usage:       11 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    1
   606 ;; This function calls:
   607 ;;		_delay_10ms
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text4
   614  000326                     __ptext4:
   615                           	opt stack 0
   616  000326                     _butnEvent:
   617                           	opt stack 29
   618                           
   619                           ;main.c: 82: if (PORTAbits.RA0 == 0)
   620                           
   621                           ;incstack = 0
   622  000326  B080               	btfsc	3968,0,c	;volatile
   623  000328  D020               	goto	l73
   624                           
   625                           ;main.c: 83: {
   626                           ;main.c: 84: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   627  00032A  0E00               	movlw	0
   628  00032C  6E2A               	movwf	butnEvent@c+1,c
   629  00032E  0E00               	movlw	0
   630  000330  6E29               	movwf	butnEvent@c,c
   631  000332  BE2A               	btfsc	butnEvent@c+1,7,c
   632  000334  D006               	goto	l1472
   633  000336  502A               	movf	butnEvent@c+1,w,c
   634  000338  E112               	bnz	l75
   635  00033A  0E0B               	movlw	11
   636  00033C  5C29               	subwf	butnEvent@c,w,c
   637  00033E  B0D8               	btfsc	status,0,c
   638  000340  D00E               	goto	l75
   639  000342                     l1472:
   640  000342  0E0D               	movlw	13
   641  000344  6E28               	movwf	??_butnEvent& (0+255),c
   642  000346  0EFC               	movlw	252
   643  000348                     u1167:
   644  000348  2EE8               	decfsz	wreg,f,c
   645  00034A  D7FE               	goto	u1167
   646  00034C  2E28               	decfsz	??_butnEvent& (0+255),f,c
   647  00034E  D7FC               	goto	u1167
   648  000350  4A29               	infsnz	butnEvent@c,f,c
   649  000352  2A2A               	incf	butnEvent@c+1,f,c
   650  000354  BE2A               	btfsc	butnEvent@c+1,7,c
   651  000356  D7F5               	goto	l1472
   652  000358  502A               	movf	butnEvent@c+1,w,c
   653  00035A  E101               	bnz	u840
   654  00035C  D7EE               	goto	L1
   655  00035E                     u840:
   656  00035E                     l75:
   657                           
   658                           ;main.c: 85: if (PORTAbits.RA0 == 0)
   659  00035E  B080               	btfsc	3968,0,c	;volatile
   660  000360  D002               	goto	l1482
   661                           
   662                           ;main.c: 86: {
   663                           ;main.c: 88: return 1;
   664  000362  0E01               	movlw	1
   665  000364  0012               	return	
   666  000366                     l1482:
   667                           
   668                           ;main.c: 90: return 0;
   669  000366  0E00               	movlw	0
   670  000368  0012               	return	
   671  00036A                     l73:
   672                           
   673                           ;main.c: 91: }
   674                           ;main.c: 92: }
   675                           ;main.c: 94: if (PORTAbits.RA1 == 0)
   676  00036A  B280               	btfsc	3968,1,c	;volatile
   677  00036C  D028               	goto	l79
   678                           
   679                           ;main.c: 95: {
   680                           ;main.c: 96: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   681  00036E  0E00               	movlw	0
   682  000370  6E2C               	movwf	butnEvent@c_410+1,c
   683  000372  0E00               	movlw	0
   684  000374  6E2B               	movwf	butnEvent@c_410,c
   685  000376  BE2C               	btfsc	butnEvent@c_410+1,7,c
   686  000378  D006               	goto	l1492
   687  00037A  502C               	movf	butnEvent@c_410+1,w,c
   688  00037C  E112               	bnz	l81
   689  00037E  0E0B               	movlw	11
   690  000380  5C2B               	subwf	butnEvent@c_410,w,c
   691  000382  B0D8               	btfsc	status,0,c
   692  000384  D00E               	goto	l81
   693  000386                     l1492:
   694  000386  0E0D               	movlw	13
   695  000388  6E28               	movwf	??_butnEvent& (0+255),c
   696  00038A  0EFC               	movlw	252
   697  00038C                     u1177:
   698  00038C  2EE8               	decfsz	wreg,f,c
   699  00038E  D7FE               	goto	u1177
   700  000390  2E28               	decfsz	??_butnEvent& (0+255),f,c
   701  000392  D7FC               	goto	u1177
   702  000394  4A2B               	infsnz	butnEvent@c_410,f,c
   703  000396  2A2C               	incf	butnEvent@c_410+1,f,c
   704  000398  BE2C               	btfsc	butnEvent@c_410+1,7,c
   705  00039A  D7F5               	goto	l1492
   706  00039C  502C               	movf	butnEvent@c_410+1,w,c
   707  00039E  E101               	bnz	u880
   708  0003A0  D7EE               	goto	L2
   709  0003A2                     u880:
   710  0003A2                     l81:
   711                           
   712                           ;main.c: 97: if (PORTAbits.RA1 == 0)
   713  0003A2  B280               	btfsc	3968,1,c	;volatile
   714  0003A4  D00A               	goto	l1508
   715                           
   716                           ;main.c: 98: {
   717                           ;main.c: 99: PORTBbits.RB1 = 1;
   718  0003A6  8281               	bsf	3969,1,c	;volatile
   719                           
   720                           ;main.c: 100: delay_10ms(20);
   721  0003A8  0E00               	movlw	0
   722  0003AA  6E26               	movwf	delay_10ms@n+1,c
   723  0003AC  0E14               	movlw	20
   724  0003AE  6E25               	movwf	delay_10ms@n,c
   725  0003B0  EC34  F004         	call	_delay_10ms	;wreg free
   726                           
   727                           ;main.c: 101: PORTBbits.RB1 = 0;
   728  0003B4  9281               	bcf	3969,1,c	;volatile
   729                           
   730                           ;main.c: 102: return 2;
   731  0003B6  0E02               	movlw	2
   732  0003B8  0012               	return	
   733  0003BA                     l1508:
   734                           
   735                           ;main.c: 104: return 0;
   736  0003BA  0E00               	movlw	0
   737  0003BC  0012               	return	
   738  0003BE                     l79:
   739                           
   740                           ;main.c: 105: }
   741                           ;main.c: 106: }
   742                           ;main.c: 108: if (PORTBbits.RB0 == 0)
   743  0003BE  B081               	btfsc	3969,0,c	;volatile
   744  0003C0  D020               	goto	l84
   745                           
   746                           ;main.c: 109: {
   747                           ;main.c: 110: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   748  0003C2  0E00               	movlw	0
   749  0003C4  6E2E               	movwf	butnEvent@c_419+1,c
   750  0003C6  0E00               	movlw	0
   751  0003C8  6E2D               	movwf	butnEvent@c_419,c
   752  0003CA  BE2E               	btfsc	butnEvent@c_419+1,7,c
   753  0003CC  D006               	goto	l1518
   754  0003CE  502E               	movf	butnEvent@c_419+1,w,c
   755  0003D0  E112               	bnz	l86
   756  0003D2  0E0B               	movlw	11
   757  0003D4  5C2D               	subwf	butnEvent@c_419,w,c
   758  0003D6  B0D8               	btfsc	status,0,c
   759  0003D8  D00E               	goto	l86
   760  0003DA                     l1518:
   761  0003DA  0E0D               	movlw	13
   762  0003DC  6E28               	movwf	??_butnEvent& (0+255),c
   763  0003DE  0EFC               	movlw	252
   764  0003E0                     u1187:
   765  0003E0  2EE8               	decfsz	wreg,f,c
   766  0003E2  D7FE               	goto	u1187
   767  0003E4  2E28               	decfsz	??_butnEvent& (0+255),f,c
   768  0003E6  D7FC               	goto	u1187
   769  0003E8  4A2D               	infsnz	butnEvent@c_419,f,c
   770  0003EA  2A2E               	incf	butnEvent@c_419+1,f,c
   771  0003EC  BE2E               	btfsc	butnEvent@c_419+1,7,c
   772  0003EE  D7F5               	goto	l1518
   773  0003F0  502E               	movf	butnEvent@c_419+1,w,c
   774  0003F2  E101               	bnz	u920
   775  0003F4  D7EE               	goto	L3
   776  0003F6                     u920:
   777  0003F6                     l86:
   778                           
   779                           ;main.c: 111: if (PORTBbits.RB0 == 0)
   780  0003F6  B081               	btfsc	3969,0,c	;volatile
   781  0003F8  D002               	goto	l1528
   782                           
   783                           ;main.c: 112: {
   784                           ;main.c: 113: return 3;
   785  0003FA  0E03               	movlw	3
   786  0003FC  0012               	return	
   787  0003FE                     l1528:
   788                           
   789                           ;main.c: 115: return 0;
   790  0003FE  0E00               	movlw	0
   791  000400  0012               	return	
   792  000402                     l84:
   793                           
   794                           ;main.c: 116: }
   795                           ;main.c: 117: }
   796                           ;main.c: 119: if (PORTBbits.RB5 == 0)
   797  000402  BA81               	btfsc	3969,5,c	;volatile
   798  000404  D020               	goto	l89
   799                           
   800                           ;main.c: 120: {
   801                           ;main.c: 121: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   802  000406  0E00               	movlw	0
   803  000408  6E30               	movwf	butnEvent@c_420+1,c
   804  00040A  0E00               	movlw	0
   805  00040C  6E2F               	movwf	butnEvent@c_420,c
   806  00040E  BE30               	btfsc	butnEvent@c_420+1,7,c
   807  000410  D006               	goto	l1538
   808  000412  5030               	movf	butnEvent@c_420+1,w,c
   809  000414  E112               	bnz	l91
   810  000416  0E0B               	movlw	11
   811  000418  5C2F               	subwf	butnEvent@c_420,w,c
   812  00041A  B0D8               	btfsc	status,0,c
   813  00041C  D00E               	goto	l91
   814  00041E                     l1538:
   815  00041E  0E0D               	movlw	13
   816  000420  6E28               	movwf	??_butnEvent& (0+255),c
   817  000422  0EFC               	movlw	252
   818  000424                     u1197:
   819  000424  2EE8               	decfsz	wreg,f,c
   820  000426  D7FE               	goto	u1197
   821  000428  2E28               	decfsz	??_butnEvent& (0+255),f,c
   822  00042A  D7FC               	goto	u1197
   823  00042C  4A2F               	infsnz	butnEvent@c_420,f,c
   824  00042E  2A30               	incf	butnEvent@c_420+1,f,c
   825  000430  BE30               	btfsc	butnEvent@c_420+1,7,c
   826  000432  D7F5               	goto	l1538
   827  000434  5030               	movf	butnEvent@c_420+1,w,c
   828  000436  E101               	bnz	u960
   829  000438  D7EE               	goto	L4
   830  00043A                     u960:
   831  00043A                     l91:
   832                           
   833                           ;main.c: 122: if (PORTBbits.RB5 == 0)
   834  00043A  BA81               	btfsc	3969,5,c	;volatile
   835  00043C  D002               	goto	l1548
   836                           
   837                           ;main.c: 123: {
   838                           ;main.c: 124: return 4;
   839  00043E  0E04               	movlw	4
   840  000440  0012               	return	
   841  000442                     l1548:
   842                           
   843                           ;main.c: 126: return 0;
   844  000442  0E00               	movlw	0
   845  000444  0012               	return	
   846  000446                     l89:
   847                           
   848                           ;main.c: 127: }
   849                           ;main.c: 128: }
   850                           ;main.c: 130: if (PORTGbits.RG0 == 0)
   851  000446  B086               	btfsc	3974,0,c	;volatile
   852  000448  D020               	goto	l1572
   853                           
   854                           ;main.c: 131: {
   855                           ;main.c: 132: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   856  00044A  0E00               	movlw	0
   857  00044C  6E32               	movwf	butnEvent@c_427+1,c
   858  00044E  0E00               	movlw	0
   859  000450  6E31               	movwf	butnEvent@c_427,c
   860  000452  BE32               	btfsc	butnEvent@c_427+1,7,c
   861  000454  D006               	goto	l1558
   862  000456  5032               	movf	butnEvent@c_427+1,w,c
   863  000458  E112               	bnz	l96
   864  00045A  0E0B               	movlw	11
   865  00045C  5C31               	subwf	butnEvent@c_427,w,c
   866  00045E  B0D8               	btfsc	status,0,c
   867  000460  D00E               	goto	l96
   868  000462                     l1558:
   869  000462  0E0D               	movlw	13
   870  000464  6E28               	movwf	??_butnEvent& (0+255),c
   871  000466  0EFC               	movlw	252
   872  000468                     u1207:
   873  000468  2EE8               	decfsz	wreg,f,c
   874  00046A  D7FE               	goto	u1207
   875  00046C  2E28               	decfsz	??_butnEvent& (0+255),f,c
   876  00046E  D7FC               	goto	u1207
   877  000470  4A31               	infsnz	butnEvent@c_427,f,c
   878  000472  2A32               	incf	butnEvent@c_427+1,f,c
   879  000474  BE32               	btfsc	butnEvent@c_427+1,7,c
   880  000476  D7F5               	goto	l1558
   881  000478  5032               	movf	butnEvent@c_427+1,w,c
   882  00047A  E101               	bnz	u1000
   883  00047C  D7EE               	goto	L5
   884  00047E                     u1000:
   885  00047E                     l96:
   886                           
   887                           ;main.c: 133: if (PORTGbits.RG0 == 0)
   888  00047E  B086               	btfsc	3974,0,c	;volatile
   889  000480  D002               	goto	l1568
   890                           
   891                           ;main.c: 134: {
   892                           ;main.c: 135: return 5;
   893  000482  0E05               	movlw	5
   894  000484  0012               	return	
   895  000486                     l1568:
   896                           
   897                           ;main.c: 137: return 0;
   898  000486  0E00               	movlw	0
   899  000488  0012               	return	
   900  00048A                     l1572:
   901                           
   902                           ;main.c: 138: }
   903                           ;main.c: 139: }
   904                           ;main.c: 141: return 0;
   905  00048A  0E00               	movlw	0
   906  00048C  0012               	return	
   907  00048E                     __end_of_butnEvent:
   908                           	opt stack 0
   909                           tblptru	equ	0xFF8
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _delay_10ms *****************
   915 ;; Defined at:
   916 ;;		line 562 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  n               2    0[COMRAM] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   930 ;;      Params:         2       0       0       0
   931 ;;      Locals:         0       0       0       0
   932 ;;      Temps:          1       0       0       0
   933 ;;      Totals:         3       0       0       0
   934 ;;Total ram usage:        3 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_butnEvent
   940 ;;		_nextChannel
   941 ;;		_previousChannel
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text5
   946  000868                     __ptext5:
   947                           	opt stack 0
   948  000868                     _delay_10ms:
   949                           	opt stack 29
   950                           
   951                           ;main.c: 563: while (n-- != 0) {
   952                           
   953                           ;incstack = 0
   954  000868  D007               	goto	l1424
   955  00086A                     l1422:
   956                           
   957                           ;main.c: 564: _delay((unsigned long)((12)*(8000000/4000.0)));
   958  00086A  0E20               	movlw	32
   959  00086C  6E27               	movwf	??_delay_10ms& (0+255),c
   960  00086E  0E2A               	movlw	42
   961  000870                     u1217:
   962  000870  2EE8               	decfsz	wreg,f,c
   963  000872  D7FE               	goto	u1217
   964  000874  2E27               	decfsz	??_delay_10ms& (0+255),f,c
   965  000876  D7FC               	goto	u1217
   966  000878                     l1424:
   967  000878  0625               	decf	delay_10ms@n,f,c
   968  00087A  A0D8               	btfss	status,0,c
   969  00087C  0626               	decf	delay_10ms@n+1,f,c
   970  00087E  2825               	incf	delay_10ms@n,w,c
   971  000880  E1F4               	bnz	l1422
   972  000882  2826               	incf	delay_10ms@n+1,w,c
   973  000884  B4D8               	btfsc	status,2,c
   974  000886  0012               	return	
   975  000888  D7F0               	goto	l1422
   976  00088A                     __end_of_delay_10ms:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           postinc0	equ	0xFEE
   980                           wreg	equ	0xFE8
   981                           status	equ	0xFD8
   982                           
   983 ;; *************** function _VolumeUp *****************
   984 ;; Defined at:
   985 ;;		line 474 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  down            1    wreg     unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  down            1    0[COMRAM] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      unsigned char 
   992 ;; Registers used:
   993 ;;		wreg
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   999 ;;      Params:         0       0       0       0
  1000 ;;      Locals:         0       0       0       0
  1001 ;;      Temps:          0       0       0       0
  1002 ;;      Totals:         0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text6
  1013  000922                     __ptext6:
  1014                           	opt stack 0
  1015  000922                     _VolumeUp:
  1016                           	opt stack 30
  1017                           
  1018                           ;main.c: 477: return 0;
  1019                           ;	Return value of _VolumeUp is never used
  1020                           
  1021                           ;incstack = 0
  1022  000922  0012               	return		;funcret
  1023  000924                     __end_of_VolumeUp:
  1024                           	opt stack 0
  1025                           tblptru	equ	0xFF8
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           status	equ	0xFD8
  1029                           
  1030 ;; *************** function _VolumeDown *****************
  1031 ;; Defined at:
  1032 ;;		line 480 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  down            1    wreg     unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  down            1    0[COMRAM] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1046 ;;      Params:         0       0       0       0
  1047 ;;      Locals:         0       0       0       0
  1048 ;;      Temps:          0       0       0       0
  1049 ;;      Totals:         0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text7
  1060  000924                     __ptext7:
  1061                           	opt stack 0
  1062  000924                     _VolumeDown:
  1063                           	opt stack 30
  1064                           
  1065                           ;main.c: 483: return 0;
  1066                           ;	Return value of _VolumeDown is never used
  1067                           
  1068                           ;incstack = 0
  1069  000924  0012               	return		;funcret
  1070  000926                     __end_of_VolumeDown:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function _MuteHard *****************
  1078 ;; Defined at:
  1079 ;;		line 486 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  down            1    wreg     unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  down            1    0[COMRAM] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1093 ;;      Params:         0       0       0       0
  1094 ;;      Locals:         0       0       0       0
  1095 ;;      Temps:          0       0       0       0
  1096 ;;      Totals:         0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text8
  1107  000926                     __ptext8:
  1108                           	opt stack 0
  1109  000926                     _MuteHard:
  1110                           	opt stack 30
  1111                           
  1112                           ;main.c: 489: return 0;
  1113                           ;	Return value of _MuteHard is never used
  1114                           
  1115                           ;incstack = 0
  1116  000926  0012               	return		;funcret
  1117  000928                     __end_of_MuteHard:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _Init *****************
  1125 ;; Defined at:
  1126 ;;		line 178 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  i               2    0        int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       0       0       0
  1142 ;;      Temps:          0       0       0       0
  1143 ;;      Totals:         0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    1
  1147 ;; This function calls:
  1148 ;;		_OpenI2C
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text9
  1155  000732                     __ptext9:
  1156                           	opt stack 0
  1157  000732                     _Init:
  1158                           	opt stack 29
  1159                           
  1160                           ;main.c: 180: int i;
  1161                           ;main.c: 182: OSCCON = 0b01110010;
  1162                           
  1163                           ;incstack = 0
  1164  000732  0E72               	movlw	114
  1165  000734  6ED3               	movwf	4051,c	;volatile
  1166                           
  1167                           ;main.c: 183: LCDSE0 = 0b11111111;
  1168  000736  010F               	movlb	15	; () banked
  1169  000738  695A               	setf	90,b	;volatile
  1170                           
  1171                           ; BSR set to: 15
  1172                           ;main.c: 184: LCDSE1 = 0b11111111;
  1173  00073A  010F               	movlb	15	; () banked
  1174  00073C  695B               	setf	91,b	;volatile
  1175                           
  1176                           ; BSR set to: 15
  1177                           ;main.c: 185: LCDSE2 = 0b11111111;
  1178  00073E  010F               	movlb	15	; () banked
  1179  000740  695C               	setf	92,b	;volatile
  1180                           
  1181                           ;main.c: 186: LCDSE3 = 0b00000000;
  1182  000742  0E00               	movlw	0
  1183  000744  010F               	movlb	15	; () banked
  1184  000746  6F5D               	movwf	93,b	;volatile
  1185                           
  1186                           ;main.c: 187: LCDCON = 0b10001000;
  1187  000748  0E88               	movlw	136
  1188  00074A  010F               	movlb	15	; () banked
  1189  00074C  6F59               	movwf	89,b	;volatile
  1190                           
  1191                           ;main.c: 188: LCDPS = 0b00110110;
  1192  00074E  0E36               	movlw	54
  1193  000750  010F               	movlb	15	; () banked
  1194  000752  6F58               	movwf	88,b	;volatile
  1195                           
  1196                           ;main.c: 189: ADCON1 = 0b00111111;
  1197  000754  0E3F               	movlw	63
  1198  000756  6EC1               	movwf	4033,c	;volatile
  1199                           
  1200                           ;main.c: 190: TRISA = 0b00000011;
  1201  000758  0E03               	movlw	3
  1202  00075A  6E92               	movwf	3986,c	;volatile
  1203                           
  1204                           ;main.c: 191: TRISB = 0b00100001;
  1205  00075C  0E21               	movlw	33
  1206  00075E  6E93               	movwf	3987,c	;volatile
  1207                           
  1208                           ;main.c: 192: TRISC = 0b00011000;
  1209  000760  0E18               	movlw	24
  1210  000762  6E94               	movwf	3988,c	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;main.c: 193: TRISG = 0b11111111;
  1214  000764  6898               	setf	3992,c	;volatile
  1215                           
  1216                           ;main.c: 194: PORTA = 0;
  1217  000766  0E00               	movlw	0
  1218  000768  6E80               	movwf	3968,c	;volatile
  1219                           
  1220                           ;main.c: 195: PORTB = 0;
  1221  00076A  0E00               	movlw	0
  1222  00076C  6E81               	movwf	3969,c	;volatile
  1223                           
  1224                           ;main.c: 196: PORTC = 0;
  1225  00076E  0E00               	movlw	0
  1226  000770  6E82               	movwf	3970,c	;volatile
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;main.c: 197: INTCONbits.TMR0IF = 0;
  1230  000772  94F2               	bcf	intcon,2,c	;volatile
  1231                           
  1232                           ;main.c: 199: T0CON = 0b00001000;
  1233  000774  0E08               	movlw	8
  1234  000776  6ED5               	movwf	4053,c	;volatile
  1235                           
  1236                           ;main.c: 200: TMR0H = 0;
  1237  000778  0E00               	movlw	0
  1238  00077A  6ED7               	movwf	4055,c	;volatile
  1239                           
  1240                           ;main.c: 201: TMR0L = 0;
  1241  00077C  0E00               	movlw	0
  1242  00077E  6ED6               	movwf	4054,c	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245                           ;main.c: 202: T0CONbits.TMR0ON = 1;
  1246  000780  8ED5               	bsf	4053,7,c	;volatile
  1247                           
  1248                           ; BSR set to: 15
  1249                           ;main.c: 203: OpenI2C(0b00001000, 0b10000000);
  1250  000782  0E80               	movlw	128
  1251  000784  6E25               	movwf	OpenI2C@slew,c
  1252  000786  0E08               	movlw	8
  1253  000788  EC45  F004         	call	_OpenI2C
  1254                           
  1255                           ;main.c: 204: SSPADD = 0x3F;
  1256  00078C  0E3F               	movlw	63
  1257  00078E  6EC8               	movwf	4040,c	;volatile
  1258  000790  0012               	return	
  1259  000792                     __end_of_Init:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           intcon	equ	0xFF2
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _OpenI2C *****************
  1268 ;; Defined at:
  1269 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_open.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  sync_mode       1    wreg     unsigned char 
  1272 ;;  slew            1    0[COMRAM] unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1284 ;;      Params:         1       0       0       0
  1285 ;;      Locals:         1       0       0       0
  1286 ;;      Temps:          0       0       0       0
  1287 ;;      Totals:         2       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_Init
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text10
  1298  00088A                     __ptext10:
  1299                           	opt stack 0
  1300  00088A                     _OpenI2C:
  1301                           	opt stack 29
  1302                           
  1303                           ;incstack = 0
  1304                           ;OpenI2C@sync_mode stored from wreg
  1305  00088A  6E26               	movwf	OpenI2C@sync_mode,c
  1306  00088C  0E3F               	movlw	63
  1307  00088E  16C7               	andwf	4039,f,c	;volatile
  1308  000890  0E00               	movlw	0
  1309  000892  6EC6               	movwf	4038,c	;volatile
  1310  000894  0E00               	movlw	0
  1311  000896  6EC5               	movwf	4037,c	;volatile
  1312  000898  5026               	movf	OpenI2C@sync_mode,w,c
  1313  00089A  12C6               	iorwf	4038,f,c	;volatile
  1314  00089C  5025               	movf	OpenI2C@slew,w,c
  1315  00089E  12C7               	iorwf	4039,f,c	;volatile
  1316  0008A0  8694               	bsf	3988,3,c	;volatile
  1317  0008A2  8894               	bsf	3988,4,c	;volatile
  1318  0008A4  8AC6               	bsf	4038,5,c	;volatile
  1319  0008A6  0012               	return		;funcret
  1320  0008A8                     __end_of_OpenI2C:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           intcon	equ	0xFF2
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _FMvers *****************
  1329 ;; Defined at:
  1330 ;;		line 424 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  1333 ;;		 -> main@ui(2), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      unsigned char 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1345 ;;      Params:         2       0       0       0
  1346 ;;      Locals:         0       0       0       0
  1347 ;;      Temps:          0       0       0       0
  1348 ;;      Totals:         2       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    3
  1352 ;; This function calls:
  1353 ;;		_FMread
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text11
  1360  000910                     __ptext11:
  1361                           	opt stack 0
  1362  000910                     _FMvers:
  1363                           	opt stack 27
  1364                           
  1365                           ;main.c: 425: if (FMread(0x1C, vsn) != 0) return 1;
  1366                           
  1367                           ;incstack = 0
  1368  000910  C030  F027         	movff	FMvers@vsn,FMread@data
  1369  000914  C031  F028         	movff	FMvers@vsn+1,FMread@data+1
  1370  000918  0E1C               	movlw	28
  1371  00091A  EC47  F002         	call	_FMread
  1372                           
  1373                           ;	Return value of _FMvers is never used
  1374  00091E  0012               	return	
  1375  000920                     __end_of_FMvers:
  1376                           	opt stack 0
  1377                           tblptru	equ	0xFF8
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _FMinit *****************
  1384 ;; Defined at:
  1385 ;;		line 356 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  dat             2   17[COMRAM] unsigned int 
  1390 ;;  ad              1   19[COMRAM] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1400 ;;      Params:         0       0       0       0
  1401 ;;      Locals:         3       0       0       0
  1402 ;;      Temps:          0       0       0       0
  1403 ;;      Totals:         3       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    4
  1407 ;; This function calls:
  1408 ;;		_FMready
  1409 ;;		_FMwrite
  1410 ;;		_dly
  1411 ;;		_showFreq
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text12
  1418  000558                     __ptext12:
  1419                           	opt stack 0
  1420  000558                     _FMinit:
  1421                           	opt stack 26
  1422                           
  1423                           ;main.c: 358: unsigned char ad;
  1424                           ;main.c: 359: unsigned int dat;
  1425                           ;main.c: 362: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  1426                           
  1427                           ;incstack = 0
  1428  000558  0E00               	movlw	0
  1429  00055A  6E38               	movwf	FMinit@ad,c
  1430  00055C                     l1598:
  1431  00055C  0E11               	movlw	17
  1432  00055E  6438               	cpfsgt	FMinit@ad,c
  1433  000560  D001               	goto	l1602
  1434  000562  D018               	goto	l158
  1435  000564                     l1602:
  1436  000564  5038               	movf	FMinit@ad,w,c
  1437  000566  0D02               	mullw	2
  1438  000568  0E01               	movlw	low _regDflt
  1439  00056A  24F3               	addwf	prodl,w,c
  1440  00056C  6EF6               	movwf	tblptrl,c
  1441  00056E  0E03               	movlw	high _regDflt
  1442  000570  20F4               	addwfc	prodh,w,c
  1443  000572  6EF7               	movwf	tblptrh,c
  1444  000574                     	if	0	;There are less than 3 active tblptr bytes
  1445  000574                     	endif
  1446  000574  5038               	movf	FMinit@ad,w,c
  1447  000576  0D02               	mullw	2
  1448  000578  0E01               	movlw	low _regImg
  1449  00057A  24F3               	addwf	prodl,w,c
  1450  00057C  6ED9               	movwf	fsr2l,c
  1451  00057E  0E00               	movlw	high _regImg
  1452  000580  20F4               	addwfc	prodh,w,c
  1453  000582  6EDA               	movwf	fsr2h,c
  1454  000584  0009               	tblrd		*+
  1455  000586  CFF5 FFDE          	movff	tablat,postinc2
  1456  00058A  0008               	tblrd		*
  1457  00058C  CFF5 FFDD          	movff	tablat,postdec2
  1458  000590  2A38               	incf	FMinit@ad,f,c
  1459  000592  D7E4               	goto	l1598
  1460  000594                     l158:
  1461                           
  1462                           ;main.c: 364: dat = regImg[0];
  1463  000594  C001  F036         	movff	_regImg,FMinit@dat
  1464  000598  C002  F037         	movff	_regImg+1,FMinit@dat+1
  1465                           
  1466                           ;main.c: 365: regImg[0] &= ~1;
  1467  00059C  9001               	bcf	_regImg,0,c
  1468                           
  1469                           ;main.c: 366: if (FMwrite(0) != 0) return 1;
  1470  00059E  0E00               	movlw	0
  1471  0005A0  EC58  F003         	call	_FMwrite
  1472  0005A4  0900               	iorlw	0
  1473  0005A6  B4D8               	btfsc	status,2,c
  1474  0005A8  D002               	goto	l1616
  1475  0005AA  0E01               	movlw	1
  1476  0005AC  0012               	return	
  1477  0005AE                     l1616:
  1478                           
  1479                           ;main.c: 367: for (ad = 1; ad < 18; ad++) {
  1480  0005AE  0E01               	movlw	1
  1481  0005B0  6E38               	movwf	FMinit@ad,c
  1482  0005B2                     l1618:
  1483  0005B2  0E11               	movlw	17
  1484  0005B4  6438               	cpfsgt	FMinit@ad,c
  1485  0005B6  D001               	goto	l1622
  1486  0005B8  D00A               	goto	l1632
  1487  0005BA                     l1622:
  1488                           
  1489                           ;main.c: 368: if (FMwrite(ad) != 0)return 1;
  1490  0005BA  5038               	movf	FMinit@ad,w,c
  1491  0005BC  EC58  F003         	call	_FMwrite
  1492  0005C0  0900               	iorlw	0
  1493  0005C2  B4D8               	btfsc	status,2,c
  1494  0005C4  D002               	goto	l1628
  1495  0005C6  0E01               	movlw	1
  1496  0005C8  0012               	return	
  1497  0005CA                     l1628:
  1498  0005CA  2A38               	incf	FMinit@ad,f,c
  1499  0005CC  D7F2               	goto	l1618
  1500  0005CE                     l1632:
  1501                           
  1502                           ;main.c: 369: }
  1503                           ;main.c: 371: regImg[0] = dat | 1;
  1504  0005CE  0E01               	movlw	1
  1505  0005D0  1036               	iorwf	FMinit@dat,w,c
  1506  0005D2  6E01               	movwf	_regImg,c
  1507  0005D4  5037               	movf	FMinit@dat+1,w,c
  1508  0005D6  6E02               	movwf	_regImg+1,c
  1509                           
  1510                           ;main.c: 372: if (FMwrite(0) != 0) return 1;
  1511  0005D8  0E00               	movlw	0
  1512  0005DA  EC58  F003         	call	_FMwrite
  1513  0005DE  0900               	iorlw	0
  1514  0005E0  B4D8               	btfsc	status,2,c
  1515  0005E2  D002               	goto	l1640
  1516  0005E4  0E01               	movlw	1
  1517  0005E6  0012               	return	
  1518  0005E8                     l1640:
  1519                           
  1520                           ;main.c: 373: dly(20);
  1521  0005E8  0E00               	movlw	0
  1522  0005EA  6E26               	movwf	dly@d+1,c
  1523  0005EC  0E14               	movlw	20
  1524  0005EE  6E25               	movwf	dly@d,c
  1525  0005F0  EC1B  F004         	call	_dly	;wreg free
  1526                           
  1527                           ;main.c: 374: while (FMready(&dat), !dat) dly(2);
  1528  0005F4  D006               	goto	l1644
  1529  0005F6                     l1642:
  1530  0005F6  0E00               	movlw	0
  1531  0005F8  6E26               	movwf	dly@d+1,c
  1532  0005FA  0E02               	movlw	2
  1533  0005FC  6E25               	movwf	dly@d,c
  1534  0005FE  EC1B  F004         	call	_dly	;wreg free
  1535  000602                     l1644:
  1536  000602  0E36               	movlw	low FMinit@dat
  1537  000604  6E30               	movwf	FMready@rdy,c
  1538  000606  0E00               	movlw	high FMinit@dat
  1539  000608  6E31               	movwf	FMready@rdy+1,c
  1540  00060A  ECF8  F003         	call	_FMready	;wreg free
  1541  00060E  5036               	movf	FMinit@dat,w,c
  1542  000610  1037               	iorwf	FMinit@dat+1,w,c
  1543  000612  B4D8               	btfsc	status,2,c
  1544  000614  D7F0               	goto	l1642
  1545                           
  1546                           ;main.c: 375: showFreq();
  1547  000616  EC94  F004         	call	_showFreq	;wreg free
  1548                           
  1549                           ;main.c: 376: return 0;
  1550  00061A  0E00               	movlw	0
  1551  00061C  0012               	return	
  1552  00061E                     __end_of_FMinit:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           intcon	equ	0xFF2
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postinc2	equ	0xFDE
  1564                           postdec2	equ	0xFDD
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _showFreq *****************
  1570 ;; Defined at:
  1571 ;;		line 519 in file "main.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		None
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1585 ;;      Params:         0       0       0       0
  1586 ;;      Locals:         0       0       0       0
  1587 ;;      Temps:          0       0       0       0
  1588 ;;      Totals:         0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_FMinit
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text13
  1599  000928                     __ptext13:
  1600                           	opt stack 0
  1601  000928                     _showFreq:
  1602                           	opt stack 29
  1603                           
  1604                           ;main.c: 521: ;
  1605                           ;main.c: 522: return 0;
  1606                           ;	Return value of _showFreq is never used
  1607                           
  1608                           ;incstack = 0
  1609  000928  0012               	return		;funcret
  1610  00092A                     __end_of_showFreq:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           intcon	equ	0xFF2
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postinc2	equ	0xFDE
  1622                           postdec2	equ	0xFDD
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _dly *****************
  1628 ;; Defined at:
  1629 ;;		line 147 in file "main.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  d               2    0[COMRAM] int 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  i               2    2[COMRAM] int 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1643 ;;      Params:         2       0       0       0
  1644 ;;      Locals:         2       0       0       0
  1645 ;;      Temps:          0       0       0       0
  1646 ;;      Totals:         4       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_FMinit
  1653 ;;		_main
  1654 ;;		_FMfrequenc
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text14
  1659  000836                     __ptext14:
  1660                           	opt stack 0
  1661  000836                     _dly:
  1662                           	opt stack 30
  1663                           
  1664                           ;main.c: 149: int i = 0;
  1665                           
  1666                           ;incstack = 0
  1667  000836  0E00               	movlw	0
  1668  000838  6E28               	movwf	dly@i+1,c
  1669  00083A  0E00               	movlw	0
  1670  00083C  6E27               	movwf	dly@i,c
  1671                           
  1672                           ;main.c: 151: for (; d; --d)
  1673  00083E  D00F               	goto	l1436
  1674  000840                     l1428:
  1675                           
  1676                           ;main.c: 152: for (i = 100; i; --i);
  1677  000840  0E00               	movlw	0
  1678  000842  6E28               	movwf	dly@i+1,c
  1679  000844  0E64               	movlw	100
  1680  000846  6E27               	movwf	dly@i,c
  1681  000848  D003               	goto	l1432
  1682  00084A                     l1430:
  1683  00084A  0627               	decf	dly@i,f,c
  1684  00084C  A0D8               	btfss	status,0,c
  1685  00084E  0628               	decf	dly@i+1,f,c
  1686  000850                     l1432:
  1687  000850  5027               	movf	dly@i,w,c
  1688  000852  1028               	iorwf	dly@i+1,w,c
  1689  000854  A4D8               	btfss	status,2,c
  1690  000856  D7F9               	goto	l1430
  1691  000858  0625               	decf	dly@d,f,c
  1692  00085A  A0D8               	btfss	status,0,c
  1693  00085C  0626               	decf	dly@d+1,f,c
  1694  00085E                     l1436:
  1695  00085E  5025               	movf	dly@d,w,c
  1696  000860  1026               	iorwf	dly@d+1,w,c
  1697  000862  B4D8               	btfsc	status,2,c
  1698  000864  0012               	return	
  1699  000866  D7EC               	goto	l1428
  1700  000868                     __end_of_dly:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodh	equ	0xFF4
  1707                           prodl	equ	0xFF3
  1708                           intcon	equ	0xFF2
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postinc2	equ	0xFDE
  1712                           postdec2	equ	0xFDD
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _FMwrite *****************
  1718 ;; Defined at:
  1719 ;;		line 246 in file "main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  adr             1    wreg     unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  adr             1    6[COMRAM] unsigned char 
  1724 ;;  regstr          2    0        unsigned int 
  1725 ;;  secndByt        1    5[COMRAM] unsigned char 
  1726 ;;  firstByt        1    4[COMRAM] unsigned char 
  1727 ;;  rpy             1    0        unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1737 ;;      Params:         0       0       0       0
  1738 ;;      Locals:         3       0       0       0
  1739 ;;      Temps:          2       0       0       0
  1740 ;;      Totals:         5       0       0       0
  1741 ;;Total ram usage:        5 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    2
  1744 ;; This function calls:
  1745 ;;		_IdleI2C
  1746 ;;		_WriteI2C
  1747 ;; This function is called by:
  1748 ;;		_FMinit
  1749 ;;		_FMfrequenc
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text15
  1754  0006B0                     __ptext15:
  1755                           	opt stack 0
  1756  0006B0                     _FMwrite:
  1757                           	opt stack 27
  1758                           
  1759                           ;incstack = 0
  1760                           ;FMwrite@adr stored from wreg
  1761  0006B0  6E2B               	movwf	FMwrite@adr,c
  1762                           
  1763                           ;main.c: 248: unsigned int regstr;
  1764                           ;main.c: 249: unsigned char firstByt;
  1765                           ;main.c: 250: unsigned char secndByt;
  1766                           ;main.c: 251: unsigned char rpy;
  1767                           ;main.c: 253: firstByt = regImg[adr] >> 8;
  1768  0006B2  502B               	movf	FMwrite@adr,w,c
  1769  0006B4  0D02               	mullw	2
  1770  0006B6  0E01               	movlw	low _regImg
  1771  0006B8  24F3               	addwf	prodl,w,c
  1772  0006BA  6ED9               	movwf	fsr2l,c
  1773  0006BC  0E00               	movlw	high _regImg
  1774  0006BE  20F4               	addwfc	prodh,w,c
  1775  0006C0  6EDA               	movwf	fsr2h,c
  1776  0006C2  CFDE F027          	movff	postinc2,??_FMwrite
  1777  0006C6  CFDD F028          	movff	postdec2,??_FMwrite+1
  1778  0006CA  C028  F027         	movff	??_FMwrite+1,??_FMwrite
  1779  0006CE  6A28               	clrf	??_FMwrite+1,c
  1780  0006D0  5027               	movf	??_FMwrite,w,c
  1781  0006D2  6E29               	movwf	FMwrite@firstByt,c
  1782                           
  1783                           ;main.c: 254: secndByt = regImg[adr];
  1784  0006D4  502B               	movf	FMwrite@adr,w,c
  1785  0006D6  0D02               	mullw	2
  1786  0006D8  0E01               	movlw	low _regImg
  1787  0006DA  24F3               	addwf	prodl,w,c
  1788  0006DC  6ED9               	movwf	fsr2l,c
  1789  0006DE  0E00               	movlw	high _regImg
  1790  0006E0  20F4               	addwfc	prodh,w,c
  1791  0006E2  6EDA               	movwf	fsr2h,c
  1792  0006E4  50DF               	movf	indf2,w,c
  1793  0006E6  6E2A               	movwf	FMwrite@secndByt,c
  1794                           
  1795                           ;main.c: 256: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1796  0006E8  80C5               	bsf	4037,0,c	;volatile
  1797  0006EA                     l124:
  1798  0006EA  B0C5               	btfsc	4037,0,c	;volatile
  1799  0006EC  D7FE               	goto	l124
  1800                           
  1801                           ;main.c: 257: IdleI2C();
  1802  0006EE  EC7F  F004         	call	_IdleI2C	;wreg free
  1803                           
  1804                           ;main.c: 260: if (WriteI2C(0x20)) return 1;
  1805  0006F2  0E20               	movlw	32
  1806  0006F4  ECC9  F003         	call	_WriteI2C
  1807  0006F8  0900               	iorlw	0
  1808  0006FA  B4D8               	btfsc	status,2,c
  1809  0006FC  D002               	goto	l1054
  1810  0006FE  0E01               	movlw	1
  1811  000700  0012               	return	
  1812  000702                     l1054:
  1813                           
  1814                           ;main.c: 261: IdleI2C();
  1815  000702  EC7F  F004         	call	_IdleI2C	;wreg free
  1816                           
  1817                           ;main.c: 262: WriteI2C(adr);
  1818  000706  502B               	movf	FMwrite@adr,w,c
  1819  000708  ECC9  F003         	call	_WriteI2C
  1820                           
  1821                           ;main.c: 263: IdleI2C();
  1822  00070C  EC7F  F004         	call	_IdleI2C	;wreg free
  1823                           
  1824                           ;main.c: 264: WriteI2C(firstByt);
  1825  000710  5029               	movf	FMwrite@firstByt,w,c
  1826  000712  ECC9  F003         	call	_WriteI2C
  1827                           
  1828                           ;main.c: 265: IdleI2C();
  1829  000716  EC7F  F004         	call	_IdleI2C	;wreg free
  1830                           
  1831                           ;main.c: 266: WriteI2C(secndByt);
  1832  00071A  502A               	movf	FMwrite@secndByt,w,c
  1833  00071C  ECC9  F003         	call	_WriteI2C
  1834                           
  1835                           ;main.c: 267: IdleI2C();
  1836  000720  EC7F  F004         	call	_IdleI2C	;wreg free
  1837                           
  1838                           ;main.c: 268: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1839  000724  84C5               	bsf	4037,2,c	;volatile
  1840  000726                     l129:
  1841  000726  B4C5               	btfsc	4037,2,c	;volatile
  1842  000728  D7FE               	goto	l129
  1843                           
  1844                           ;main.c: 269: IdleI2C();
  1845  00072A  EC7F  F004         	call	_IdleI2C	;wreg free
  1846                           
  1847                           ;main.c: 270: return 0;
  1848  00072E  0E00               	movlw	0
  1849  000730  0012               	return	
  1850  000732                     __end_of_FMwrite:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _FMready *****************
  1869 ;; Defined at:
  1870 ;;		line 336 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  1873 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  sts             2   15[COMRAM] unsigned int 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1885 ;;      Params:         2       0       0       0
  1886 ;;      Locals:         2       0       0       0
  1887 ;;      Temps:          2       0       0       0
  1888 ;;      Totals:         6       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    3
  1892 ;; This function calls:
  1893 ;;		_FMread
  1894 ;; This function is called by:
  1895 ;;		_FMinit
  1896 ;;		_FMfrequenc
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text16
  1901  0007F0                     __ptext16:
  1902                           	opt stack 0
  1903  0007F0                     _FMready:
  1904                           	opt stack 26
  1905                           
  1906                           ;main.c: 338: unsigned int sts;
  1907                           ;main.c: 340: if (FMread(0x13, &sts) != 0) return 1;
  1908                           
  1909                           ;incstack = 0
  1910  0007F0  0E34               	movlw	low FMready@sts
  1911  0007F2  6E27               	movwf	FMread@data,c
  1912  0007F4  0E00               	movlw	high FMready@sts
  1913  0007F6  6E28               	movwf	FMread@data+1,c
  1914  0007F8  0E13               	movlw	19
  1915  0007FA  EC47  F002         	call	_FMread
  1916  0007FE  0900               	iorlw	0
  1917  000800  B4D8               	btfsc	status,2,c
  1918  000802  D002               	goto	l1456
  1919  000804  0E01               	movlw	1
  1920  000806  0012               	return	
  1921  000808                     l1456:
  1922                           
  1923                           ;main.c: 341: sts &= 0x0020;
  1924  000808  0E20               	movlw	32
  1925  00080A  1634               	andwf	FMready@sts,f,c
  1926  00080C  0E00               	movlw	0
  1927  00080E  1635               	andwf	FMready@sts+1,f,c
  1928                           
  1929                           ;main.c: 342: *rdy = sts ? 1 : 0;
  1930  000810  5034               	movf	FMready@sts,w,c
  1931  000812  1035               	iorwf	FMready@sts+1,w,c
  1932  000814  B4D8               	btfsc	status,2,c
  1933  000816  D002               	goto	u800
  1934  000818  0E01               	movlw	1
  1935  00081A  D001               	goto	u810
  1936  00081C                     u800:
  1937  00081C  0E00               	movlw	0
  1938  00081E                     u810:
  1939  00081E  6E32               	movwf	??_FMready& (0+255),c
  1940  000820  6A33               	clrf	(??_FMready+1)& (0+255),c
  1941  000822  C030  FFD9         	movff	FMready@rdy,fsr2l
  1942  000826  C031  FFDA         	movff	FMready@rdy+1,fsr2h
  1943  00082A  C032  FFDE         	movff	??_FMready,postinc2
  1944  00082E  C033  FFDD         	movff	??_FMready+1,postdec2
  1945                           
  1946                           ;main.c: 343: return 0;
  1947  000832  0E00               	movlw	0
  1948  000834  0012               	return	
  1949  000836                     __end_of_FMready:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           indf2	equ	0xFDF
  1961                           postinc2	equ	0xFDE
  1962                           postdec2	equ	0xFDD
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function _FMread *****************
  1968 ;; Defined at:
  1969 ;;		line 288 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  regAddr         1    wreg     unsigned char 
  1972 ;;  data            2    2[COMRAM] PTR unsigned int 
  1973 ;;		 -> main@ui(2), FMready@sts(2), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  regAddr         1    8[COMRAM] unsigned char 
  1976 ;;  secndByt        1   10[COMRAM] unsigned char 
  1977 ;;  firstByt        1    9[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      unsigned char 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1987 ;;      Params:         2       0       0       0
  1988 ;;      Locals:         3       0       0       0
  1989 ;;      Temps:          4       0       0       0
  1990 ;;      Totals:         9       0       0       0
  1991 ;;Total ram usage:        9 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		_IdleI2C
  1996 ;;		_ReadI2C
  1997 ;;		_WriteI2C
  1998 ;; This function is called by:
  1999 ;;		_FMready
  2000 ;;		_FMvers
  2001 ;;		_FMid
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text17
  2006  00048E                     __ptext17:
  2007                           	opt stack 0
  2008  00048E                     _FMread:
  2009                           	opt stack 27
  2010                           
  2011                           ;incstack = 0
  2012                           ;FMread@regAddr stored from wreg
  2013  00048E  6E2D               	movwf	FMread@regAddr,c
  2014                           
  2015                           ;main.c: 290: unsigned char firstByt;
  2016                           ;main.c: 291: unsigned char secndByt;
  2017                           ;main.c: 293: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2018  000490  80C5               	bsf	4037,0,c	;volatile
  2019  000492                     l134:
  2020  000492  B0C5               	btfsc	4037,0,c	;volatile
  2021  000494  D7FE               	goto	l134
  2022                           
  2023                           ;main.c: 294: IdleI2C();
  2024  000496  EC7F  F004         	call	_IdleI2C	;wreg free
  2025                           
  2026                           ;main.c: 297: if (WriteI2C(0x20)) return 1;
  2027  00049A  0E20               	movlw	32
  2028  00049C  ECC9  F003         	call	_WriteI2C
  2029  0004A0  0900               	iorlw	0
  2030  0004A2  B4D8               	btfsc	status,2,c
  2031  0004A4  D002               	goto	l1388
  2032  0004A6  0E01               	movlw	1
  2033  0004A8  0012               	return	
  2034  0004AA                     l1388:
  2035                           
  2036                           ;main.c: 298: IdleI2C();
  2037  0004AA  EC7F  F004         	call	_IdleI2C	;wreg free
  2038                           
  2039                           ;main.c: 299: WriteI2C(regAddr);
  2040  0004AE  502D               	movf	FMread@regAddr,w,c
  2041  0004B0  ECC9  F003         	call	_WriteI2C
  2042                           
  2043                           ;main.c: 300: IdleI2C();
  2044  0004B4  EC7F  F004         	call	_IdleI2C	;wreg free
  2045                           
  2046                           ;main.c: 301: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2047  0004B8  82C5               	bsf	4037,1,c	;volatile
  2048  0004BA                     l139:
  2049  0004BA  B2C5               	btfsc	4037,1,c	;volatile
  2050  0004BC  D7FE               	goto	l139
  2051                           
  2052                           ;main.c: 302: IdleI2C();
  2053  0004BE  EC7F  F004         	call	_IdleI2C	;wreg free
  2054                           
  2055                           ;main.c: 303: WriteI2C(0x20 + 0x01);
  2056  0004C2  0E21               	movlw	33
  2057  0004C4  ECC9  F003         	call	_WriteI2C
  2058                           
  2059                           ;main.c: 304: IdleI2C();
  2060  0004C8  EC7F  F004         	call	_IdleI2C	;wreg free
  2061                           
  2062                           ;main.c: 305: firstByt = ReadI2C();
  2063  0004CC  EC54  F004         	call	_ReadI2C	;wreg free
  2064  0004D0  6E2E               	movwf	FMread@firstByt,c
  2065                           
  2066                           ;main.c: 306: IdleI2C();
  2067  0004D2  EC7F  F004         	call	_IdleI2C	;wreg free
  2068                           
  2069                           ;main.c: 307: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2070  0004D6  9AC5               	bcf	4037,5,c	;volatile
  2071  0004D8  88C5               	bsf	4037,4,c	;volatile
  2072  0004DA                     l142:
  2073  0004DA  B8C5               	btfsc	4037,4,c	;volatile
  2074  0004DC  D7FE               	goto	l142
  2075                           
  2076                           ;main.c: 308: IdleI2C();
  2077  0004DE  EC7F  F004         	call	_IdleI2C	;wreg free
  2078                           
  2079                           ;main.c: 309: secndByt = ReadI2C();
  2080  0004E2  EC54  F004         	call	_ReadI2C	;wreg free
  2081  0004E6  6E2F               	movwf	FMread@secndByt,c
  2082                           
  2083                           ;main.c: 310: IdleI2C();
  2084  0004E8  EC7F  F004         	call	_IdleI2C	;wreg free
  2085                           
  2086                           ;main.c: 311: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2087  0004EC  8AC5               	bsf	4037,5,c	;volatile
  2088  0004EE  88C5               	bsf	4037,4,c	;volatile
  2089  0004F0                     l145:
  2090  0004F0  B8C5               	btfsc	4037,4,c	;volatile
  2091  0004F2  D7FE               	goto	l145
  2092                           
  2093                           ;main.c: 312: IdleI2C();
  2094  0004F4  EC7F  F004         	call	_IdleI2C	;wreg free
  2095                           
  2096                           ;main.c: 313: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2097  0004F8  84C5               	bsf	4037,2,c	;volatile
  2098  0004FA                     l148:
  2099  0004FA  B4C5               	btfsc	4037,2,c	;volatile
  2100  0004FC  D7FE               	goto	l148
  2101                           
  2102                           ;main.c: 314: IdleI2C();
  2103  0004FE  EC7F  F004         	call	_IdleI2C	;wreg free
  2104                           
  2105                           ;main.c: 315: *data = firstByt;
  2106  000502  502E               	movf	FMread@firstByt,w,c
  2107  000504  6E29               	movwf	??_FMread& (0+255),c
  2108  000506  6A2A               	clrf	(??_FMread+1)& (0+255),c
  2109  000508  C027  FFD9         	movff	FMread@data,fsr2l
  2110  00050C  C028  FFDA         	movff	FMread@data+1,fsr2h
  2111  000510  C029  FFDE         	movff	??_FMread,postinc2
  2112  000514  C02A  FFDD         	movff	??_FMread+1,postdec2
  2113                           
  2114                           ;main.c: 316: *data <<= 8;
  2115  000518  C027  FFD9         	movff	FMread@data,fsr2l
  2116  00051C  C028  FFDA         	movff	FMread@data+1,fsr2h
  2117  000520  50DE               	movf	postinc2,w,c
  2118  000522  6EDD               	movwf	postdec2,c
  2119  000524  6ADF               	clrf	indf2,c
  2120                           
  2121                           ;main.c: 317: *data = *data | secndByt;
  2122  000526  C027  FFD9         	movff	FMread@data,fsr2l
  2123  00052A  C028  FFDA         	movff	FMread@data+1,fsr2h
  2124  00052E  CFDE F029          	movff	postinc2,??_FMread
  2125  000532  CFDD F02A          	movff	postdec2,??_FMread+1
  2126  000536  502F               	movf	FMread@secndByt,w,c
  2127  000538  6E2B               	movwf	(??_FMread+2)& (0+255),c
  2128  00053A  6A2C               	clrf	(??_FMread+3)& (0+255),c
  2129  00053C  5029               	movf	??_FMread,w,c
  2130  00053E  122B               	iorwf	??_FMread+2,f,c
  2131  000540  502A               	movf	??_FMread+1,w,c
  2132  000542  122C               	iorwf	??_FMread+3,f,c
  2133  000544  C027  FFD9         	movff	FMread@data,fsr2l
  2134  000548  C028  FFDA         	movff	FMread@data+1,fsr2h
  2135  00054C  C02B  FFDE         	movff	??_FMread+2,postinc2
  2136  000550  C02C  FFDD         	movff	??_FMread+3,postdec2
  2137                           
  2138                           ;main.c: 319: return 0;
  2139  000554  0E00               	movlw	0
  2140  000556  0012               	return	
  2141  000558                     __end_of_FMread:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           postdec2	equ	0xFDD
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _WriteI2C *****************
  2160 ;; Defined at:
  2161 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_writ.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  data_out        1    wreg     unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  data_out        1    1[COMRAM] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      char 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       0       0       0
  2176 ;;      Locals:         1       0       0       0
  2177 ;;      Temps:          0       0       0       0
  2178 ;;      Totals:         1       0       0       0
  2179 ;;Total ram usage:        1 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    1
  2182 ;; This function calls:
  2183 ;;		_IdleI2C
  2184 ;; This function is called by:
  2185 ;;		_FMwrite
  2186 ;;		_FMread
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text18
  2191  000792                     __ptext18:
  2192                           	opt stack 0
  2193  000792                     _WriteI2C:
  2194                           	opt stack 27
  2195                           
  2196                           ;incstack = 0
  2197                           ;WriteI2C@data_out stored from wreg
  2198  000792  6E26               	movwf	WriteI2C@data_out,c
  2199  000794  C026  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2200  000798  AEC6               	btfss	4038,7,c	;volatile
  2201  00079A  D002               	goto	l930
  2202  00079C  0EFF               	movlw	255
  2203  00079E  0012               	return	
  2204  0007A0                     l930:
  2205  0007A0  50C6               	movf	4038,w,c	;volatile
  2206  0007A2  0B0F               	andlw	15
  2207  0007A4  0A08               	xorlw	8
  2208  0007A6  B4D8               	btfsc	status,2,c
  2209  0007A8  D00F               	goto	l948
  2210  0007AA  50C6               	movf	4038,w,c	;volatile
  2211  0007AC  0B0F               	andlw	15
  2212  0007AE  0A0B               	xorlw	11
  2213  0007B0  B4D8               	btfsc	status,2,c
  2214  0007B2  D00A               	goto	l948
  2215  0007B4  88C6               	bsf	4038,4,c	;volatile
  2216  0007B6                     l287:
  2217  0007B6  A69E               	btfss	3998,3,c	;volatile
  2218  0007B8  D7FE               	goto	l287
  2219  0007BA  A4C7               	btfss	4039,2,c	;volatile
  2220  0007BC  B0C7               	btfsc	4039,0,c	;volatile
  2221  0007BE  D002               	goto	l944
  2222  0007C0  0EFE               	movlw	254
  2223  0007C2  0012               	return	
  2224  0007C4                     l944:
  2225  0007C4  0E00               	movlw	0
  2226  0007C6  0012               	return	
  2227  0007C8                     l948:
  2228  0007C8  50C6               	movf	4038,w,c	;volatile
  2229  0007CA  0B0F               	andlw	15
  2230  0007CC  0A08               	xorlw	8
  2231  0007CE  B4D8               	btfsc	status,2,c
  2232  0007D0  D005               	goto	l296
  2233  0007D2  50C6               	movf	4038,w,c	;volatile
  2234  0007D4  0B0F               	andlw	15
  2235  0007D6  0A0B               	xorlw	11
  2236  0007D8  A4D8               	btfss	status,2,c
  2237  0007DA  0012               	return	
  2238  0007DC                     l296:
  2239  0007DC  B0C7               	btfsc	4039,0,c	;volatile
  2240  0007DE  D7FE               	goto	l296
  2241  0007E0  EC7F  F004         	call	_IdleI2C	;wreg free
  2242  0007E4  ACC5               	btfss	4037,6,c	;volatile
  2243  0007E6  D002               	goto	l962
  2244  0007E8  0EFE               	movlw	254
  2245  0007EA  0012               	return	
  2246  0007EC                     l962:
  2247  0007EC  0E00               	movlw	0
  2248  0007EE  0012               	return	
  2249  0007F0                     __end_of_WriteI2C:
  2250                           	opt stack 0
  2251                           tblptru	equ	0xFF8
  2252                           tblptrh	equ	0xFF7
  2253                           tblptrl	equ	0xFF6
  2254                           tablat	equ	0xFF5
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           indf2	equ	0xFDF
  2261                           postinc2	equ	0xFDE
  2262                           postdec2	equ	0xFDD
  2263                           fsr2h	equ	0xFDA
  2264                           fsr2l	equ	0xFD9
  2265                           status	equ	0xFD8
  2266                           
  2267 ;; *************** function _IdleI2C *****************
  2268 ;; Defined at:
  2269 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_idle.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2283 ;;      Params:         0       0       0       0
  2284 ;;      Locals:         0       0       0       0
  2285 ;;      Temps:          1       0       0       0
  2286 ;;      Totals:         1       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_FMwrite
  2293 ;;		_FMread
  2294 ;;		_WriteI2C
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text19
  2299  0008FE                     __ptext19:
  2300                           	opt stack 0
  2301  0008FE                     _IdleI2C:
  2302                           	opt stack 27
  2303  0008FE                     l916:
  2304  0008FE  CFC5 F025          	movff	4037,??_IdleI2C	;volatile
  2305  000902  0E1F               	movlw	31
  2306  000904  1625               	andwf	??_IdleI2C,f,c
  2307  000906  A4D8               	btfss	status,2,c
  2308  000908  D7FA               	goto	l916
  2309  00090A  A4C7               	btfss	4039,2,c	;volatile
  2310  00090C  0012               	return	
  2311  00090E  D7F7               	goto	l916
  2312  000910                     __end_of_IdleI2C:
  2313                           	opt stack 0
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           prodh	equ	0xFF4
  2319                           prodl	equ	0xFF3
  2320                           intcon	equ	0xFF2
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _ReadI2C *****************
  2331 ;; Defined at:
  2332 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_read.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      unsigned char 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2346 ;;      Params:         0       0       0       0
  2347 ;;      Locals:         0       0       0       0
  2348 ;;      Temps:          0       0       0       0
  2349 ;;      Totals:         0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_FMread
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text20
  2360  0008A8                     __ptext20:
  2361                           	opt stack 0
  2362  0008A8                     _ReadI2C:
  2363                           	opt stack 28
  2364                           
  2365                           ;incstack = 0
  2366  0008A8  50C6               	movf	4038,w,c	;volatile
  2367  0008AA  0B0F               	andlw	15
  2368  0008AC  0A08               	xorlw	8
  2369  0008AE  B4D8               	btfsc	status,2,c
  2370  0008B0  D004               	goto	l262
  2371  0008B2  50C6               	movf	4038,w,c	;volatile
  2372  0008B4  0B0F               	andlw	15
  2373  0008B6  0A0B               	xorlw	11
  2374  0008B8  B4D8               	btfsc	status,2,c
  2375  0008BA                     l262:
  2376  0008BA  86C5               	bsf	4037,3,c	;volatile
  2377  0008BC                     l263:
  2378  0008BC  A0C7               	btfss	4039,0,c	;volatile
  2379  0008BE  D7FE               	goto	l263
  2380  0008C0  50C9               	movf	4041,w,c	;volatile
  2381  0008C2  0012               	return	
  2382  0008C4                     __end_of_ReadI2C:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           indf2	equ	0xFDF
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon	equ	0xFF2
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           indf2	equ	0xFDF
  2409                           postinc2	equ	0xFDE
  2410                           postdec2	equ	0xFDD
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8
  2414                           
  2415                           	psect	rparam
  2416  0000                     tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           prodh	equ	0xFF4
  2421                           prodl	equ	0xFF3
  2422                           intcon	equ	0xFF2
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           indf2	equ	0xFDF
  2426                           postinc2	equ	0xFDE
  2427                           postdec2	equ	0xFDD
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FMinit
    _previousChannel->_delay_10ms
    _nextChannel->_delay_10ms
    _butnEvent->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2993
                                             20 COMRAM     3     3      0
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0     214
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0     214
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           11    11      0     444
                                              3 COMRAM    11    11      0
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     214
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     449
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1186
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dly                                                  4     2      2     304
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _FMready                                              6     4      2     565
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (2) _FMread                                               9     7      2     363
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _VolumeDown
   _VolumeUp
   _butnEvent
     _delay_10ms
   _dly
   _errfm
   _nextChannel
     _delay_10ms
   _previousChannel
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       8        0.0%
DATA                 0      0      3B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Feb 17 00:23:55 2017

             __CFG_CP$OFF 000000               _SSPSTATbits 000FC7                        l81 03A2  
                      l73 036A                        l91 043A                        l75 035E  
                      l84 0402                        l86 03F6                        l79 03BE  
                      l96 047E                        l89 0446               __CFG_BORV$3 000000  
                     l201 0920                       l124 06EA                       l142 04DA  
                     l134 0492                       l145 04F0                       l129 0726  
                     l139 04BA                       l148 04FA                       l262 08BA  
                     l158 0594                       l263 08BC                       l287 07B6  
                     l296 07DC                       l930 07A0                       l916 08FE  
                     l944 07C4                       l962 07EC                       l948 07C8  
                     u800 081C                       u810 081E                       u920 03F6  
                     u840 035E                       u960 043A                       u880 03A2  
                     _dly 0836                       prod 000FF3                       wreg 000FE8  
            __CFG_WDT$OFF 000000                      l1054 0702                      l1430 084A  
                    l1422 086A                      l1432 0850                      l1424 0878  
                    l1602 0564                      l1428 0840                      l1436 085E  
                    l1508 03BA                      l1622 05BA                      l1518 03DA  
                    l1456 0808                      l1640 05E8                      l1632 05CE  
                    l1616 05AE                      l1528 03FE                      l1472 0342  
                    l1720 0672                      l1712 0656                      l1642 05F6  
                    l1618 05B2                      l1538 041E                      l1482 0366  
                    l1722 067A                      l1714 065E                      l1388 04AA  
                    l1644 0602                      l1628 05CA                      l1572 048A  
                    l1548 0442                      l1492 0386                      l1724 0682  
                    l1716 0664                      l1558 0462                      l1718 066A  
                    l1568 0486                      l1728 0688                      l1598 055C  
                    ?_dly 0025                      u1000 047E                      u1140 0646  
                    u1207 0468                      u1217 0870                      u1167 0348  
                    u1177 038C                      u1187 03E0                      u1197 0424  
                    _Init 0732            VolumeDown@down 0025           __end_of_FMready 0836  
                    _main 061E                      dly@d 0025                      dly@i 0027  
                    fsr2h 000FDA                      indf2 000FDF                      fsr2l 000FD9  
         __end_of_FMwrite 0732                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_IESO$OFF 000000           __end_of_IdleI2C 0910  
           __CFG_MCLRE$ON 000000              ___param_bank 000010           __end_of_ReadI2C 08C4  
         __end_of_OpenI2C 08A8                     ??_dly 0027                     ?_Init 0025  
                   ?_main 0025                     _T0CON 000FD5                     _LCDPS 000F58  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTC 000F82                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISG 000F98  
           __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000           __end_of_regDflt 0325  
                   _errfm 0920            __CFG_BOREN$OFF 000000                     tablat 000FF5  
                   status 000FD8              ?_nextChannel 0025           __initialization 08C4  
            __end_of_Init 0792              __end_of_main 06B0                    ??_Init 0027  
                  ??_main 0039             __activetblptr 000002          __end_of_MuteHard 0928  
                  _ADCON1 000FC1                 ??_FMready 0032                    ?_errfm 0025  
        __end_of_WriteI2C 07F0                 ??_FMwrite 0027          __end_of_VolumeUp 0924  
                  _LCDCON 000F59                    _LCDSE0 000F5A                    _LCDSE1 000F5B  
                  _LCDSE2 000F5C                    _LCDSE3 000F5D               OpenI2C@slew 0025  
               ??_IdleI2C 0025                    _OSCCON 000FD3                    _FMinit 0558  
                  _FMread 048E                    _SSPADD 000FC8                    _SSPBUF 000FC9  
                  _FMvers 0910                 ??_ReadI2C 0025                 ??_OpenI2C 0026  
          __CFG_XINST$OFF 000000                    _regImg 0001                    clear_0 08CA  
                  main@ui 003A          __end_of_showFreq 092A              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 08D0             ___rparam_used 000001  
              _VolumeDown 0924              VolumeUp@down 0025            __pcstackCOMRAM 0025  
           __end_of_errfm 0922           __CFG_OSC$INTIO7 000000                   ??_errfm 0025  
__size_of_previousChannel 0012        __size_of_butnEvent 0168                _delay_10ms 0868  
                 ?_FMinit 0025                   ?_FMread 0027                   ?_FMvers 0030  
               ?_MuteHard 0025      __size_of_nextChannel 0012                 ?_WriteI2C 0025  
               ?_VolumeUp 0025                 FMinit@dat 0036                   _FMready 07F0  
                 _SSPCON1 000FC6                   _SSPCON2 000FC5                   _SSPSTAT 000FC7  
                 _FMwrite 06B0                   _IdleI2C 08FE           __size_of_FMinit 00C6  
         __size_of_FMread 00CA                 FMvers@vsn 0030                   _ReadI2C 08A8  
         __size_of_FMvers 0010                   _OpenI2C 088A                   __Hparam 0000  
                 __Lparam 0000               ?_VolumeDown 0025                ??_MuteHard 0025  
               ?_showFreq 0025              __psmallconst 0300           __CFG_STVREN$OFF 000000  
                 __pcinit 08C4                ??_WriteI2C 0026         __end_of_butnEvent 048E  
              ??_VolumeUp 0025                   __ramtop 0300                   __ptext0 061E  
                 __ptext1 08DA                   __ptext2 08EC                   __ptext3 0920  
                 __ptext4 0326                   __ptext5 0868                   __ptext6 0922  
                 __ptext7 0924                   __ptext8 0926                   __ptext9 0732  
               _T0CONbits 000FD5                   _regDflt 0301              __size_of_dly 0032  
                 main@evt 0039      end_of_initialization 08D0               ?_delay_10ms 0025  
           __Lmediumconst 0000         ??_previousChannel 0028                ??_showFreq 0025  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _PORTAbits 000F80                 _PORTBbits 000F81                 _PORTGbits 000F86  
               _TRISCbits 000F94       __size_of_VolumeDown 0002            __end_of_FMinit 061E  
          __end_of_FMread 0558            __end_of_FMvers 0920       __size_of_delay_10ms 0022  
              butnEvent@c 0029       start_initialization 08C4               __end_of_dly 0868  
        WriteI2C@data_out 0026                  ??_FMinit 0036                  ??_FMread 0029  
                ??_FMvers 0032         __size_of_MuteHard 0002         __size_of_WriteI2C 005E  
       __size_of_VolumeUp 0002               __pbssCOMRAM 0001                  ?_FMready 0030  
                ?_FMwrite 0025                  ?_IdleI2C 0025                  ?_ReadI2C 0025  
                ?_OpenI2C 0025             ??_nextChannel 0028              ??_VolumeDown 0025  
       __size_of_showFreq 0002                  FMinit@ad 0038               __smallconst 0300  
               _butnEvent 0326           FMwrite@firstByt 0029           _previousChannel 08DA  
                _LCDDATA0 000F60        __end_of_VolumeDown 0926           FMwrite@secndByt 002A  
          __size_of_errfm 0002              ??_delay_10ms 0027              MuteHard@down 0025  
          FMread@firstByt 002E                FMread@data 0027                  _PIR1bits 000F9E  
          FMread@secndByt 002F                FMready@rdy 0030                FMready@sts 0034  
     __end_of_nextChannel 08FE        __end_of_delay_10ms 088A                ?_butnEvent 0025  
        __size_of_FMready 0046          __size_of_FMwrite 0082          OpenI2C@sync_mode 0026  
        __size_of_IdleI2C 0012          __size_of_ReadI2C 001C                  __Hrparam 0000  
        __size_of_OpenI2C 001E                  _MuteHard 0926                  __Lrparam 0000  
              FMwrite@adr 002B                  _WriteI2C 0792                  _VolumeUp 0922  
 __end_of_previousChannel 08EC                  __ptext10 088A                  __ptext11 0910  
                __ptext20 08A8                  __ptext12 0558                  __ptext13 0928  
                __ptext14 0836                  __ptext15 06B0                  __ptext16 07F0  
                __ptext17 048E                  __ptext18 0792                  __ptext19 08FE  
             delay_10ms@n 0025             __size_of_Init 0060             __size_of_main 0092  
           FMread@regAddr 002D               _nextChannel 08EC                  _showFreq 0928  
             ??_butnEvent 0028                _INTCONbits 000FF2          ?_previousChannel 0025  
             _SSPCON1bits 000FC6               _SSPCON2bits 000FC5            butnEvent@c_410 002B  
          butnEvent@c_420 002F            butnEvent@c_427 0031            butnEvent@c_419 002D  
