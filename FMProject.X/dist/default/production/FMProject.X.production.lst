

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Feb 19 18:18:21 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	smallconst
    44  000300                     __psmallconst:
    45                           	opt stack 0
    46  000300  00                 	db	0
    47  000301                     _regDflt:
    48                           	opt stack 0
    49  000301  FFFF               	dw	65535
    50  000303  5B15               	dw	23317
    51  000305  D0B9               	dw	53433
    52  000307  A010               	dw	40976
    53  000309  0780               	dw	1920
    54  00030B  28AB               	dw	10411
    55  00030D  6400               	dw	25600
    56  00030F  1EE7               	dw	7911
    57  000311  7141               	dw	28993
    58  000313  007D               	dw	125
    59  000315  82C6               	dw	33478
    60  000317  4F55               	dw	20309
    61  000319  970C               	dw	38668
    62  00031B  B845               	dw	47173
    63  00031D  FC2D               	dw	64557
    64  00031F  8097               	dw	32919
    65  000321  04A1               	dw	1185
    66  000323  DF6A               	dw	57194
    67  000325                     __end_of_regDflt:
    68                           	opt stack 0
    69  000325                     setVolume@F6670:
    70                           	opt stack 0
    71  000325  0F                 	db	15
    72  000326  CF                 	db	207
    73  000327  DF                 	db	223
    74  000328  FF                 	db	255
    75  000329  CB                 	db	203
    76  00032A  DB                 	db	219
    77  00032B  FB                 	db	251
    78  00032C  FA                 	db	250
    79  00032D  F9                 	db	249
    80  00032E  F8                 	db	248
    81  00032F  F7                 	db	247
    82  000330  D6                 	db	214
    83  000331  E6                 	db	230
    84  000332  F6                 	db	246
    85  000333  E3                 	db	227
    86  000334  F3                 	db	243
    87  000335  F2                 	db	242
    88  000336  F1                 	db	241
    89  000337  F0                 	db	240
    90  000338                     __end_ofsetVolume@F6670:
    91                           	opt stack 0
    92  000338                     _hardmute_bit:
    93                           	opt stack 0
    94  000338  0001               	dw	1
    95  00033A  0001               	dw	1
    96  00033C                     __end_of_hardmute_bit:
    97                           	opt stack 0
    98  00033C                     _hiloctrl1_bit:
    99                           	opt stack 0
   100  00033C  000B               	dw	11
   101  00033E  0002               	dw	2
   102  000340                     __end_of_hiloctrl1_bit:
   103                           	opt stack 0
   104  000340                     _hiloctrl2_bit:
   105                           	opt stack 0
   106  000340  000B               	dw	11
   107  000342  0000               	dw	0
   108  000344                     __end_of_hiloctrl2_bit:
   109                           	opt stack 0
   110  000344                     _hiloside_bit:
   111                           	opt stack 0
   112  000344  000B               	dw	11
   113  000346  000F               	dw	15
   114  000348                     __end_of_hiloside_bit:
   115                           	opt stack 0
   116  000348                     _seek_bit:
   117                           	opt stack 0
   118  000348  0003               	dw	3
   119  00034A  000E               	dw	14
   120  00034C                     __end_of_seek_bit:
   121                           	opt stack 0
   122  00034C                     _seekup_bit:
   123                           	opt stack 0
   124  00034C  0003               	dw	3
   125  00034E  000F               	dw	15
   126  000350                     __end_of_seekup_bit:
   127                           	opt stack 0
   128  000350                     _softmute_bit:
   129                           	opt stack 0
   130  000350  0001               	dw	1
   131  000352  0002               	dw	2
   132  000354                     __end_of_softmute_bit:
   133                           	opt stack 0
   134  000354                     _tune_bit:
   135                           	opt stack 0
   136  000354  0002               	dw	2
   137  000356  0009               	dw	9
   138  000358                     __end_of_tune_bit:
   139                           	opt stack 0
   140  0000                     _LCDPS	set	3928
   141  0000                     _ADCON1	set	4033
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PIR1bits	set	3998
   144  0000                     _PORTA	set	3968
   145  0000                     _PORTAbits	set	3968
   146  0000                     _PORTB	set	3969
   147  0000                     _PORTBbits	set	3969
   148  0000                     _PORTC	set	3970
   149  0000                     _PORTCbits	set	3970
   150  0000                     _PORTGbits	set	3974
   151  0000                     _SSPADD	set	4040
   152  0000                     _SSPBUF	set	4041
   153  0000                     _SSPCON1	set	4038
   154  0000                     _SSPCON1bits	set	4038
   155  0000                     _SSPCON2	set	4037
   156  0000                     _SSPCON2bits	set	4037
   157  0000                     _SSPSTAT	set	4039
   158  0000                     _SSPSTATbits	set	4039
   159  0000                     _T0CON	set	4053
   160  0000                     _T0CONbits	set	4053
   161  0000                     _TMR0H	set	4055
   162  0000                     _TMR0L	set	4054
   163  0000                     _TRISA	set	3986
   164  0000                     _TRISB	set	3987
   165  0000                     _TRISC	set	3988
   166  0000                     _TRISCbits	set	3988
   167  0000                     _TRISG	set	3992
   168                           
   169                           ; #config settings
   170  000358  00                 	db	0	; dummy byte at the end
   171  0000                     
   172                           	psect	cinit
   173  000FF6                     __pcinit:
   174                           	opt stack 0
   175  000FF6                     start_initialization:
   176                           	opt stack 0
   177  000FF6                     __initialization:
   178                           	opt stack 0
   179                           
   180                           ; Clear objects allocated to COMRAM (36 bytes)
   181  000FF6  EE00  F031         	lfsr	0,__pbssCOMRAM
   182  000FFA  0E24               	movlw	36
   183  000FFC                     clear_0:
   184  000FFC  6AEE               	clrf	postinc0,c
   185  000FFE  06E8               	decf	wreg,f,c
   186  001000  E1FD               	bnz	clear_0
   187  001002                     end_of_initialization:
   188                           	opt stack 0
   189  001002                     __end_of__initialization:
   190                           	opt stack 0
   191  001002  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  001004  6EF8               	movwf	tblptru,c
   193  001006  0100               	movlb	0
   194  001008  EF8B  F004         	goto	_main	;jump to C main() function
   195                           tblptru	equ	0xFF8
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	bssCOMRAM
   200  000031                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000031                     _regImg:
   203                           	opt stack 0
   204  000031                     	ds	36
   205                           tblptru	equ	0xFF8
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackCOMRAM
   210  000001                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  000001                     ??_IdleI2C:
   213  000001                     ?_butnEvent:
   214                           	opt stack 0
   215  000001                     OpenI2C@slew:
   216                           	opt stack 0
   217  000001                     dly@d:
   218                           	opt stack 0
   219  000001                     delay_10ms@n:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x0
   223  000001                     	ds	1
   224  000002                     OpenI2C@sync_mode:
   225                           	opt stack 0
   226  000002                     WriteI2C@data_out:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x1
   230  000002                     	ds	1
   231  000003                     ??_delay_10ms:
   232  000003                     ??_FMwrite:
   233  000003                     ??_butnEvent:
   234  000003                     FMread@data:
   235                           	opt stack 0
   236  000003                     dly@i:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x2
   240  000003                     	ds	1
   241  000004                     butnEvent@c:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x3
   245  000004                     	ds	1
   246  000005                     ??_FMread:
   247  000005                     FMwrite@firstByt:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x4
   251  000005                     	ds	1
   252  000006                     FMwrite@secndByt:
   253                           	opt stack 0
   254  000006                     butnEvent@c_629:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x5
   258  000006                     	ds	1
   259  000007                     FMwrite@adr:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x6
   263  000007                     	ds	1
   264  000008                     setBitInRegister@bitRegister:
   265                           	opt stack 0
   266  000008                     butnEvent@c_630:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x7
   270  000008                     	ds	1
   271  000009                     FMread@regAddr:
   272                           	opt stack 0
   273  000009                     setBitInRegister@bitState:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x8
   277  000009                     	ds	1
   278  00000A                     ??_setBitInRegister:
   279  00000A                     FMread@firstByt:
   280                           	opt stack 0
   281  00000A                     butnEvent@c_631:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x9
   285  00000A                     	ds	1
   286  00000B                     FMread@secndByt:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0xA
   290  00000B                     	ds	1
   291  00000C                     ?_frequency:
   292                           	opt stack 0
   293  00000C                     FMready@rdy:
   294                           	opt stack 0
   295  00000C                     FMvers@vsn:
   296                           	opt stack 0
   297  00000C                     butnEvent@c_640:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0xB
   301  00000C                     	ds	2
   302  00000E                     ??_frequency:
   303  00000E                     ??_FMready:
   304  00000E                     butnEvent@c_641:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0xD
   308  00000E                     	ds	2
   309  000010                     FMready@sts:
   310                           	opt stack 0
   311  000010                     butnEvent@c_648:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xF
   315  000010                     	ds	1
   316  000011                     setBitInRegister@address:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x10
   320  000011                     	ds	1
   321  000012                     ??_readLOInjection:
   322  000012                     setSeekDirection@direction:
   323                           	opt stack 0
   324  000012                     setHardmute@bitState:
   325                           	opt stack 0
   326  000012                     FMinit@dat:
   327                           	opt stack 0
   328  000012                     FMfrequenc@f:
   329                           	opt stack 0
   330  000012                     butnEvent@timereturn:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x11
   334  000012                     	ds	1
   335  000013                     frequency@data:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x12
   339  000013                     	ds	1
   340  000014                     ??_FMfrequenc:
   341  000014                     FMinit@ad:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x13
   345  000014                     	ds	1
   346  000015                     readLOInjection@loHi:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x14
   350  000015                     	ds	1
   351  000016                     readLOInjection@temp:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x15
   355  000016                     	ds	2
   356  000018                     readLOInjection@rssi_val:
   357                           	opt stack 0
   358  000018                     FMfrequenc@dat:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x17
   362  000018                     	ds	1
   363  000019                     readLOInjection@status:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x18
   367  000019                     	ds	1
   368  00001A                     FMfrequenc@cn:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x19
   372  00001A                     	ds	1
   373  00001B                     tuneWithAutoHiLo@curChannel:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x1A
   377  00001B                     	ds	1
   378  00001C                     
   379                           ; 1 bytes @ 0x1B
   380  00001C                     	ds	1
   381  00001D                     tuneWithAutoHiLo@temp:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x1C
   385  00001D                     	ds	2
   386  00001F                     tuneWithAutoHiLo@rssi_lo:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x1E
   390  00001F                     	ds	1
   391  000020                     tuneWithAutoHiLo@rssi_hi:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x1F
   395  000020                     	ds	1
   396  000021                     tuneWithAutoHiLo@status:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x20
   400  000021                     	ds	2
   401  000023                     seek@curChannel:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x22
   405  000023                     	ds	2
   406  000025                     seek@direction:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x24
   410  000025                     	ds	1
   411  000026                     seek@temp:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x25
   415  000026                     	ds	2
   416  000028                     seek@status:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x27
   420  000028                     	ds	2
   421  00002A                     VolumeUp@dir:
   422                           	opt stack 0
   423  00002A                     VolumeDown@dir:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x29
   427  00002A                     	ds	1
   428  00002B                     ??_main:
   429                           
   430                           ; 1 bytes @ 0x2A
   431  00002B                     	ds	2
   432  00002D                     main@evt:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x2C
   436  00002D                     	ds	2
   437  00002F                     main@ui:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x2E
   441  00002F                     	ds	2
   442                           tblptru	equ	0xFF8
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 45 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  ui              2   46[COMRAM] unsigned int 
   456 ;;  evt             2   44[COMRAM] int 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   466 ;;      Params:         0       0       0       0
   467 ;;      Locals:         4       0       0       0
   468 ;;      Temps:          2       0       0       0
   469 ;;      Totals:         6       0       0       0
   470 ;;Total ram usage:        6 bytes
   471 ;; Hardware stack levels required when called:    8
   472 ;; This function calls:
   473 ;;		_FMfrequenc
   474 ;;		_FMinit
   475 ;;		_FMvers
   476 ;;		_Init
   477 ;;		_MuteHard
   478 ;;		_SeekDOWN
   479 ;;		_SeekUP
   480 ;;		_VolumeDown
   481 ;;		_VolumeUp
   482 ;;		_butnEvent
   483 ;;		_dly
   484 ;;		_errfm
   485 ;;		_nextChannel
   486 ;;		_previousChannel
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493  000916                     __ptext0:
   494                           	opt stack 0
   495  000916                     _main:
   496                           	opt stack 23
   497                           
   498                           ;main.c: 46: int evt;
   499                           ;main.c: 47: unsigned int ui;
   500                           ;main.c: 48: dly(20);
   501                           
   502                           ;incstack = 0
   503  000916  0E00               	movlw	0
   504  000918  6E02               	movwf	dly@d+1,c
   505  00091A  0E14               	movlw	20
   506  00091C  6E01               	movwf	dly@d,c
   507  00091E  EC67  F007         	call	_dly	;wreg free
   508                           
   509                           ;main.c: 49: Init();
   510  000922  EC24  F007         	call	_Init	;wreg free
   511                           
   512                           ;main.c: 51: PORTCbits.RC6 = 1;
   513  000926  8C82               	bsf	3970,6,c	;volatile
   514                           
   515                           ;main.c: 53: FMvers(&ui);
   516  000928  0E2F               	movlw	low main@ui
   517  00092A  6E0C               	movwf	FMvers@vsn,c
   518  00092C  0E00               	movlw	high main@ui
   519  00092E  6E0D               	movwf	FMvers@vsn+1,c
   520  000930  EC21  F008         	call	_FMvers	;wreg free
   521                           
   522                           ;main.c: 54: if (ui != 0x1010) errfm();
   523  000934  0E10               	movlw	16
   524  000936  182F               	xorwf	main@ui,w,c
   525  000938  E103               	bnz	u1750
   526  00093A  0E10               	movlw	16
   527  00093C  1830               	xorwf	main@ui+1,w,c
   528  00093E  A4D8               	btfss	status,2,c
   529  000940                     u1750:
   530  000940  EC29  F008         	call	_errfm	;wreg free
   531                           
   532                           ;main.c: 55: if (FMinit() != 0) errfm();
   533  000944  EC55  F005         	call	_FMinit	;wreg free
   534  000948  0900               	iorlw	0
   535  00094A  A4D8               	btfss	status,2,c
   536  00094C  EC29  F008         	call	_errfm	;wreg free
   537                           
   538                           ;main.c: 56: FMfrequenc(964);
   539  000950  0E03               	movlw	3
   540  000952  6E13               	movwf	FMfrequenc@f+1,c
   541  000954  0EC4               	movlw	196
   542  000956  6E12               	movwf	FMfrequenc@f,c
   543  000958  EC17  F006         	call	_FMfrequenc	;wreg free
   544  00095C                     l2252:
   545                           
   546                           ;main.c: 59: evt = butnEvent();
   547  00095C  ECAD  F001         	call	_butnEvent	;wreg free
   548  000960  C001  F02D         	movff	?_butnEvent,main@evt
   549  000964  C002  F02E         	movff	?_butnEvent+1,main@evt+1
   550                           
   551                           ;main.c: 60: switch (evt) {
   552  000968  D019               	goto	l2272
   553  00096A                     l2254:
   554  00096A  ECB3  F007         	call	_nextChannel	;wreg free
   555                           
   556                           ;main.c: 62: break;
   557  00096E  D7F6               	goto	l2252
   558  000970                     l2256:
   559  000970  ECA4  F007         	call	_previousChannel	;wreg free
   560                           
   561                           ;main.c: 64: break;
   562  000974  D7F3               	goto	l2252
   563  000976                     l2258:
   564  000976  ECD1  F007         	call	_VolumeUp	;wreg free
   565                           
   566                           ;main.c: 66: break;
   567  00097A  D7F0               	goto	l2252
   568  00097C                     l2260:
   569  00097C  ECDF  F007         	call	_VolumeDown	;wreg free
   570                           
   571                           ;main.c: 68: break;
   572  000980  D7ED               	goto	l2252
   573  000982                     l2262:
   574  000982  0E00               	movlw	0
   575  000984  EC2A  F008         	call	_MuteHard
   576                           
   577                           ;main.c: 70: break;
   578  000988  D7E9               	goto	l2252
   579  00098A                     l2264:
   580  00098A  EC06  F008         	call	_SeekUP	;wreg free
   581                           
   582                           ;main.c: 72: break;
   583  00098E  D7E6               	goto	l2252
   584  000990                     l2266:
   585  000990  EC0F  F008         	call	_SeekDOWN	;wreg free
   586                           
   587                           ;main.c: 74: break;
   588  000994  D7E3               	goto	l2252
   589  000996                     l2268:
   590  000996  EC29  F008         	call	_errfm	;wreg free
   591                           
   592                           ;main.c: 80: }
   593                           
   594                           ;main.c: 79: default: break;
   595                           
   596                           ;main.c: 77: break;
   597  00099A  D7E0               	goto	l2252
   598  00099C                     l2272:
   599  00099C  C02D  F02B         	movff	main@evt,??_main
   600  0009A0  C02E  F02C         	movff	main@evt+1,??_main+1
   601                           
   602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   603                           ; Switch size 1, requested type "space"
   604                           ; Number of cases is 1, Range of values is 0 to 0
   605                           ; switch strategies available:
   606                           ; Name         Instructions Cycles
   607                           ; simple_byte            4     3 (average)
   608                           ;	Chosen strategy is simple_byte
   609  0009A4  502C               	movf	??_main+1,w,c
   610  0009A6  0A00               	xorlw	0	; case 0
   611  0009A8  A4D8               	btfss	status,2,c
   612  0009AA  D7D8               	goto	l2252
   613                           
   614                           ; Switch size 1, requested type "space"
   615                           ; Number of cases is 8, Range of values is 1 to 8
   616                           ; switch strategies available:
   617                           ; Name         Instructions Cycles
   618                           ; simple_byte           25    13 (average)
   619                           ;	Chosen strategy is simple_byte
   620  0009AC  502B               	movf	??_main,w,c
   621  0009AE  0A01               	xorlw	1	; case 1
   622  0009B0  B4D8               	btfsc	status,2,c
   623  0009B2  D7DB               	goto	l2254
   624  0009B4  0A03               	xorlw	3	; case 2
   625  0009B6  B4D8               	btfsc	status,2,c
   626  0009B8  D7DB               	goto	l2256
   627  0009BA  0A01               	xorlw	1	; case 3
   628  0009BC  B4D8               	btfsc	status,2,c
   629  0009BE  D7DB               	goto	l2258
   630  0009C0  0A07               	xorlw	7	; case 4
   631  0009C2  B4D8               	btfsc	status,2,c
   632  0009C4  D7DB               	goto	l2260
   633  0009C6  0A01               	xorlw	1	; case 5
   634  0009C8  B4D8               	btfsc	status,2,c
   635  0009CA  D7DB               	goto	l2262
   636  0009CC  0A03               	xorlw	3	; case 6
   637  0009CE  B4D8               	btfsc	status,2,c
   638  0009D0  D7DC               	goto	l2264
   639  0009D2  0A01               	xorlw	1	; case 7
   640  0009D4  B4D8               	btfsc	status,2,c
   641  0009D6  D7DC               	goto	l2266
   642  0009D8  0A0F               	xorlw	15	; case 8
   643  0009DA  B4D8               	btfsc	status,2,c
   644  0009DC  D7DC               	goto	l2268
   645                           
   646                           ;main.c: 81: }
   647  0009DE  D7BE               	goto	l2252
   648  0009E0                     __end_of_main:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           status	equ	0xFD8
   654                           
   655 ;; *************** function _previousChannel *****************
   656 ;; Defined at:
   657 ;;		line 664 in file "fm.h"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      unsigned char 
   664 ;; Registers used:
   665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   671 ;;      Params:         0       0       0       0
   672 ;;      Locals:         0       0       0       0
   673 ;;      Temps:          0       0       0       0
   674 ;;      Totals:         0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    5
   678 ;; This function calls:
   679 ;;		_FMfrequenc
   680 ;;		_delay_10ms
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text1
   687  000F48                     __ptext1:
   688                           	opt stack 0
   689  000F48                     _previousChannel:
   690                           	opt stack 25
   691                           
   692                           ;fm.h: 666: FMfrequenc(958);
   693                           
   694                           ;incstack = 0
   695  000F48  0E03               	movlw	3
   696  000F4A  6E13               	movwf	FMfrequenc@f+1,c
   697  000F4C  0EBE               	movlw	190
   698  000F4E  6E12               	movwf	FMfrequenc@f,c
   699  000F50  EC17  F006         	call	_FMfrequenc	;wreg free
   700                           
   701                           ;fm.h: 667: PORTCbits.RC7 = 1;
   702  000F54  8E82               	bsf	3970,7,c	;volatile
   703                           
   704                           ;fm.h: 668: delay_10ms(10);
   705  000F56  0E00               	movlw	0
   706  000F58  6E02               	movwf	delay_10ms@n+1,c
   707  000F5A  0E0A               	movlw	10
   708  000F5C  6E01               	movwf	delay_10ms@n,c
   709  000F5E  EC93  F007         	call	_delay_10ms	;wreg free
   710                           
   711                           ;fm.h: 669: PORTCbits.RC7 = 0;
   712  000F62  9E82               	bcf	3970,7,c	;volatile
   713  000F64  0012               	return	
   714  000F66                     __end_of_previousChannel:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           status	equ	0xFD8
   720                           
   721 ;; *************** function _nextChannel *****************
   722 ;; Defined at:
   723 ;;		line 654 in file "fm.h"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      unsigned char 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         0       0       0       0
   738 ;;      Locals:         0       0       0       0
   739 ;;      Temps:          0       0       0       0
   740 ;;      Totals:         0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    5
   744 ;; This function calls:
   745 ;;		_FMfrequenc
   746 ;;		_delay_10ms
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text2
   753  000F66                     __ptext2:
   754                           	opt stack 0
   755  000F66                     _nextChannel:
   756                           	opt stack 25
   757                           
   758                           ;fm.h: 655: FMfrequenc(964);
   759                           
   760                           ;incstack = 0
   761  000F66  0E03               	movlw	3
   762  000F68  6E13               	movwf	FMfrequenc@f+1,c
   763  000F6A  0EC4               	movlw	196
   764  000F6C  6E12               	movwf	FMfrequenc@f,c
   765  000F6E  EC17  F006         	call	_FMfrequenc	;wreg free
   766                           
   767                           ;fm.h: 656: PORTCbits.RC6 = 1;
   768  000F72  8C82               	bsf	3970,6,c	;volatile
   769                           
   770                           ;fm.h: 657: delay_10ms(10);
   771  000F74  0E00               	movlw	0
   772  000F76  6E02               	movwf	delay_10ms@n+1,c
   773  000F78  0E0A               	movlw	10
   774  000F7A  6E01               	movwf	delay_10ms@n,c
   775  000F7C  EC93  F007         	call	_delay_10ms	;wreg free
   776                           
   777                           ;fm.h: 658: PORTCbits.RC6 = 0;
   778  000F80  9C82               	bcf	3970,6,c	;volatile
   779  000F82  0012               	return	
   780  000F84                     __end_of_nextChannel:
   781                           	opt stack 0
   782                           tblptru	equ	0xFF8
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _FMfrequenc *****************
   788 ;; Defined at:
   789 ;;		line 583 in file "fm.h"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  f               2   17[COMRAM] unsigned int 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  cn              2   25[COMRAM] unsigned int 
   794 ;;  dat             2   23[COMRAM] unsigned int 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   804 ;;      Params:         2       0       0       0
   805 ;;      Locals:         4       0       0       0
   806 ;;      Temps:          4       0       0       0
   807 ;;      Totals:        10       0       0       0
   808 ;;Total ram usage:       10 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    4
   811 ;; This function calls:
   812 ;;		_FMready
   813 ;;		_FMwrite
   814 ;;		_dly
   815 ;; This function is called by:
   816 ;;		_nextChannel
   817 ;;		_previousChannel
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text3
   823  000C2E                     __ptext3:
   824                           	opt stack 0
   825  000C2E                     _FMfrequenc:
   826                           	opt stack 25
   827                           
   828                           ;fm.h: 585: unsigned int dat;
   829                           ;fm.h: 586: unsigned int cn;
   830                           ;fm.h: 588: cn = f - 690;
   831                           
   832                           ;incstack = 0
   833  000C2E  0E4E               	movlw	78
   834  000C30  2412               	addwf	FMfrequenc@f,w,c
   835  000C32  6E1A               	movwf	FMfrequenc@cn,c
   836  000C34  0EFD               	movlw	253
   837  000C36  2013               	addwfc	FMfrequenc@f+1,w,c
   838  000C38  6E1B               	movwf	FMfrequenc@cn+1,c
   839                           
   840                           ;fm.h: 591: if (cn < (875-690))
   841  000C3A  501B               	movf	FMfrequenc@cn+1,w,c
   842  000C3C  E108               	bnz	l1896
   843  000C3E  0EB9               	movlw	185
   844  000C40  5C1A               	subwf	FMfrequenc@cn,w,c
   845  000C42  B0D8               	btfsc	status,0,c
   846  000C44  D004               	goto	l1896
   847                           
   848                           ;fm.h: 592: cn = (875-690);
   849  000C46  0E00               	movlw	0
   850  000C48  6E1B               	movwf	FMfrequenc@cn+1,c
   851  000C4A  0EB9               	movlw	185
   852  000C4C  D009               	goto	L1
   853  000C4E                     l1896:
   854                           
   855                           ;fm.h: 593: else if (cn > (1080-690))
   856  000C4E  0E87               	movlw	135
   857  000C50  5C1A               	subwf	FMfrequenc@cn,w,c
   858  000C52  0E01               	movlw	1
   859  000C54  581B               	subwfb	FMfrequenc@cn+1,w,c
   860  000C56  A0D8               	btfss	status,0,c
   861  000C58  D004               	goto	l1900
   862                           
   863                           ;fm.h: 594: cn = (1080-690);
   864  000C5A  0E01               	movlw	1
   865  000C5C  6E1B               	movwf	FMfrequenc@cn+1,c
   866  000C5E  0E86               	movlw	134
   867  000C60                     L1:
   868  000C60  6E1A               	movwf	FMfrequenc@cn,c
   869  000C62                     l1900:
   870                           
   871                           ;fm.h: 597: regImg[2] &= ~0x0200;
   872  000C62  9236               	bcf	_regImg+5,1,c
   873                           
   874                           ;fm.h: 598: if (FMwrite(2) != 0) return 1;
   875  000C64  0E02               	movlw	2
   876  000C66  EC64  F006         	call	_FMwrite
   877  000C6A  0900               	iorlw	0
   878  000C6C  A4D8               	btfss	status,2,c
   879  000C6E  0012               	return	
   880                           
   881                           ;fm.h: 599: regImg[2] &= 0xfe00;
   882                           
   883                           ;	Return value of _FMfrequenc is never used
   884  000C70  0E00               	movlw	0
   885  000C72  1635               	andwf	_regImg+4,f,c
   886  000C74  0EFE               	movlw	254
   887  000C76  1636               	andwf	_regImg+5,f,c
   888                           
   889                           ;fm.h: 600: regImg[2] |= (cn | 0x0200);
   890  000C78  0E00               	movlw	0
   891  000C7A  6E14               	movwf	??_FMfrequenc& (0+255),c
   892  000C7C  0E02               	movlw	2
   893  000C7E  6E15               	movwf	(??_FMfrequenc+1)& (0+255),c
   894  000C80  C01A  F016         	movff	FMfrequenc@cn,??_FMfrequenc+2
   895  000C84  C01B  F017         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   896  000C88  5014               	movf	??_FMfrequenc,w,c
   897  000C8A  1216               	iorwf	??_FMfrequenc+2,f,c
   898  000C8C  5015               	movf	??_FMfrequenc+1,w,c
   899  000C8E  1217               	iorwf	??_FMfrequenc+3,f,c
   900  000C90  5016               	movf	??_FMfrequenc+2,w,c
   901  000C92  1235               	iorwf	_regImg+4,f,c
   902  000C94  5017               	movf	??_FMfrequenc+3,w,c
   903  000C96  1236               	iorwf	_regImg+5,f,c
   904                           
   905                           ;fm.h: 601: if (FMwrite(2) != 0) return 1;
   906  000C98  0E02               	movlw	2
   907  000C9A  EC64  F006         	call	_FMwrite
   908  000C9E  0900               	iorlw	0
   909  000CA0  A4D8               	btfss	status,2,c
   910  000CA2  0012               	return	
   911                           
   912                           ;fm.h: 603: dly(2);
   913                           
   914                           ;fm.h: 602: do {
   915                           
   916                           ;	Return value of _FMfrequenc is never used
   917  000CA4  0E00               	movlw	0
   918  000CA6  6E02               	movwf	dly@d+1,c
   919  000CA8  0E02               	movlw	2
   920  000CAA  6E01               	movwf	dly@d,c
   921  000CAC  EC67  F007         	call	_dly	;wreg free
   922                           
   923                           ;fm.h: 604: if (FMready(&dat) != 0) return 1;
   924  000CB0  0E18               	movlw	low FMfrequenc@dat
   925  000CB2  6E0C               	movwf	FMready@rdy,c
   926  000CB4  0E00               	movlw	high FMfrequenc@dat
   927  000CB6  6E0D               	movwf	FMready@rdy+1,c
   928  000CB8  EC01  F007         	call	_FMready	;wreg free
   929  000CBC  0900               	iorlw	0
   930  000CBE  A4D8               	btfss	status,2,c
   931  000CC0  0012               	return	
   932                           
   933                           ;fm.h: 605: } while (!dat);
   934                           
   935                           ;	Return value of _FMfrequenc is never used
   936  000CC2  5018               	movf	FMfrequenc@dat,w,c
   937  000CC4  1019               	iorwf	FMfrequenc@dat+1,w,c
   938  000CC6  D7EC               	goto	L2
   939  000CC8                     __end_of_FMfrequenc:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           status	equ	0xFD8
   945                           
   946 ;; *************** function _errfm *****************
   947 ;; Defined at:
   948 ;;		line 733 in file "fm.h"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		None
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   962 ;;      Params:         0       0       0       0
   963 ;;      Locals:         0       0       0       0
   964 ;;      Temps:          0       0       0       0
   965 ;;      Totals:         0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text4
   976  001052                     __ptext4:
   977                           	opt stack 0
   978  001052                     _errfm:
   979                           	opt stack 30
   980  001052                     l232:
   981  001052  D7FF               	goto	l232
   982  001054                     __end_of_errfm:
   983                           	opt stack 0
   984                           tblptru	equ	0xFF8
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _butnEvent *****************
   990 ;; Defined at:
   991 ;;		line 768 in file "fm.h"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  c               2    9[COMRAM] int 
   996 ;;  c               2    5[COMRAM] int 
   997 ;;  c               2   15[COMRAM] int 
   998 ;;  c               2   13[COMRAM] int 
   999 ;;  c               2   11[COMRAM] int 
  1000 ;;  c               2    7[COMRAM] int 
  1001 ;;  c               2    3[COMRAM] int 
  1002 ;;  timereturn      2   17[COMRAM] int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    0[COMRAM] int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1012 ;;      Params:         2       0       0       0
  1013 ;;      Locals:        16       0       0       0
  1014 ;;      Temps:          1       0       0       0
  1015 ;;      Totals:        19       0       0       0
  1016 ;;Total ram usage:       19 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026  00035A                     __ptext5:
  1027                           	opt stack 0
  1028  00035A                     _butnEvent:
  1029                           	opt stack 30
  1030                           
  1031                           ;fm.h: 769: int timereturn;
  1032                           ;fm.h: 770: if (PORTAbits.RA0 == 0)
  1033                           
  1034                           ;incstack = 0
  1035  00035A  B080               	btfsc	3968,0,c	;volatile
  1036  00035C  D04F               	goto	l240
  1037                           
  1038                           ;fm.h: 771: {
  1039                           ;fm.h: 772: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1040  00035E  0E00               	movlw	0
  1041  000360  6E05               	movwf	butnEvent@c+1,c
  1042  000362  0E00               	movlw	0
  1043  000364  6E04               	movwf	butnEvent@c,c
  1044  000366  BE05               	btfsc	butnEvent@c+1,7,c
  1045  000368  D006               	goto	l2070
  1046  00036A  5005               	movf	butnEvent@c+1,w,c
  1047  00036C  E112               	bnz	l242
  1048  00036E  0E0B               	movlw	11
  1049  000370  5C04               	subwf	butnEvent@c,w,c
  1050  000372  B0D8               	btfsc	status,0,c
  1051  000374  D00E               	goto	l242
  1052  000376                     l2070:
  1053  000376  0E0D               	movlw	13
  1054  000378  6E03               	movwf	??_butnEvent& (0+255),c
  1055  00037A  0EFC               	movlw	252
  1056  00037C                     u1777:
  1057  00037C  2EE8               	decfsz	wreg,f,c
  1058  00037E  D7FE               	goto	u1777
  1059  000380  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1060  000382  D7FC               	goto	u1777
  1061  000384  4A04               	infsnz	butnEvent@c,f,c
  1062  000386  2A05               	incf	butnEvent@c+1,f,c
  1063  000388  BE05               	btfsc	butnEvent@c+1,7,c
  1064  00038A  D7F5               	goto	l2070
  1065  00038C  5005               	movf	butnEvent@c+1,w,c
  1066  00038E  E101               	bnz	u1430
  1067  000390  D7EE               	goto	L3
  1068  000392                     u1430:
  1069  000392                     l242:
  1070                           
  1071                           ;fm.h: 773: if (PORTAbits.RA0 == 0)
  1072  000392  B080               	btfsc	3968,0,c	;volatile
  1073  000394  D02A               	goto	l2092
  1074                           
  1075                           ;fm.h: 774: {
  1076                           ;fm.h: 775: timereturn = 1;
  1077  000396  0E00               	movlw	0
  1078  000398  6E13               	movwf	butnEvent@timereturn+1,c
  1079  00039A  0E01               	movlw	1
  1080  00039C  6E12               	movwf	butnEvent@timereturn,c
  1081                           
  1082                           ;fm.h: 776: for (int c = 0; c <= 10; c++)_delay((unsigned long)((7)*(8000000/4000.0)));
  1083  00039E  0E00               	movlw	0
  1084  0003A0  6E07               	movwf	butnEvent@c_629+1,c
  1085  0003A2  0E00               	movlw	0
  1086  0003A4  6E06               	movwf	butnEvent@c_629,c
  1087  0003A6  BE07               	btfsc	butnEvent@c_629+1,7,c
  1088  0003A8  D006               	goto	l2080
  1089  0003AA  5007               	movf	butnEvent@c_629+1,w,c
  1090  0003AC  E113               	bnz	l245
  1091  0003AE  0E0B               	movlw	11
  1092  0003B0  5C06               	subwf	butnEvent@c_629,w,c
  1093  0003B2  B0D8               	btfsc	status,0,c
  1094  0003B4  D00F               	goto	l245
  1095  0003B6                     l2080:
  1096  0003B6  0E13               	movlw	19
  1097  0003B8  6E03               	movwf	??_butnEvent& (0+255),c
  1098  0003BA  0E2D               	movlw	45
  1099  0003BC                     u1787:
  1100  0003BC  2EE8               	decfsz	wreg,f,c
  1101  0003BE  D7FE               	goto	u1787
  1102  0003C0  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1103  0003C2  D7FC               	goto	u1787
  1104  0003C4  F000               	nop	
  1105  0003C6  4A06               	infsnz	butnEvent@c_629,f,c
  1106  0003C8  2A07               	incf	butnEvent@c_629+1,f,c
  1107  0003CA  BE07               	btfsc	butnEvent@c_629+1,7,c
  1108  0003CC  D7F4               	goto	l2080
  1109  0003CE  5007               	movf	butnEvent@c_629+1,w,c
  1110  0003D0  E101               	bnz	u1460
  1111  0003D2  D7ED               	goto	L4
  1112  0003D4                     u1460:
  1113  0003D4                     l245:
  1114                           
  1115                           ;fm.h: 777: if (PORTAbits.RA0 == 0) {
  1116  0003D4  B080               	btfsc	3968,0,c	;volatile
  1117  0003D6  D004               	goto	l2086
  1118                           
  1119                           ;fm.h: 778: timereturn = 6;
  1120  0003D8  0E00               	movlw	0
  1121  0003DA  6E13               	movwf	butnEvent@timereturn+1,c
  1122  0003DC  0E06               	movlw	6
  1123  0003DE  6E12               	movwf	butnEvent@timereturn,c
  1124  0003E0                     l2086:
  1125                           
  1126                           ;fm.h: 779: }
  1127                           ;fm.h: 781: return timereturn;
  1128  0003E0  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1129  0003E4  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1130  0003E8  0012               	return	
  1131  0003EA                     l2092:
  1132                           
  1133                           ;fm.h: 785: timereturn = 0;
  1134  0003EA  0E00               	movlw	0
  1135  0003EC  6E13               	movwf	butnEvent@timereturn+1,c
  1136  0003EE  0E00               	movlw	0
  1137  0003F0  6E12               	movwf	butnEvent@timereturn,c
  1138                           
  1139                           ;fm.h: 786: return timereturn;
  1140  0003F2  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1141  0003F6  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1142  0003FA  0012               	return	
  1143  0003FC                     l240:
  1144                           
  1145                           ;fm.h: 787: }
  1146                           ;fm.h: 788: }
  1147                           ;fm.h: 790: if (PORTAbits.RA1 == 0)
  1148  0003FC  B280               	btfsc	3968,1,c	;volatile
  1149  0003FE  D04E               	goto	l249
  1150                           
  1151                           ;fm.h: 791: {
  1152                           ;fm.h: 792: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1153  000400  0E00               	movlw	0
  1154  000402  6E09               	movwf	butnEvent@c_630+1,c
  1155  000404  0E00               	movlw	0
  1156  000406  6E08               	movwf	butnEvent@c_630,c
  1157  000408  BE09               	btfsc	butnEvent@c_630+1,7,c
  1158  00040A  D006               	goto	l2104
  1159  00040C  5009               	movf	butnEvent@c_630+1,w,c
  1160  00040E  E112               	bnz	l251
  1161  000410  0E0B               	movlw	11
  1162  000412  5C08               	subwf	butnEvent@c_630,w,c
  1163  000414  B0D8               	btfsc	status,0,c
  1164  000416  D00E               	goto	l251
  1165  000418                     l2104:
  1166  000418  0E0D               	movlw	13
  1167  00041A  6E03               	movwf	??_butnEvent& (0+255),c
  1168  00041C  0EFC               	movlw	252
  1169  00041E                     u1797:
  1170  00041E  2EE8               	decfsz	wreg,f,c
  1171  000420  D7FE               	goto	u1797
  1172  000422  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1173  000424  D7FC               	goto	u1797
  1174  000426  4A08               	infsnz	butnEvent@c_630,f,c
  1175  000428  2A09               	incf	butnEvent@c_630+1,f,c
  1176  00042A  BE09               	btfsc	butnEvent@c_630+1,7,c
  1177  00042C  D7F5               	goto	l2104
  1178  00042E  5009               	movf	butnEvent@c_630+1,w,c
  1179  000430  E101               	bnz	u1500
  1180  000432  D7EE               	goto	L5
  1181  000434                     u1500:
  1182  000434                     l251:
  1183                           
  1184                           ;fm.h: 793: if (PORTAbits.RA1 == 0)
  1185  000434  B280               	btfsc	3968,1,c	;volatile
  1186  000436  D029               	goto	l2126
  1187                           
  1188                           ;fm.h: 794: {
  1189                           ;fm.h: 795: timereturn = 2;
  1190  000438  0E00               	movlw	0
  1191  00043A  6E13               	movwf	butnEvent@timereturn+1,c
  1192  00043C  0E02               	movlw	2
  1193  00043E  6E12               	movwf	butnEvent@timereturn,c
  1194                           
  1195                           ;fm.h: 796: for (int c = 0; c <= 10; c++)_delay((unsigned long)((12)*(8000000/4000.0)));
  1196  000440  0E00               	movlw	0
  1197  000442  6E0B               	movwf	butnEvent@c_631+1,c
  1198  000444  0E00               	movlw	0
  1199  000446  6E0A               	movwf	butnEvent@c_631,c
  1200  000448  BE0B               	btfsc	butnEvent@c_631+1,7,c
  1201  00044A  D006               	goto	l2114
  1202  00044C  500B               	movf	butnEvent@c_631+1,w,c
  1203  00044E  E112               	bnz	l254
  1204  000450  0E0B               	movlw	11
  1205  000452  5C0A               	subwf	butnEvent@c_631,w,c
  1206  000454  B0D8               	btfsc	status,0,c
  1207  000456  D00E               	goto	l254
  1208  000458                     l2114:
  1209  000458  0E20               	movlw	32
  1210  00045A  6E03               	movwf	??_butnEvent& (0+255),c
  1211  00045C  0E2A               	movlw	42
  1212  00045E                     u1807:
  1213  00045E  2EE8               	decfsz	wreg,f,c
  1214  000460  D7FE               	goto	u1807
  1215  000462  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1216  000464  D7FC               	goto	u1807
  1217  000466  4A0A               	infsnz	butnEvent@c_631,f,c
  1218  000468  2A0B               	incf	butnEvent@c_631+1,f,c
  1219  00046A  BE0B               	btfsc	butnEvent@c_631+1,7,c
  1220  00046C  D7F5               	goto	l2114
  1221  00046E  500B               	movf	butnEvent@c_631+1,w,c
  1222  000470  E101               	bnz	u1530
  1223  000472  D7EE               	goto	L6
  1224  000474                     u1530:
  1225  000474                     l254:
  1226                           
  1227                           ;fm.h: 797: if (PORTAbits.RA1 == 0) {
  1228  000474  B280               	btfsc	3968,1,c	;volatile
  1229  000476  D004               	goto	l2120
  1230                           
  1231                           ;fm.h: 798: timereturn = 7;
  1232  000478  0E00               	movlw	0
  1233  00047A  6E13               	movwf	butnEvent@timereturn+1,c
  1234  00047C  0E07               	movlw	7
  1235  00047E  6E12               	movwf	butnEvent@timereturn,c
  1236  000480                     l2120:
  1237                           
  1238                           ;fm.h: 799: }
  1239                           ;fm.h: 801: return timereturn;
  1240  000480  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1241  000484  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1242  000488  0012               	return	
  1243  00048A                     l2126:
  1244                           
  1245                           ;fm.h: 804: timereturn = 0;
  1246  00048A  0E00               	movlw	0
  1247  00048C  6E13               	movwf	butnEvent@timereturn+1,c
  1248  00048E  0E00               	movlw	0
  1249  000490  6E12               	movwf	butnEvent@timereturn,c
  1250                           
  1251                           ;fm.h: 805: return timereturn;
  1252  000492  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1253  000496  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1254  00049A  0012               	return	
  1255  00049C                     l249:
  1256                           
  1257                           ;fm.h: 806: }
  1258                           ;fm.h: 807: }
  1259                           ;fm.h: 809: if (PORTBbits.RB0 == 0)
  1260  00049C  B081               	btfsc	3969,0,c	;volatile
  1261  00049E  D026               	goto	l257
  1262                           
  1263                           ;fm.h: 810: {
  1264                           ;fm.h: 811: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1265  0004A0  0E00               	movlw	0
  1266  0004A2  6E0D               	movwf	butnEvent@c_640+1,c
  1267  0004A4  0E00               	movlw	0
  1268  0004A6  6E0C               	movwf	butnEvent@c_640,c
  1269  0004A8  BE0D               	btfsc	butnEvent@c_640+1,7,c
  1270  0004AA  D006               	goto	l2138
  1271  0004AC  500D               	movf	butnEvent@c_640+1,w,c
  1272  0004AE  E112               	bnz	l259
  1273  0004B0  0E0B               	movlw	11
  1274  0004B2  5C0C               	subwf	butnEvent@c_640,w,c
  1275  0004B4  B0D8               	btfsc	status,0,c
  1276  0004B6  D00E               	goto	l259
  1277  0004B8                     l2138:
  1278  0004B8  0E0D               	movlw	13
  1279  0004BA  6E03               	movwf	??_butnEvent& (0+255),c
  1280  0004BC  0EFC               	movlw	252
  1281  0004BE                     u1817:
  1282  0004BE  2EE8               	decfsz	wreg,f,c
  1283  0004C0  D7FE               	goto	u1817
  1284  0004C2  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1285  0004C4  D7FC               	goto	u1817
  1286  0004C6  4A0C               	infsnz	butnEvent@c_640,f,c
  1287  0004C8  2A0D               	incf	butnEvent@c_640+1,f,c
  1288  0004CA  BE0D               	btfsc	butnEvent@c_640+1,7,c
  1289  0004CC  D7F5               	goto	l2138
  1290  0004CE  500D               	movf	butnEvent@c_640+1,w,c
  1291  0004D0  E101               	bnz	u1570
  1292  0004D2  D7EE               	goto	L7
  1293  0004D4                     u1570:
  1294  0004D4                     l259:
  1295                           
  1296                           ;fm.h: 812: if (PORTBbits.RB0 == 0)
  1297  0004D4  B081               	btfsc	3969,0,c	;volatile
  1298  0004D6  D005               	goto	l2148
  1299                           
  1300                           ;fm.h: 813: {
  1301                           ;fm.h: 814: return 3;
  1302  0004D8  0E00               	movlw	0
  1303  0004DA  6E02               	movwf	?_butnEvent+1,c
  1304  0004DC  0E03               	movlw	3
  1305  0004DE  6E01               	movwf	?_butnEvent,c
  1306  0004E0  0012               	return	
  1307  0004E2                     l2148:
  1308                           
  1309                           ;fm.h: 816: return 0;
  1310  0004E2  0E00               	movlw	0
  1311  0004E4  6E02               	movwf	?_butnEvent+1,c
  1312  0004E6  0E00               	movlw	0
  1313  0004E8  6E01               	movwf	?_butnEvent,c
  1314  0004EA  0012               	return	
  1315  0004EC                     l257:
  1316                           
  1317                           ;fm.h: 817: }
  1318                           ;fm.h: 818: }
  1319                           ;fm.h: 820: if (PORTBbits.RB5 == 0)
  1320  0004EC  BA81               	btfsc	3969,5,c	;volatile
  1321  0004EE  D026               	goto	l262
  1322                           
  1323                           ;fm.h: 821: {
  1324                           ;fm.h: 822: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1325  0004F0  0E00               	movlw	0
  1326  0004F2  6E0F               	movwf	butnEvent@c_641+1,c
  1327  0004F4  0E00               	movlw	0
  1328  0004F6  6E0E               	movwf	butnEvent@c_641,c
  1329  0004F8  BE0F               	btfsc	butnEvent@c_641+1,7,c
  1330  0004FA  D006               	goto	l2158
  1331  0004FC  500F               	movf	butnEvent@c_641+1,w,c
  1332  0004FE  E112               	bnz	l264
  1333  000500  0E0B               	movlw	11
  1334  000502  5C0E               	subwf	butnEvent@c_641,w,c
  1335  000504  B0D8               	btfsc	status,0,c
  1336  000506  D00E               	goto	l264
  1337  000508                     l2158:
  1338  000508  0E0D               	movlw	13
  1339  00050A  6E03               	movwf	??_butnEvent& (0+255),c
  1340  00050C  0EFC               	movlw	252
  1341  00050E                     u1827:
  1342  00050E  2EE8               	decfsz	wreg,f,c
  1343  000510  D7FE               	goto	u1827
  1344  000512  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1345  000514  D7FC               	goto	u1827
  1346  000516  4A0E               	infsnz	butnEvent@c_641,f,c
  1347  000518  2A0F               	incf	butnEvent@c_641+1,f,c
  1348  00051A  BE0F               	btfsc	butnEvent@c_641+1,7,c
  1349  00051C  D7F5               	goto	l2158
  1350  00051E  500F               	movf	butnEvent@c_641+1,w,c
  1351  000520  E101               	bnz	u1610
  1352  000522  D7EE               	goto	L8
  1353  000524                     u1610:
  1354  000524                     l264:
  1355                           
  1356                           ;fm.h: 823: if (PORTBbits.RB5 == 0)
  1357  000524  BA81               	btfsc	3969,5,c	;volatile
  1358  000526  D005               	goto	l2168
  1359                           
  1360                           ;fm.h: 824: {
  1361                           ;fm.h: 825: return 4;
  1362  000528  0E00               	movlw	0
  1363  00052A  6E02               	movwf	?_butnEvent+1,c
  1364  00052C  0E04               	movlw	4
  1365  00052E  6E01               	movwf	?_butnEvent,c
  1366  000530  0012               	return	
  1367  000532                     l2168:
  1368                           
  1369                           ;fm.h: 827: return 0;
  1370  000532  0E00               	movlw	0
  1371  000534  6E02               	movwf	?_butnEvent+1,c
  1372  000536  0E00               	movlw	0
  1373  000538  6E01               	movwf	?_butnEvent,c
  1374  00053A  0012               	return	
  1375  00053C                     l262:
  1376                           
  1377                           ;fm.h: 828: }
  1378                           ;fm.h: 829: }
  1379                           ;fm.h: 831: if (PORTGbits.RG0 == 0)
  1380  00053C  B086               	btfsc	3974,0,c	;volatile
  1381  00053E  D025               	goto	l2192
  1382                           
  1383                           ;fm.h: 832: {
  1384                           ;fm.h: 833: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1385  000540  0E00               	movlw	0
  1386  000542  6E11               	movwf	butnEvent@c_648+1,c
  1387  000544  0E00               	movlw	0
  1388  000546  6E10               	movwf	butnEvent@c_648,c
  1389  000548  BE11               	btfsc	butnEvent@c_648+1,7,c
  1390  00054A  D006               	goto	l2178
  1391  00054C  5011               	movf	butnEvent@c_648+1,w,c
  1392  00054E  E112               	bnz	l269
  1393  000550  0E0B               	movlw	11
  1394  000552  5C10               	subwf	butnEvent@c_648,w,c
  1395  000554  B0D8               	btfsc	status,0,c
  1396  000556  D00E               	goto	l269
  1397  000558                     l2178:
  1398  000558  0E0D               	movlw	13
  1399  00055A  6E03               	movwf	??_butnEvent& (0+255),c
  1400  00055C  0EFC               	movlw	252
  1401  00055E                     u1837:
  1402  00055E  2EE8               	decfsz	wreg,f,c
  1403  000560  D7FE               	goto	u1837
  1404  000562  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1405  000564  D7FC               	goto	u1837
  1406  000566  4A10               	infsnz	butnEvent@c_648,f,c
  1407  000568  2A11               	incf	butnEvent@c_648+1,f,c
  1408  00056A  BE11               	btfsc	butnEvent@c_648+1,7,c
  1409  00056C  D7F5               	goto	l2178
  1410  00056E  5011               	movf	butnEvent@c_648+1,w,c
  1411  000570  E101               	bnz	u1650
  1412  000572  D7EE               	goto	L9
  1413  000574                     u1650:
  1414  000574                     l269:
  1415                           
  1416                           ;fm.h: 834: if (PORTGbits.RG0 == 0)
  1417  000574  B086               	btfsc	3974,0,c	;volatile
  1418  000576  D005               	goto	l2188
  1419                           
  1420                           ;fm.h: 835: {
  1421                           ;fm.h: 836: return 5;
  1422  000578  0E00               	movlw	0
  1423  00057A  6E02               	movwf	?_butnEvent+1,c
  1424  00057C  0E05               	movlw	5
  1425  00057E  6E01               	movwf	?_butnEvent,c
  1426  000580  0012               	return	
  1427  000582                     l2188:
  1428                           
  1429                           ;fm.h: 838: return 0;
  1430  000582  0E00               	movlw	0
  1431  000584  6E02               	movwf	?_butnEvent+1,c
  1432  000586  0E00               	movlw	0
  1433  000588  D7FA               	goto	L10
  1434  00058A                     l2192:
  1435                           
  1436                           ;fm.h: 839: }
  1437                           ;fm.h: 840: }
  1438                           ;fm.h: 841: return 0;
  1439  00058A  0E00               	movlw	0
  1440  00058C  6E02               	movwf	?_butnEvent+1,c
  1441  00058E  0E00               	movlw	0
  1442  000590  6E01               	movwf	?_butnEvent,c
  1443  000592  0012               	return	
  1444  000594                     __end_of_butnEvent:
  1445                           	opt stack 0
  1446                           tblptru	equ	0xFF8
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _VolumeUp *****************
  1452 ;; Defined at:
  1453 ;;		line 674 in file "fm.h"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  dir             1   41[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1467 ;;      Params:         0       0       0       0
  1468 ;;      Locals:         1       0       0       0
  1469 ;;      Temps:          0       0       0       0
  1470 ;;      Totals:         1       0       0       0
  1471 ;;Total ram usage:        1 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    7
  1474 ;; This function calls:
  1475 ;;		_delay_10ms
  1476 ;;		_seek
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text6
  1483  000FA2                     __ptext6:
  1484                           	opt stack 0
  1485  000FA2                     _VolumeUp:
  1486                           	opt stack 23
  1487                           
  1488                           ;fm.h: 675: char dir = 'u';
  1489                           
  1490                           ;incstack = 0
  1491  000FA2  0E75               	movlw	117
  1492  000FA4  6E2A               	movwf	VolumeUp@dir,c
  1493                           
  1494                           ;fm.h: 676: seek(dir);
  1495  000FA6  502A               	movf	VolumeUp@dir,w,c
  1496  000FA8  ECA0  F003         	call	_seek
  1497                           
  1498                           ;fm.h: 679: PORTCbits.RC6 = 1;
  1499  000FAC  8C82               	bsf	3970,6,c	;volatile
  1500                           
  1501                           ;fm.h: 680: delay_10ms(10);
  1502  000FAE  0E00               	movlw	0
  1503  000FB0  6E02               	movwf	delay_10ms@n+1,c
  1504  000FB2  0E0A               	movlw	10
  1505  000FB4  6E01               	movwf	delay_10ms@n,c
  1506  000FB6  EC93  F007         	call	_delay_10ms	;wreg free
  1507                           
  1508                           ;fm.h: 681: PORTCbits.RC6 = 0;
  1509  000FBA  9C82               	bcf	3970,6,c	;volatile
  1510  000FBC  0012               	return	
  1511  000FBE                     __end_of_VolumeUp:
  1512                           	opt stack 0
  1513                           tblptru	equ	0xFF8
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _VolumeDown *****************
  1519 ;; Defined at:
  1520 ;;		line 686 in file "fm.h"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  dir             1   41[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      unsigned char 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1534 ;;      Params:         0       0       0       0
  1535 ;;      Locals:         1       0       0       0
  1536 ;;      Temps:          0       0       0       0
  1537 ;;      Totals:         1       0       0       0
  1538 ;;Total ram usage:        1 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    7
  1541 ;; This function calls:
  1542 ;;		_delay_10ms
  1543 ;;		_seek
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text7
  1550  000FBE                     __ptext7:
  1551                           	opt stack 0
  1552  000FBE                     _VolumeDown:
  1553                           	opt stack 23
  1554                           
  1555                           ;fm.h: 687: char dir = 'd';
  1556                           
  1557                           ;incstack = 0
  1558  000FBE  0E64               	movlw	100
  1559  000FC0  6E2A               	movwf	VolumeDown@dir,c
  1560                           
  1561                           ;fm.h: 688: seek(dir);
  1562  000FC2  502A               	movf	VolumeDown@dir,w,c
  1563  000FC4  ECA0  F003         	call	_seek
  1564                           
  1565                           ;fm.h: 691: PORTCbits.RC7 = 1;
  1566  000FC8  8E82               	bsf	3970,7,c	;volatile
  1567                           
  1568                           ;fm.h: 692: delay_10ms(10);
  1569  000FCA  0E00               	movlw	0
  1570  000FCC  6E02               	movwf	delay_10ms@n+1,c
  1571  000FCE  0E0A               	movlw	10
  1572  000FD0  6E01               	movwf	delay_10ms@n,c
  1573  000FD2  EC93  F007         	call	_delay_10ms	;wreg free
  1574                           
  1575                           ;fm.h: 693: PORTCbits.RC7 = 0;
  1576  000FD6  9E82               	bcf	3970,7,c	;volatile
  1577  000FD8  0012               	return	
  1578  000FDA                     __end_of_VolumeDown:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function _seek *****************
  1586 ;; Defined at:
  1587 ;;		line 290 in file "fm.h"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  direction       1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  direction       1   36[COMRAM] unsigned char 
  1592 ;;  status          2   39[COMRAM] unsigned int 
  1593 ;;  temp            2   37[COMRAM] unsigned short 
  1594 ;;  curChannel      2   34[COMRAM] unsigned short 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2  130[None  ] unsigned short 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1604 ;;      Params:         0       0       0       0
  1605 ;;      Locals:         7       0       0       0
  1606 ;;      Temps:          0       0       0       0
  1607 ;;      Totals:         7       0       0       0
  1608 ;;Total ram usage:        7 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    6
  1611 ;; This function calls:
  1612 ;;		_FMread
  1613 ;;		_FMwrite
  1614 ;;		_frequency
  1615 ;;		_setBitInRegister
  1616 ;;		_setHardmute
  1617 ;;		_setSeekDirection
  1618 ;;		_tuneWithAutoHiLo
  1619 ;; This function is called by:
  1620 ;;		_VolumeUp
  1621 ;;		_VolumeDown
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text8
  1626  000740                     __ptext8:
  1627                           	opt stack 0
  1628  000740                     _seek:
  1629                           	opt stack 23
  1630                           
  1631                           ;incstack = 0
  1632                           ;seek@direction stored from wreg
  1633  000740  6E25               	movwf	seek@direction,c
  1634                           
  1635                           ;fm.h: 305: unsigned short curChannel;
  1636                           ;fm.h: 306: unsigned short temp = 0;
  1637  000742  0E00               	movlw	0
  1638  000744  6E27               	movwf	seek@temp+1,c
  1639  000746  0E00               	movlw	0
  1640  000748  6E26               	movwf	seek@temp,c
  1641                           
  1642                           ;fm.h: 307: unsigned int status;
  1643                           ;fm.h: 310: setHardmute(1);
  1644  00074A  0E01               	movlw	1
  1645  00074C  EC80  F007         	call	_setHardmute
  1646                           
  1647                           ;fm.h: 312: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1648  000750  0E56               	movlw	low (_tune_bit+2)
  1649  000752  6EF6               	movwf	tblptrl,c
  1650  000754  0E03               	movlw	high (_tune_bit+2)
  1651  000756  6EF7               	movwf	tblptrh,c
  1652  000758                     	if	0	;tblptru may be non-zero
  1653  000758                     	endif
  1654  000758                     	if	0	;tblptru may be non-zero
  1655  000758                     	endif
  1656  000758  0008               	tblrd		*
  1657  00075A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1658  00075E  0E00               	movlw	0
  1659  000760  6E09               	movwf	setBitInRegister@bitState,c
  1660  000762  0E54               	movlw	low _tune_bit
  1661  000764  6EF6               	movwf	tblptrl,c
  1662  000766                     	if	1	;There is more than 1 active tblptr byte
  1663  000766  0E03               	movlw	high _tune_bit
  1664  000768  6EF7               	movwf	tblptrh,c
  1665  00076A                     	endif
  1666  00076A                     	if	0	;There are less than 3 active tblptr bytes
  1667  00076A                     	endif
  1668  00076A  0008               	tblrd		*
  1669  00076C  50F5               	movf	tablat,w,c
  1670  00076E  ECB8  F005         	call	_setBitInRegister
  1671                           
  1672                           ;fm.h: 317: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1673  000772  0E4A               	movlw	low (_seek_bit+2)
  1674  000774  6EF6               	movwf	tblptrl,c
  1675  000776  0E03               	movlw	high (_seek_bit+2)
  1676  000778  6EF7               	movwf	tblptrh,c
  1677  00077A                     	if	0	;tblptru may be non-zero
  1678  00077A                     	endif
  1679  00077A                     	if	0	;tblptru may be non-zero
  1680  00077A                     	endif
  1681  00077A  0008               	tblrd		*
  1682  00077C  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1683  000780  0E00               	movlw	0
  1684  000782  6E09               	movwf	setBitInRegister@bitState,c
  1685  000784  0E48               	movlw	low _seek_bit
  1686  000786  6EF6               	movwf	tblptrl,c
  1687  000788                     	if	1	;There is more than 1 active tblptr byte
  1688  000788  0E03               	movlw	high _seek_bit
  1689  00078A  6EF7               	movwf	tblptrh,c
  1690  00078C                     	endif
  1691  00078C                     	if	0	;There are less than 3 active tblptr bytes
  1692  00078C                     	endif
  1693  00078C  0008               	tblrd		*
  1694  00078E  50F5               	movf	tablat,w,c
  1695  000790  ECB8  F005         	call	_setBitInRegister
  1696                           
  1697                           ;fm.h: 320: setSeekDirection(direction);
  1698  000794  5025               	movf	seek@direction,w,c
  1699  000796  ECD4  F006         	call	_setSeekDirection
  1700                           
  1701                           ;fm.h: 323: setBitInRegister(seek_bit[0], seek_bit[1], 1);
  1702  00079A  0E4A               	movlw	low (_seek_bit+2)
  1703  00079C  6EF6               	movwf	tblptrl,c
  1704  00079E  0E03               	movlw	high (_seek_bit+2)
  1705  0007A0  6EF7               	movwf	tblptrh,c
  1706  0007A2                     	if	0	;tblptru may be non-zero
  1707  0007A2                     	endif
  1708  0007A2                     	if	0	;tblptru may be non-zero
  1709  0007A2                     	endif
  1710  0007A2  0008               	tblrd		*
  1711  0007A4  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1712  0007A8  0E01               	movlw	1
  1713  0007AA  6E09               	movwf	setBitInRegister@bitState,c
  1714  0007AC  0E48               	movlw	low _seek_bit
  1715  0007AE  6EF6               	movwf	tblptrl,c
  1716  0007B0                     	if	1	;There is more than 1 active tblptr byte
  1717  0007B0  0E03               	movlw	high _seek_bit
  1718  0007B2  6EF7               	movwf	tblptrh,c
  1719  0007B4                     	endif
  1720  0007B4                     	if	0	;There are less than 3 active tblptr bytes
  1721  0007B4                     	endif
  1722  0007B4  0008               	tblrd		*
  1723  0007B6  50F5               	movf	tablat,w,c
  1724  0007B8  ECB8  F005         	call	_setBitInRegister
  1725                           
  1726                           ;fm.h: 325: while (temp == 0) {
  1727  0007BC  D00E               	goto	l131
  1728  0007BE                     l1866:
  1729                           
  1730                           ;fm.h: 326: if (FMread(0x13, &status) != 0) return 1;
  1731  0007BE  0E28               	movlw	low seek@status
  1732  0007C0  6E03               	movwf	FMread@data,c
  1733  0007C2  0E00               	movlw	high seek@status
  1734  0007C4  6E04               	movwf	FMread@data+1,c
  1735  0007C6  0E13               	movlw	19
  1736  0007C8  ECF0  F004         	call	_FMread
  1737  0007CC  0900               	iorlw	0
  1738  0007CE  A4D8               	btfss	status,2,c
  1739  0007D0  0012               	return	
  1740                           
  1741                           ;fm.h: 327: temp = status & 0x0020;
  1742                           
  1743                           ;	Return value of _seek is never used
  1744  0007D2  0E20               	movlw	32
  1745  0007D4  1428               	andwf	seek@status,w,c
  1746  0007D6  6E26               	movwf	seek@temp,c
  1747  0007D8  6A27               	clrf	seek@temp+1,c
  1748  0007DA                     l131:
  1749  0007DA  5026               	movf	seek@temp,w,c
  1750  0007DC  1027               	iorwf	seek@temp+1,w,c
  1751  0007DE  B4D8               	btfsc	status,2,c
  1752  0007E0  D7EE               	goto	l1866
  1753                           
  1754                           ;fm.h: 328: }
  1755                           ;fm.h: 331: if (FMread(0x13, &status) != 0) return 1;
  1756  0007E2  0E28               	movlw	low seek@status
  1757  0007E4  6E03               	movwf	FMread@data,c
  1758  0007E6  0E00               	movlw	high seek@status
  1759  0007E8  6E04               	movwf	FMread@data+1,c
  1760  0007EA  0E13               	movlw	19
  1761  0007EC  ECF0  F004         	call	_FMread
  1762  0007F0  0900               	iorlw	0
  1763  0007F2  A4D8               	btfss	status,2,c
  1764  0007F4  0012               	return	
  1765                           
  1766                           ;fm.h: 332: temp = status & 0x0010;
  1767                           
  1768                           ;	Return value of _seek is never used
  1769  0007F6  0E10               	movlw	16
  1770  0007F8  1428               	andwf	seek@status,w,c
  1771  0007FA  6E26               	movwf	seek@temp,c
  1772  0007FC  6A27               	clrf	seek@temp+1,c
  1773                           
  1774                           ;fm.h: 335: if (temp != 0)
  1775  0007FE  5026               	movf	seek@temp,w,c
  1776  000800  1027               	iorwf	seek@temp+1,w,c
  1777  000802  A4D8               	btfss	status,2,c
  1778                           
  1779                           ;fm.h: 336: tuneWithAutoHiLo();
  1780  000804  ECCA  F002         	call	_tuneWithAutoHiLo	;wreg free
  1781                           
  1782                           ;fm.h: 339: setHardmute(0);
  1783  000808  0E00               	movlw	0
  1784  00080A  EC80  F007         	call	_setHardmute
  1785                           
  1786                           ;fm.h: 341: curChannel = frequency() - 690;
  1787  00080E  EC46  F007         	call	_frequency	;wreg free
  1788  000812  0E4E               	movlw	78
  1789  000814  240C               	addwf	?_frequency,w,c
  1790  000816  6E23               	movwf	seek@curChannel,c
  1791  000818  0EFD               	movlw	253
  1792  00081A  200D               	addwfc	?_frequency+1,w,c
  1793  00081C  6E24               	movwf	seek@curChannel+1,c
  1794                           
  1795                           ;fm.h: 342: regImg[2] = regImg[2] & 0xFE00;
  1796  00081E  0E00               	movlw	0
  1797  000820  1435               	andwf	_regImg+4,w,c
  1798  000822  6E35               	movwf	_regImg+4,c
  1799  000824  0EFE               	movlw	254
  1800  000826  1436               	andwf	_regImg+5,w,c
  1801  000828  6E36               	movwf	_regImg+5,c
  1802                           
  1803                           ;fm.h: 343: regImg[2] |= curChannel;
  1804  00082A  5023               	movf	seek@curChannel,w,c
  1805  00082C  1235               	iorwf	_regImg+4,f,c
  1806  00082E  5024               	movf	seek@curChannel+1,w,c
  1807  000830  1236               	iorwf	_regImg+5,f,c
  1808                           
  1809                           ;fm.h: 344: FMwrite(2);
  1810  000832  0E02               	movlw	2
  1811  000834  EC64  F006         	call	_FMwrite
  1812                           
  1813                           ;fm.h: 346: return frequency();
  1814                           ;	Return value of _seek is never used
  1815  000838  EC46  F007         	call	_frequency	;wreg free
  1816  00083C  0012               	return	
  1817  00083E                     __end_of_seek:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _tuneWithAutoHiLo *****************
  1828 ;; Defined at:
  1829 ;;		line 395 in file "fm.h"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  status          2   32[COMRAM] unsigned int 
  1834 ;;  temp            2   28[COMRAM] unsigned short 
  1835 ;;  curChannel      2   26[COMRAM] unsigned short 
  1836 ;;  rssi_hi         1   31[COMRAM] unsigned char 
  1837 ;;  rssi_lo         1   30[COMRAM] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1847 ;;      Params:         0       0       0       0
  1848 ;;      Locals:         8       0       0       0
  1849 ;;      Temps:          0       0       0       0
  1850 ;;      Totals:         8       0       0       0
  1851 ;;Total ram usage:        8 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    5
  1854 ;; This function calls:
  1855 ;;		_FMread
  1856 ;;		_FMwrite
  1857 ;;		_frequency
  1858 ;;		_readLOInjection
  1859 ;;		_setBitInRegister
  1860 ;;		_setHardmute
  1861 ;; This function is called by:
  1862 ;;		_seek
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text9
  1867  000594                     __ptext9:
  1868                           	opt stack 0
  1869  000594                     _tuneWithAutoHiLo:
  1870                           	opt stack 23
  1871                           
  1872                           ;fm.h: 423: unsigned char rssi_lo, rssi_hi;
  1873                           ;fm.h: 424: unsigned short curChannel, temp = 0;
  1874                           
  1875                           ;incstack = 0
  1876  000594  0E00               	movlw	0
  1877  000596  6E1E               	movwf	tuneWithAutoHiLo@temp+1,c
  1878  000598  0E00               	movlw	0
  1879  00059A  6E1D               	movwf	tuneWithAutoHiLo@temp,c
  1880                           
  1881                           ;fm.h: 425: unsigned int status;
  1882                           ;fm.h: 428: setHardmute(1);
  1883  00059C  0E01               	movlw	1
  1884  00059E  EC80  F007         	call	_setHardmute
  1885                           
  1886                           ;fm.h: 430: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1887  0005A2  0E56               	movlw	low (_tune_bit+2)
  1888  0005A4  6EF6               	movwf	tblptrl,c
  1889  0005A6  0E03               	movlw	high (_tune_bit+2)
  1890  0005A8  6EF7               	movwf	tblptrh,c
  1891  0005AA                     	if	0	;tblptru may be non-zero
  1892  0005AA                     	endif
  1893  0005AA                     	if	0	;tblptru may be non-zero
  1894  0005AA                     	endif
  1895  0005AA  0008               	tblrd		*
  1896  0005AC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1897  0005B0  0E00               	movlw	0
  1898  0005B2  6E09               	movwf	setBitInRegister@bitState,c
  1899  0005B4  0E54               	movlw	low _tune_bit
  1900  0005B6  6EF6               	movwf	tblptrl,c
  1901  0005B8                     	if	1	;There is more than 1 active tblptr byte
  1902  0005B8  0E03               	movlw	high _tune_bit
  1903  0005BA  6EF7               	movwf	tblptrh,c
  1904  0005BC                     	endif
  1905  0005BC                     	if	0	;There are less than 3 active tblptr bytes
  1906  0005BC                     	endif
  1907  0005BC  0008               	tblrd		*
  1908  0005BE  50F5               	movf	tablat,w,c
  1909  0005C0  ECB8  F005         	call	_setBitInRegister
  1910                           
  1911                           ;fm.h: 433: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1912  0005C4  0E4A               	movlw	low (_seek_bit+2)
  1913  0005C6  6EF6               	movwf	tblptrl,c
  1914  0005C8  0E03               	movlw	high (_seek_bit+2)
  1915  0005CA  6EF7               	movwf	tblptrh,c
  1916  0005CC                     	if	0	;tblptru may be non-zero
  1917  0005CC                     	endif
  1918  0005CC                     	if	0	;tblptru may be non-zero
  1919  0005CC                     	endif
  1920  0005CC  0008               	tblrd		*
  1921  0005CE  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1922  0005D2  0E00               	movlw	0
  1923  0005D4  6E09               	movwf	setBitInRegister@bitState,c
  1924  0005D6  0E48               	movlw	low _seek_bit
  1925  0005D8  6EF6               	movwf	tblptrl,c
  1926  0005DA                     	if	1	;There is more than 1 active tblptr byte
  1927  0005DA  0E03               	movlw	high _seek_bit
  1928  0005DC  6EF7               	movwf	tblptrh,c
  1929  0005DE                     	endif
  1930  0005DE                     	if	0	;There are less than 3 active tblptr bytes
  1931  0005DE                     	endif
  1932  0005DE  0008               	tblrd		*
  1933  0005E0  50F5               	movf	tablat,w,c
  1934  0005E2  ECB8  F005         	call	_setBitInRegister
  1935                           
  1936                           ;fm.h: 436: curChannel = frequency() - 690;
  1937  0005E6  EC46  F007         	call	_frequency	;wreg free
  1938  0005EA  0E4E               	movlw	78
  1939  0005EC  240C               	addwf	?_frequency,w,c
  1940  0005EE  6E1B               	movwf	tuneWithAutoHiLo@curChannel,c
  1941  0005F0  0EFD               	movlw	253
  1942  0005F2  200D               	addwfc	?_frequency+1,w,c
  1943  0005F4  6E1C               	movwf	tuneWithAutoHiLo@curChannel+1,c
  1944                           
  1945                           ;fm.h: 437: regImg[2] = regImg[2] & 0xFE00;
  1946  0005F6  0E00               	movlw	0
  1947  0005F8  1435               	andwf	_regImg+4,w,c
  1948  0005FA  6E35               	movwf	_regImg+4,c
  1949  0005FC  0EFE               	movlw	254
  1950  0005FE  1436               	andwf	_regImg+5,w,c
  1951  000600  6E36               	movwf	_regImg+5,c
  1952                           
  1953                           ;fm.h: 438: regImg[2] |= curChannel;
  1954  000602  501B               	movf	tuneWithAutoHiLo@curChannel,w,c
  1955  000604  1235               	iorwf	_regImg+4,f,c
  1956  000606  501C               	movf	tuneWithAutoHiLo@curChannel+1,w,c
  1957  000608  1236               	iorwf	_regImg+5,f,c
  1958                           
  1959                           ;fm.h: 439: FMwrite(2);
  1960  00060A  0E02               	movlw	2
  1961  00060C  EC64  F006         	call	_FMwrite
  1962                           
  1963                           ;fm.h: 442: rssi_lo = readLOInjection(0);
  1964  000610  0E00               	movlw	0
  1965  000612  EC1F  F004         	call	_readLOInjection
  1966  000616  6E1F               	movwf	tuneWithAutoHiLo@rssi_lo,c
  1967                           
  1968                           ;fm.h: 445: rssi_hi = readLOInjection(1);
  1969  000618  0E01               	movlw	1
  1970  00061A  EC1F  F004         	call	_readLOInjection
  1971  00061E  6E20               	movwf	tuneWithAutoHiLo@rssi_hi,c
  1972                           
  1973                           ;fm.h: 448: if (rssi_hi > rssi_lo) {
  1974  000620  5020               	movf	tuneWithAutoHiLo@rssi_hi,w,c
  1975  000622  5C1F               	subwf	tuneWithAutoHiLo@rssi_lo,w,c
  1976  000624  B0D8               	btfsc	status,0,c
  1977  000626  D034               	goto	l1808
  1978                           
  1979                           ;fm.h: 450: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 1);
  1980  000628  0E3E               	movlw	low (_hiloctrl1_bit+2)
  1981  00062A  6EF6               	movwf	tblptrl,c
  1982  00062C  0E03               	movlw	high (_hiloctrl1_bit+2)
  1983  00062E  6EF7               	movwf	tblptrh,c
  1984  000630                     	if	0	;tblptru may be non-zero
  1985  000630                     	endif
  1986  000630                     	if	0	;tblptru may be non-zero
  1987  000630                     	endif
  1988  000630  0008               	tblrd		*
  1989  000632  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1990  000636  0E01               	movlw	1
  1991  000638  6E09               	movwf	setBitInRegister@bitState,c
  1992  00063A  0E3C               	movlw	low _hiloctrl1_bit
  1993  00063C  6EF6               	movwf	tblptrl,c
  1994  00063E                     	if	1	;There is more than 1 active tblptr byte
  1995  00063E  0E03               	movlw	high _hiloctrl1_bit
  1996  000640  6EF7               	movwf	tblptrh,c
  1997  000642                     	endif
  1998  000642                     	if	0	;There are less than 3 active tblptr bytes
  1999  000642                     	endif
  2000  000642  0008               	tblrd		*
  2001  000644  50F5               	movf	tablat,w,c
  2002  000646  ECB8  F005         	call	_setBitInRegister
  2003                           
  2004                           ;fm.h: 451: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 1);
  2005  00064A  0E42               	movlw	low (_hiloctrl2_bit+2)
  2006  00064C  6EF6               	movwf	tblptrl,c
  2007  00064E  0E03               	movlw	high (_hiloctrl2_bit+2)
  2008  000650  6EF7               	movwf	tblptrh,c
  2009  000652                     	if	0	;tblptru may be non-zero
  2010  000652                     	endif
  2011  000652                     	if	0	;tblptru may be non-zero
  2012  000652                     	endif
  2013  000652  0008               	tblrd		*
  2014  000654  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2015  000658  0E01               	movlw	1
  2016  00065A  6E09               	movwf	setBitInRegister@bitState,c
  2017  00065C  0E40               	movlw	low _hiloctrl2_bit
  2018  00065E  6EF6               	movwf	tblptrl,c
  2019  000660                     	if	1	;There is more than 1 active tblptr byte
  2020  000660  0E03               	movlw	high _hiloctrl2_bit
  2021  000662  6EF7               	movwf	tblptrh,c
  2022  000664                     	endif
  2023  000664                     	if	0	;There are less than 3 active tblptr bytes
  2024  000664                     	endif
  2025  000664  0008               	tblrd		*
  2026  000666  50F5               	movf	tablat,w,c
  2027  000668  ECB8  F005         	call	_setBitInRegister
  2028                           
  2029                           ;fm.h: 452: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 0);
  2030  00066C  0E46               	movlw	low (_hiloside_bit+2)
  2031  00066E  6EF6               	movwf	tblptrl,c
  2032  000670  0E03               	movlw	high (_hiloside_bit+2)
  2033  000672  6EF7               	movwf	tblptrh,c
  2034  000674                     	if	0	;tblptru may be non-zero
  2035  000674                     	endif
  2036  000674                     	if	0	;tblptru may be non-zero
  2037  000674                     	endif
  2038  000674  0008               	tblrd		*
  2039  000676  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2040  00067A  0E00               	movlw	0
  2041  00067C  6E09               	movwf	setBitInRegister@bitState,c
  2042  00067E  0E44               	movlw	low _hiloside_bit
  2043  000680  6EF6               	movwf	tblptrl,c
  2044  000682                     	if	1	;There is more than 1 active tblptr byte
  2045  000682  0E03               	movlw	high _hiloside_bit
  2046  000684  6EF7               	movwf	tblptrh,c
  2047  000686                     	endif
  2048  000686                     	if	0	;There are less than 3 active tblptr bytes
  2049  000686                     	endif
  2050  000686  0008               	tblrd		*
  2051  000688  50F5               	movf	tablat,w,c
  2052  00068A  ECB8  F005         	call	_setBitInRegister
  2053                           
  2054                           ;fm.h: 453: } else {
  2055  00068E  D033               	goto	l151
  2056  000690                     l1808:
  2057                           
  2058                           ;fm.h: 455: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 0);
  2059  000690  0E3E               	movlw	low (_hiloctrl1_bit+2)
  2060  000692  6EF6               	movwf	tblptrl,c
  2061  000694  0E03               	movlw	high (_hiloctrl1_bit+2)
  2062  000696  6EF7               	movwf	tblptrh,c
  2063  000698                     	if	0	;tblptru may be non-zero
  2064  000698                     	endif
  2065  000698                     	if	0	;tblptru may be non-zero
  2066  000698                     	endif
  2067  000698  0008               	tblrd		*
  2068  00069A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2069  00069E  0E00               	movlw	0
  2070  0006A0  6E09               	movwf	setBitInRegister@bitState,c
  2071  0006A2  0E3C               	movlw	low _hiloctrl1_bit
  2072  0006A4  6EF6               	movwf	tblptrl,c
  2073  0006A6                     	if	1	;There is more than 1 active tblptr byte
  2074  0006A6  0E03               	movlw	high _hiloctrl1_bit
  2075  0006A8  6EF7               	movwf	tblptrh,c
  2076  0006AA                     	endif
  2077  0006AA                     	if	0	;There are less than 3 active tblptr bytes
  2078  0006AA                     	endif
  2079  0006AA  0008               	tblrd		*
  2080  0006AC  50F5               	movf	tablat,w,c
  2081  0006AE  ECB8  F005         	call	_setBitInRegister
  2082                           
  2083                           ;fm.h: 456: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 0);
  2084  0006B2  0E42               	movlw	low (_hiloctrl2_bit+2)
  2085  0006B4  6EF6               	movwf	tblptrl,c
  2086  0006B6  0E03               	movlw	high (_hiloctrl2_bit+2)
  2087  0006B8  6EF7               	movwf	tblptrh,c
  2088  0006BA                     	if	0	;tblptru may be non-zero
  2089  0006BA                     	endif
  2090  0006BA                     	if	0	;tblptru may be non-zero
  2091  0006BA                     	endif
  2092  0006BA  0008               	tblrd		*
  2093  0006BC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2094  0006C0  0E00               	movlw	0
  2095  0006C2  6E09               	movwf	setBitInRegister@bitState,c
  2096  0006C4  0E40               	movlw	low _hiloctrl2_bit
  2097  0006C6  6EF6               	movwf	tblptrl,c
  2098  0006C8                     	if	1	;There is more than 1 active tblptr byte
  2099  0006C8  0E03               	movlw	high _hiloctrl2_bit
  2100  0006CA  6EF7               	movwf	tblptrh,c
  2101  0006CC                     	endif
  2102  0006CC                     	if	0	;There are less than 3 active tblptr bytes
  2103  0006CC                     	endif
  2104  0006CC  0008               	tblrd		*
  2105  0006CE  50F5               	movf	tablat,w,c
  2106  0006D0  ECB8  F005         	call	_setBitInRegister
  2107                           
  2108                           ;fm.h: 457: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 1);
  2109  0006D4  0E46               	movlw	low (_hiloside_bit+2)
  2110  0006D6  6EF6               	movwf	tblptrl,c
  2111  0006D8  0E03               	movlw	high (_hiloside_bit+2)
  2112  0006DA  6EF7               	movwf	tblptrh,c
  2113  0006DC                     	if	0	;tblptru may be non-zero
  2114  0006DC                     	endif
  2115  0006DC                     	if	0	;tblptru may be non-zero
  2116  0006DC                     	endif
  2117  0006DC  0008               	tblrd		*
  2118  0006DE  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2119  0006E2  0E01               	movlw	1
  2120  0006E4  6E09               	movwf	setBitInRegister@bitState,c
  2121  0006E6  0E44               	movlw	low _hiloside_bit
  2122  0006E8  6EF6               	movwf	tblptrl,c
  2123  0006EA                     	if	1	;There is more than 1 active tblptr byte
  2124  0006EA  0E03               	movlw	high _hiloside_bit
  2125  0006EC  6EF7               	movwf	tblptrh,c
  2126  0006EE                     	endif
  2127  0006EE                     	if	0	;There are less than 3 active tblptr bytes
  2128  0006EE                     	endif
  2129  0006EE  0008               	tblrd		*
  2130  0006F0  50F5               	movf	tablat,w,c
  2131  0006F2  ECB8  F005         	call	_setBitInRegister
  2132  0006F6                     l151:
  2133                           
  2134                           ;fm.h: 458: }
  2135                           ;fm.h: 461: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2136  0006F6  0E56               	movlw	low (_tune_bit+2)
  2137  0006F8  6EF6               	movwf	tblptrl,c
  2138  0006FA  0E03               	movlw	high (_tune_bit+2)
  2139  0006FC  6EF7               	movwf	tblptrh,c
  2140  0006FE                     	if	0	;tblptru may be non-zero
  2141  0006FE                     	endif
  2142  0006FE                     	if	0	;tblptru may be non-zero
  2143  0006FE                     	endif
  2144  0006FE  0008               	tblrd		*
  2145  000700  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2146  000704  0E01               	movlw	1
  2147  000706  6E09               	movwf	setBitInRegister@bitState,c
  2148  000708  0E54               	movlw	low _tune_bit
  2149  00070A  6EF6               	movwf	tblptrl,c
  2150  00070C                     	if	1	;There is more than 1 active tblptr byte
  2151  00070C  0E03               	movlw	high _tune_bit
  2152  00070E  6EF7               	movwf	tblptrh,c
  2153  000710                     	endif
  2154  000710                     	if	0	;There are less than 3 active tblptr bytes
  2155  000710                     	endif
  2156  000710  0008               	tblrd		*
  2157  000712  50F5               	movf	tablat,w,c
  2158  000714  ECB8  F005         	call	_setBitInRegister
  2159                           
  2160                           ;fm.h: 464: while (temp == 0) {
  2161  000718  D00B               	goto	l152
  2162  00071A                     l1810:
  2163                           
  2164                           ;fm.h: 465: if (FMread(0x13, &status) == 0);
  2165  00071A  0E21               	movlw	low tuneWithAutoHiLo@status
  2166  00071C  6E03               	movwf	FMread@data,c
  2167  00071E  0E00               	movlw	high tuneWithAutoHiLo@status
  2168  000720  6E04               	movwf	FMread@data+1,c
  2169  000722  0E13               	movlw	19
  2170  000724  ECF0  F004         	call	_FMread
  2171                           
  2172                           ;fm.h: 466: temp = status & 0x0020;
  2173  000728  0E20               	movlw	32
  2174  00072A  1421               	andwf	tuneWithAutoHiLo@status,w,c
  2175  00072C  6E1D               	movwf	tuneWithAutoHiLo@temp,c
  2176  00072E  6A1E               	clrf	tuneWithAutoHiLo@temp+1,c
  2177  000730                     l152:
  2178  000730  501D               	movf	tuneWithAutoHiLo@temp,w,c
  2179  000732  101E               	iorwf	tuneWithAutoHiLo@temp+1,w,c
  2180  000734  B4D8               	btfsc	status,2,c
  2181  000736  D7F1               	goto	l1810
  2182                           
  2183                           ;fm.h: 467: }
  2184                           ;fm.h: 469: setHardmute(0);
  2185  000738  0E00               	movlw	0
  2186  00073A  EC80  F007         	call	_setHardmute
  2187  00073E  0012               	return		;funcret
  2188  000740                     __end_of_tuneWithAutoHiLo:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _setHardmute *****************
  2199 ;; Defined at:
  2200 ;;		line 284 in file "fm.h"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  bitState        1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  bitState        1   17[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2214 ;;      Params:         0       0       0       0
  2215 ;;      Locals:         1       0       0       0
  2216 ;;      Temps:          0       0       0       0
  2217 ;;      Totals:         1       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    4
  2221 ;; This function calls:
  2222 ;;		_setBitInRegister
  2223 ;; This function is called by:
  2224 ;;		_seek
  2225 ;;		_tuneWithAutoHiLo
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text10
  2230  000F00                     __ptext10:
  2231                           	opt stack 0
  2232  000F00                     _setHardmute:
  2233                           	opt stack 23
  2234                           
  2235                           ;incstack = 0
  2236                           ;setHardmute@bitState stored from wreg
  2237  000F00  6E12               	movwf	setHardmute@bitState,c
  2238                           
  2239                           ;fm.h: 285: setBitInRegister(hardmute_bit[0], hardmute_bit[1], bitState);
  2240  000F02  0E3A               	movlw	low (_hardmute_bit+2)
  2241  000F04  6EF6               	movwf	tblptrl,c
  2242  000F06  0E03               	movlw	high (_hardmute_bit+2)
  2243  000F08  6EF7               	movwf	tblptrh,c
  2244  000F0A                     	if	0	;tblptru may be non-zero
  2245  000F0A                     	endif
  2246  000F0A                     	if	0	;tblptru may be non-zero
  2247  000F0A                     	endif
  2248  000F0A  0008               	tblrd		*
  2249  000F0C  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2250  000F10  C012  F009         	movff	setHardmute@bitState,setBitInRegister@bitState
  2251  000F14  0E38               	movlw	low _hardmute_bit
  2252  000F16  6EF6               	movwf	tblptrl,c
  2253  000F18                     	if	1	;There is more than 1 active tblptr byte
  2254  000F18  0E03               	movlw	high _hardmute_bit
  2255  000F1A  6EF7               	movwf	tblptrh,c
  2256  000F1C                     	endif
  2257  000F1C                     	if	0	;There are less than 3 active tblptr bytes
  2258  000F1C                     	endif
  2259  000F1C  0008               	tblrd		*
  2260  000F1E  50F5               	movf	tablat,w,c
  2261  000F20  ECB8  F005         	call	_setBitInRegister
  2262  000F24  0012               	return		;funcret
  2263  000F26                     __end_of_setHardmute:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _readLOInjection *****************
  2274 ;; Defined at:
  2275 ;;		line 351 in file "fm.h"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  loHi            1    wreg     unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  loHi            1   20[COMRAM] unsigned char 
  2280 ;;  status          2   24[COMRAM] unsigned int 
  2281 ;;  temp            2   21[COMRAM] unsigned short 
  2282 ;;  rssi_val        1   23[COMRAM] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      unsigned char 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2292 ;;      Params:         0       0       0       0
  2293 ;;      Locals:         6       0       0       0
  2294 ;;      Temps:          3       0       0       0
  2295 ;;      Totals:         9       0       0       0
  2296 ;;Total ram usage:        9 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    4
  2299 ;; This function calls:
  2300 ;;		_FMread
  2301 ;;		_FMwrite
  2302 ;;		_setBitInRegister
  2303 ;; This function is called by:
  2304 ;;		_tuneWithAutoHiLo
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text11
  2309  00083E                     __ptext11:
  2310                           	opt stack 0
  2311  00083E                     _readLOInjection:
  2312                           	opt stack 23
  2313                           
  2314                           ;incstack = 0
  2315                           ;readLOInjection@loHi stored from wreg
  2316  00083E  6E15               	movwf	readLOInjection@loHi,c
  2317                           
  2318                           ;fm.h: 361: unsigned char rssi_val = 0;
  2319  000840  0E00               	movlw	0
  2320  000842  6E18               	movwf	readLOInjection@rssi_val,c
  2321                           
  2322                           ;fm.h: 362: unsigned short temp = 0;
  2323  000844  0E00               	movlw	0
  2324  000846  6E17               	movwf	readLOInjection@temp+1,c
  2325  000848  0E00               	movlw	0
  2326  00084A  6E16               	movwf	readLOInjection@temp,c
  2327                           
  2328                           ;fm.h: 363: unsigned int status;
  2329                           ;fm.h: 365: if (loHi == 1)
  2330  00084C  0415               	decf	readLOInjection@loHi,w,c
  2331  00084E  A4D8               	btfss	status,2,c
  2332  000850  D006               	goto	l1748
  2333                           
  2334                           ;fm.h: 366: regImg[11] = regImg[11] | ~(0x7FFA);
  2335  000852  0E05               	movlw	5
  2336  000854  1047               	iorwf	_regImg+22,w,c
  2337  000856  6E47               	movwf	_regImg+22,c
  2338  000858  0E80               	movlw	128
  2339  00085A  1048               	iorwf	_regImg+23,w,c
  2340  00085C  D005               	goto	L11
  2341  00085E                     l1748:
  2342                           
  2343                           ;fm.h: 367: else
  2344                           ;fm.h: 368: regImg[11] = regImg[11] & 0x7FFA;
  2345  00085E  0EFA               	movlw	250
  2346  000860  1447               	andwf	_regImg+22,w,c
  2347  000862  6E47               	movwf	_regImg+22,c
  2348  000864  0E7F               	movlw	127
  2349  000866  1448               	andwf	_regImg+23,w,c
  2350  000868                     L11:
  2351  000868  6E48               	movwf	_regImg+23,c
  2352                           
  2353                           ;fm.h: 370: FMwrite(11);
  2354  00086A  0E0B               	movlw	11
  2355  00086C  EC64  F006         	call	_FMwrite
  2356                           
  2357                           ;fm.h: 373: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2358  000870  0E56               	movlw	low (_tune_bit+2)
  2359  000872  6EF6               	movwf	tblptrl,c
  2360  000874  0E03               	movlw	high (_tune_bit+2)
  2361  000876  6EF7               	movwf	tblptrh,c
  2362  000878                     	if	0	;tblptru may be non-zero
  2363  000878                     	endif
  2364  000878                     	if	0	;tblptru may be non-zero
  2365  000878                     	endif
  2366  000878  0008               	tblrd		*
  2367  00087A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2368  00087E  0E01               	movlw	1
  2369  000880  6E09               	movwf	setBitInRegister@bitState,c
  2370  000882  0E54               	movlw	low _tune_bit
  2371  000884  6EF6               	movwf	tblptrl,c
  2372  000886                     	if	1	;There is more than 1 active tblptr byte
  2373  000886  0E03               	movlw	high _tune_bit
  2374  000888  6EF7               	movwf	tblptrh,c
  2375  00088A                     	endif
  2376  00088A                     	if	0	;There are less than 3 active tblptr bytes
  2377  00088A                     	endif
  2378  00088A  0008               	tblrd		*
  2379  00088C  50F5               	movf	tablat,w,c
  2380  00088E  ECB8  F005         	call	_setBitInRegister
  2381                           
  2382                           ;fm.h: 377: while (temp == 0) {
  2383  000892  D010               	goto	l142
  2384  000894                     l1754:
  2385                           
  2386                           ;fm.h: 378: if (FMread(0x13, &status) != 0) return 1;
  2387  000894  0E19               	movlw	low readLOInjection@status
  2388  000896  6E03               	movwf	FMread@data,c
  2389  000898  0E00               	movlw	high readLOInjection@status
  2390  00089A  6E04               	movwf	FMread@data+1,c
  2391  00089C  0E13               	movlw	19
  2392  00089E  ECF0  F004         	call	_FMread
  2393  0008A2  0900               	iorlw	0
  2394  0008A4  B4D8               	btfsc	status,2,c
  2395  0008A6  D002               	goto	l1760
  2396  0008A8  0E01               	movlw	1
  2397  0008AA  0012               	return	
  2398  0008AC                     l1760:
  2399                           
  2400                           ;fm.h: 379: temp = status & 0x0020;
  2401  0008AC  0E20               	movlw	32
  2402  0008AE  1419               	andwf	readLOInjection@status,w,c
  2403  0008B0  6E16               	movwf	readLOInjection@temp,c
  2404  0008B2  6A17               	clrf	readLOInjection@temp+1,c
  2405  0008B4                     l142:
  2406  0008B4  5016               	movf	readLOInjection@temp,w,c
  2407  0008B6  1017               	iorwf	readLOInjection@temp+1,w,c
  2408  0008B8  B4D8               	btfsc	status,2,c
  2409  0008BA  D7EC               	goto	l1754
  2410                           
  2411                           ;fm.h: 380: }
  2412                           ;fm.h: 384: if (FMread(0x13, &status) != 0) return 1;
  2413  0008BC  0E19               	movlw	low readLOInjection@status
  2414  0008BE  6E03               	movwf	FMread@data,c
  2415  0008C0  0E00               	movlw	high readLOInjection@status
  2416  0008C2  6E04               	movwf	FMread@data+1,c
  2417  0008C4  0E13               	movlw	19
  2418  0008C6  ECF0  F004         	call	_FMread
  2419  0008CA  0900               	iorlw	0
  2420  0008CC  B4D8               	btfsc	status,2,c
  2421  0008CE  D002               	goto	l1768
  2422  0008D0  0E01               	movlw	1
  2423  0008D2  0012               	return	
  2424  0008D4                     l1768:
  2425                           
  2426                           ;fm.h: 385: rssi_val = (status & 0xFE00) >> 9;
  2427  0008D4  C019  F012         	movff	readLOInjection@status,??_readLOInjection
  2428  0008D8  C01A  F013         	movff	readLOInjection@status+1,??_readLOInjection+1
  2429  0008DC  0E09               	movlw	9
  2430  0008DE  6E14               	movwf	(??_readLOInjection+2)& (0+255),c
  2431  0008E0                     u1125:
  2432  0008E0  90D8               	bcf	status,0,c
  2433  0008E2  3213               	rrcf	??_readLOInjection+1,f,c
  2434  0008E4  3212               	rrcf	??_readLOInjection,f,c
  2435  0008E6  2E14               	decfsz	(??_readLOInjection+2)& (0+255),f,c
  2436  0008E8  D7FB               	goto	u1125
  2437  0008EA  5012               	movf	??_readLOInjection,w,c
  2438  0008EC  0B7F               	andlw	127
  2439  0008EE  6E18               	movwf	readLOInjection@rssi_val,c
  2440                           
  2441                           ;fm.h: 388: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  2442  0008F0  0E56               	movlw	low (_tune_bit+2)
  2443  0008F2  6EF6               	movwf	tblptrl,c
  2444  0008F4  0E03               	movlw	high (_tune_bit+2)
  2445  0008F6  6EF7               	movwf	tblptrh,c
  2446  0008F8                     	if	0	;tblptru may be non-zero
  2447  0008F8                     	endif
  2448  0008F8                     	if	0	;tblptru may be non-zero
  2449  0008F8                     	endif
  2450  0008F8  0008               	tblrd		*
  2451  0008FA  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2452  0008FE  0E00               	movlw	0
  2453  000900  6E09               	movwf	setBitInRegister@bitState,c
  2454  000902  0E54               	movlw	low _tune_bit
  2455  000904  6EF6               	movwf	tblptrl,c
  2456  000906                     	if	1	;There is more than 1 active tblptr byte
  2457  000906  0E03               	movlw	high _tune_bit
  2458  000908  6EF7               	movwf	tblptrh,c
  2459  00090A                     	endif
  2460  00090A                     	if	0	;There are less than 3 active tblptr bytes
  2461  00090A                     	endif
  2462  00090A  0008               	tblrd		*
  2463  00090C  50F5               	movf	tablat,w,c
  2464  00090E  ECB8  F005         	call	_setBitInRegister
  2465                           
  2466                           ;fm.h: 390: return rssi_val;
  2467  000912  5018               	movf	readLOInjection@rssi_val,w,c
  2468  000914  0012               	return	
  2469  000916                     __end_of_readLOInjection:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _frequency *****************
  2480 ;; Defined at:
  2481 ;;		line 472 in file "fm.h"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  data            2   18[COMRAM] unsigned int 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2   11[COMRAM] unsigned short 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2495 ;;      Params:         2       0       0       0
  2496 ;;      Locals:         2       0       0       0
  2497 ;;      Temps:          5       0       0       0
  2498 ;;      Totals:         9       0       0       0
  2499 ;;Total ram usage:        9 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		_FMread
  2504 ;; This function is called by:
  2505 ;;		_seek
  2506 ;;		_tuneWithAutoHiLo
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text12
  2511  000E8C                     __ptext12:
  2512                           	opt stack 0
  2513  000E8C                     _frequency:
  2514                           	opt stack 24
  2515                           
  2516                           ;fm.h: 473: unsigned int data;
  2517                           ;fm.h: 474: FMread(0x13, &data);
  2518                           
  2519                           ;incstack = 0
  2520  000E8C  0E13               	movlw	low frequency@data
  2521  000E8E  6E03               	movwf	FMread@data,c
  2522  000E90  0E00               	movlw	high frequency@data
  2523  000E92  6E04               	movwf	FMread@data+1,c
  2524  000E94  0E13               	movlw	19
  2525  000E96  ECF0  F004         	call	_FMread
  2526                           
  2527                           ;fm.h: 475: return (((data & 0xFF80) >> 7) + 690);
  2528  000E9A  0EFF               	movlw	255
  2529  000E9C  6E0E               	movwf	??_frequency& (0+255),c
  2530  000E9E  0E01               	movlw	1
  2531  000EA0  6E0F               	movwf	(??_frequency+1)& (0+255),c
  2532  000EA2  C013  F010         	movff	frequency@data,??_frequency+2
  2533  000EA6  C014  F011         	movff	frequency@data+1,??_frequency+3
  2534  000EAA  0E07               	movlw	7
  2535  000EAC  6E12               	movwf	(??_frequency+4)& (0+255),c
  2536  000EAE                     u1075:
  2537  000EAE  90D8               	bcf	status,0,c
  2538  000EB0  3211               	rrcf	??_frequency+3,f,c
  2539  000EB2  3210               	rrcf	??_frequency+2,f,c
  2540  000EB4  2E12               	decfsz	(??_frequency+4)& (0+255),f,c
  2541  000EB6  D7FB               	goto	u1075
  2542  000EB8  500E               	movf	??_frequency,w,c
  2543  000EBA  1610               	andwf	??_frequency+2,f,c
  2544  000EBC  500F               	movf	??_frequency+1,w,c
  2545  000EBE  1611               	andwf	??_frequency+3,f,c
  2546  000EC0  0EB2               	movlw	178
  2547  000EC2  2410               	addwf	??_frequency+2,w,c
  2548  000EC4  6E0C               	movwf	?_frequency,c
  2549  000EC6  0E02               	movlw	2
  2550  000EC8  2011               	addwfc	??_frequency+3,w,c
  2551  000ECA  6E0D               	movwf	?_frequency+1,c
  2552  000ECC  0012               	return	
  2553  000ECE                     __end_of_frequency:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _setSeekDirection *****************
  2564 ;; Defined at:
  2565 ;;		line 276 in file "fm.h"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  direction       1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  direction       1   17[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2579 ;;      Params:         0       0       0       0
  2580 ;;      Locals:         1       0       0       0
  2581 ;;      Temps:          0       0       0       0
  2582 ;;      Totals:         1       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    4
  2586 ;; This function calls:
  2587 ;;		_setBitInRegister
  2588 ;; This function is called by:
  2589 ;;		_seek
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text13
  2594  000DA8                     __ptext13:
  2595                           	opt stack 0
  2596  000DA8                     _setSeekDirection:
  2597                           	opt stack 24
  2598                           
  2599                           ;incstack = 0
  2600                           ;setSeekDirection@direction stored from wreg
  2601  000DA8  6E12               	movwf	setSeekDirection@direction,c
  2602                           
  2603                           ;fm.h: 278: if (direction == 'd')
  2604  000DAA  0E64               	movlw	100
  2605  000DAC  1812               	xorwf	setSeekDirection@direction,w,c
  2606  000DAE  A4D8               	btfss	status,2,c
  2607  000DB0  D012               	goto	l1780
  2608                           
  2609                           ;fm.h: 279: setBitInRegister(seekup_bit[0], seekup_bit[1], 0);
  2610  000DB2  0E4E               	movlw	low (_seekup_bit+2)
  2611  000DB4  6EF6               	movwf	tblptrl,c
  2612  000DB6  0E03               	movlw	high (_seekup_bit+2)
  2613  000DB8  6EF7               	movwf	tblptrh,c
  2614  000DBA                     	if	0	;tblptru may be non-zero
  2615  000DBA                     	endif
  2616  000DBA                     	if	0	;tblptru may be non-zero
  2617  000DBA                     	endif
  2618  000DBA  0008               	tblrd		*
  2619  000DBC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2620  000DC0  0E00               	movlw	0
  2621  000DC2  6E09               	movwf	setBitInRegister@bitState,c
  2622  000DC4  0E4C               	movlw	low _seekup_bit
  2623  000DC6  6EF6               	movwf	tblptrl,c
  2624  000DC8                     	if	1	;There is more than 1 active tblptr byte
  2625  000DC8  0E03               	movlw	high _seekup_bit
  2626  000DCA  6EF7               	movwf	tblptrh,c
  2627  000DCC                     	endif
  2628  000DCC                     	if	0	;There are less than 3 active tblptr bytes
  2629  000DCC                     	endif
  2630  000DCC  0008               	tblrd		*
  2631  000DCE  50F5               	movf	tablat,w,c
  2632  000DD0  ECB8  F005         	call	_setBitInRegister
  2633  000DD4  0012               	return	
  2634  000DD6                     l1780:
  2635                           
  2636                           ;fm.h: 280: else if (direction == 'u')
  2637  000DD6  0E75               	movlw	117
  2638  000DD8  1812               	xorwf	setSeekDirection@direction,w,c
  2639  000DDA  A4D8               	btfss	status,2,c
  2640  000DDC  0012               	return	
  2641                           
  2642                           ;fm.h: 281: setBitInRegister(seekup_bit[0], seekup_bit[1], 1);
  2643  000DDE  0E4E               	movlw	low (_seekup_bit+2)
  2644  000DE0  6EF6               	movwf	tblptrl,c
  2645  000DE2  0E03               	movlw	high (_seekup_bit+2)
  2646  000DE4  6EF7               	movwf	tblptrh,c
  2647  000DE6                     	if	0	;tblptru may be non-zero
  2648  000DE6                     	endif
  2649  000DE6                     	if	0	;tblptru may be non-zero
  2650  000DE6                     	endif
  2651  000DE6  0008               	tblrd		*
  2652  000DE8  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2653  000DEC  0E01               	movlw	1
  2654  000DEE  6E09               	movwf	setBitInRegister@bitState,c
  2655  000DF0  0E4C               	movlw	low _seekup_bit
  2656  000DF2  6EF6               	movwf	tblptrl,c
  2657  000DF4                     	if	1	;There is more than 1 active tblptr byte
  2658  000DF4  0E03               	movlw	high _seekup_bit
  2659  000DF6  6EF7               	movwf	tblptrh,c
  2660  000DF8                     	endif
  2661  000DF8                     	if	0	;There are less than 3 active tblptr bytes
  2662  000DF8                     	endif
  2663  000DF8  0008               	tblrd		*
  2664  000DFA  50F5               	movf	tablat,w,c
  2665  000DFC  ECB8  F005         	call	_setBitInRegister
  2666  000E00  0012               	return	
  2667  000E02                     __end_of_setSeekDirection:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _setBitInRegister *****************
  2678 ;; Defined at:
  2679 ;;		line 260 in file "fm.h"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  address         1    wreg     unsigned char 
  2682 ;;  bitRegister     1    7[COMRAM] unsigned char 
  2683 ;;  bitState        1    8[COMRAM] unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  address         1   16[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2695 ;;      Params:         2       0       0       0
  2696 ;;      Locals:         1       0       0       0
  2697 ;;      Temps:          7       0       0       0
  2698 ;;      Totals:        10       0       0       0
  2699 ;;Total ram usage:       10 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    3
  2702 ;; This function calls:
  2703 ;;		_FMwrite
  2704 ;; This function is called by:
  2705 ;;		_setSeekDirection
  2706 ;;		_setHardmute
  2707 ;;		_seek
  2708 ;;		_readLOInjection
  2709 ;;		_tuneWithAutoHiLo
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text14
  2714  000B70                     __ptext14:
  2715                           	opt stack 0
  2716  000B70                     _setBitInRegister:
  2717                           	opt stack 23
  2718                           
  2719                           ;incstack = 0
  2720                           ;setBitInRegister@address stored from wreg
  2721  000B70  6E11               	movwf	setBitInRegister@address,c
  2722                           
  2723                           ;fm.h: 262: if (bitState == 1)
  2724  000B72  0409               	decf	setBitInRegister@bitState,w,c
  2725  000B74  A4D8               	btfss	status,2,c
  2726  000B76  D02A               	goto	l1730
  2727                           
  2728                           ;fm.h: 263: regImg[address] = regImg[address] | (1 << bitRegister);
  2729  000B78  5011               	movf	setBitInRegister@address,w,c
  2730  000B7A  0D02               	mullw	2
  2731  000B7C  0E31               	movlw	low _regImg
  2732  000B7E  24F3               	addwf	prodl,w,c
  2733  000B80  6ED9               	movwf	fsr2l,c
  2734  000B82  0E00               	movlw	high _regImg
  2735  000B84  20F4               	addwfc	prodh,w,c
  2736  000B86  6EDA               	movwf	fsr2h,c
  2737  000B88  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2738  000B8C  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2739  000B90  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2740  000B94  0E01               	movlw	1
  2741  000B96  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2742  000B98  0E00               	movlw	0
  2743  000B9A  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2744  000B9C  2A0C               	incf	??_setBitInRegister+2,f,c
  2745  000B9E  D003               	goto	u1054
  2746  000BA0                     u1055:
  2747  000BA0  90D8               	bcf	status,0,c
  2748  000BA2  360D               	rlcf	??_setBitInRegister+3,f,c
  2749  000BA4  360E               	rlcf	??_setBitInRegister+4,f,c
  2750  000BA6                     u1054:
  2751  000BA6  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2752  000BA8  D7FB               	goto	u1055
  2753  000BAA  500A               	movf	??_setBitInRegister,w,c
  2754  000BAC  120D               	iorwf	??_setBitInRegister+3,f,c
  2755  000BAE  500B               	movf	??_setBitInRegister+1,w,c
  2756  000BB0  120E               	iorwf	??_setBitInRegister+4,f,c
  2757  000BB2  5011               	movf	setBitInRegister@address,w,c
  2758  000BB4  0D02               	mullw	2
  2759  000BB6  0E31               	movlw	low _regImg
  2760  000BB8  24F3               	addwf	prodl,w,c
  2761  000BBA  6ED9               	movwf	fsr2l,c
  2762  000BBC  0E00               	movlw	high _regImg
  2763  000BBE  20F4               	addwfc	prodh,w,c
  2764  000BC0  6EDA               	movwf	fsr2h,c
  2765  000BC2  C00D  FFDE         	movff	??_setBitInRegister+3,postinc2
  2766  000BC6  C00E  FFDD         	movff	??_setBitInRegister+4,postdec2
  2767  000BCA  D02D               	goto	l1732
  2768  000BCC                     l1730:
  2769                           
  2770                           ;fm.h: 264: else
  2771                           ;fm.h: 265: regImg[address] = regImg[address] & ~(1 << bitRegister);
  2772  000BCC  5011               	movf	setBitInRegister@address,w,c
  2773  000BCE  0D02               	mullw	2
  2774  000BD0  0E31               	movlw	low _regImg
  2775  000BD2  24F3               	addwf	prodl,w,c
  2776  000BD4  6ED9               	movwf	fsr2l,c
  2777  000BD6  0E00               	movlw	high _regImg
  2778  000BD8  20F4               	addwfc	prodh,w,c
  2779  000BDA  6EDA               	movwf	fsr2h,c
  2780  000BDC  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2781  000BE0  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2782  000BE4  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2783  000BE8  0E01               	movlw	1
  2784  000BEA  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2785  000BEC  0E00               	movlw	0
  2786  000BEE  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2787  000BF0  2A0C               	incf	??_setBitInRegister+2,f,c
  2788  000BF2  D003               	goto	u1064
  2789  000BF4                     u1065:
  2790  000BF4  90D8               	bcf	status,0,c
  2791  000BF6  360D               	rlcf	??_setBitInRegister+3,f,c
  2792  000BF8  360E               	rlcf	??_setBitInRegister+4,f,c
  2793  000BFA                     u1064:
  2794  000BFA  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2795  000BFC  D7FB               	goto	u1065
  2796  000BFE  1C0D               	comf	??_setBitInRegister+3,w,c
  2797  000C00  6E0F               	movwf	(??_setBitInRegister+5)& (0+255),c
  2798  000C02  1C0E               	comf	??_setBitInRegister+4,w,c
  2799  000C04  6E10               	movwf	(??_setBitInRegister+6)& (0+255),c
  2800  000C06  500A               	movf	??_setBitInRegister,w,c
  2801  000C08  160F               	andwf	??_setBitInRegister+5,f,c
  2802  000C0A  500B               	movf	??_setBitInRegister+1,w,c
  2803  000C0C  1610               	andwf	??_setBitInRegister+6,f,c
  2804  000C0E  5011               	movf	setBitInRegister@address,w,c
  2805  000C10  0D02               	mullw	2
  2806  000C12  0E31               	movlw	low _regImg
  2807  000C14  24F3               	addwf	prodl,w,c
  2808  000C16  6ED9               	movwf	fsr2l,c
  2809  000C18  0E00               	movlw	high _regImg
  2810  000C1A  20F4               	addwfc	prodh,w,c
  2811  000C1C  6EDA               	movwf	fsr2h,c
  2812  000C1E  C00F  FFDE         	movff	??_setBitInRegister+5,postinc2
  2813  000C22  C010  FFDD         	movff	??_setBitInRegister+6,postdec2
  2814  000C26                     l1732:
  2815                           
  2816                           ;fm.h: 267: FMwrite(address);
  2817  000C26  5011               	movf	setBitInRegister@address,w,c
  2818  000C28  EC64  F006         	call	_FMwrite
  2819  000C2C  0012               	return		;funcret
  2820  000C2E                     __end_of_setBitInRegister:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postinc2	equ	0xFDE
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _SeekUP *****************
  2837 ;; Defined at:
  2838 ;;		line 704 in file "fm.h"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2852 ;;      Params:         0       0       0       0
  2853 ;;      Locals:         0       0       0       0
  2854 ;;      Temps:          0       0       0       0
  2855 ;;      Totals:         0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    1
  2859 ;; This function calls:
  2860 ;;		_delay_10ms
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text15
  2867  00100C                     __ptext15:
  2868                           	opt stack 0
  2869  00100C                     _SeekUP:
  2870                           	opt stack 29
  2871                           
  2872                           ;fm.h: 706: PORTCbits.RC7 = 1;
  2873                           
  2874                           ;incstack = 0
  2875  00100C  8E82               	bsf	3970,7,c	;volatile
  2876                           
  2877                           ;fm.h: 707: delay_10ms(10);
  2878  00100E  0E00               	movlw	0
  2879  001010  6E02               	movwf	delay_10ms@n+1,c
  2880  001012  0E0A               	movlw	10
  2881  001014  6E01               	movwf	delay_10ms@n,c
  2882  001016  EC93  F007         	call	_delay_10ms	;wreg free
  2883                           
  2884                           ;fm.h: 708: PORTCbits.RC7 = 0;
  2885  00101A  9E82               	bcf	3970,7,c	;volatile
  2886  00101C  0012               	return	
  2887  00101E                     __end_of_SeekUP:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           postinc0	equ	0xFEE
  2896                           wreg	equ	0xFE8
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _SeekDOWN *****************
  2904 ;; Defined at:
  2905 ;;		line 713 in file "fm.h"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      unsigned char 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2919 ;;      Params:         0       0       0       0
  2920 ;;      Locals:         0       0       0       0
  2921 ;;      Temps:          0       0       0       0
  2922 ;;      Totals:         0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    1
  2926 ;; This function calls:
  2927 ;;		_delay_10ms
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text16
  2934  00101E                     __ptext16:
  2935                           	opt stack 0
  2936  00101E                     _SeekDOWN:
  2937                           	opt stack 29
  2938                           
  2939                           ;fm.h: 715: PORTCbits.RC7 = 1;
  2940                           
  2941                           ;incstack = 0
  2942  00101E  8E82               	bsf	3970,7,c	;volatile
  2943                           
  2944                           ;fm.h: 716: delay_10ms(10);
  2945  001020  0E00               	movlw	0
  2946  001022  6E02               	movwf	delay_10ms@n+1,c
  2947  001024  0E0A               	movlw	10
  2948  001026  6E01               	movwf	delay_10ms@n,c
  2949  001028  EC93  F007         	call	_delay_10ms	;wreg free
  2950                           
  2951                           ;fm.h: 717: PORTCbits.RC7 = 0;
  2952  00102C  9E82               	bcf	3970,7,c	;volatile
  2953  00102E  0012               	return	
  2954  001030                     __end_of_SeekDOWN:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           postinc0	equ	0xFEE
  2963                           wreg	equ	0xFE8
  2964                           postinc2	equ	0xFDE
  2965                           postdec2	equ	0xFDD
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _delay_10ms *****************
  2971 ;; Defined at:
  2972 ;;		line 859 in file "fm.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  n               2    0[COMRAM] unsigned int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2986 ;;      Params:         2       0       0       0
  2987 ;;      Locals:         0       0       0       0
  2988 ;;      Temps:          1       0       0       0
  2989 ;;      Totals:         3       0       0       0
  2990 ;;Total ram usage:        3 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_nextChannel
  2996 ;;		_previousChannel
  2997 ;;		_VolumeUp
  2998 ;;		_VolumeDown
  2999 ;;		_SeekUP
  3000 ;;		_SeekDOWN
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text17
  3005  000F26                     __ptext17:
  3006                           	opt stack 0
  3007  000F26                     _delay_10ms:
  3008                           	opt stack 29
  3009                           
  3010                           ;fm.h: 860: while (n-- != 0) {
  3011                           
  3012                           ;incstack = 0
  3013  000F26  D007               	goto	l1924
  3014  000F28                     l1922:
  3015                           
  3016                           ;fm.h: 861: _delay((unsigned long)((12)*(8000000/4000.0)));
  3017  000F28  0E20               	movlw	32
  3018  000F2A  6E03               	movwf	??_delay_10ms& (0+255),c
  3019  000F2C  0E2A               	movlw	42
  3020  000F2E                     u1847:
  3021  000F2E  2EE8               	decfsz	wreg,f,c
  3022  000F30  D7FE               	goto	u1847
  3023  000F32  2E03               	decfsz	??_delay_10ms& (0+255),f,c
  3024  000F34  D7FC               	goto	u1847
  3025  000F36                     l1924:
  3026  000F36  0601               	decf	delay_10ms@n,f,c
  3027  000F38  A0D8               	btfss	status,0,c
  3028  000F3A  0602               	decf	delay_10ms@n+1,f,c
  3029  000F3C  2801               	incf	delay_10ms@n,w,c
  3030  000F3E  E1F4               	bnz	l1922
  3031  000F40  2802               	incf	delay_10ms@n+1,w,c
  3032  000F42  B4D8               	btfsc	status,2,c
  3033  000F44  0012               	return	
  3034  000F46  D7F0               	goto	l1922
  3035  000F48                     __end_of_delay_10ms:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           prodh	equ	0xFF4
  3042                           prodl	equ	0xFF3
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           postinc2	equ	0xFDE
  3046                           postdec2	equ	0xFDD
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _MuteHard *****************
  3052 ;; Defined at:
  3053 ;;		line 698 in file "fm.h"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  down            1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  down            1    0[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      unsigned char 
  3060 ;; Registers used:
  3061 ;;		wreg
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3067 ;;      Params:         0       0       0       0
  3068 ;;      Locals:         0       0       0       0
  3069 ;;      Temps:          0       0       0       0
  3070 ;;      Totals:         0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text18
  3081  001054                     __ptext18:
  3082                           	opt stack 0
  3083  001054                     _MuteHard:
  3084                           	opt stack 30
  3085                           
  3086                           ;fm.h: 701: return 0;
  3087                           ;	Return value of _MuteHard is never used
  3088                           
  3089                           ;incstack = 0
  3090  001054  0012               	return		;funcret
  3091  001056                     __end_of_MuteHard:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Init *****************
  3108 ;; Defined at:
  3109 ;;		line 131 in file "fm.h"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3123 ;;      Params:         0       0       0       0
  3124 ;;      Locals:         0       0       0       0
  3125 ;;      Temps:          0       0       0       0
  3126 ;;      Totals:         0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    1
  3130 ;; This function calls:
  3131 ;;		_OpenI2C
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text19
  3138  000E48                     __ptext19:
  3139                           	opt stack 0
  3140  000E48                     _Init:
  3141                           	opt stack 29
  3142                           
  3143                           ;fm.h: 133: LCDPS = 0b00110110;
  3144                           
  3145                           ;incstack = 0
  3146  000E48  0E36               	movlw	54
  3147  000E4A  010F               	movlb	15	; () banked
  3148  000E4C  6F58               	movwf	88,b	;volatile
  3149                           
  3150                           ;fm.h: 134: ADCON1 = 0b00111111;
  3151  000E4E  0E3F               	movlw	63
  3152  000E50  6EC1               	movwf	4033,c	;volatile
  3153                           
  3154                           ;fm.h: 135: TRISA = 0b00000011;
  3155  000E52  0E03               	movlw	3
  3156  000E54  6E92               	movwf	3986,c	;volatile
  3157                           
  3158                           ;fm.h: 136: TRISB = 0b00100001;
  3159  000E56  0E21               	movlw	33
  3160  000E58  6E93               	movwf	3987,c	;volatile
  3161                           
  3162                           ;fm.h: 137: TRISC = 0b00011000;
  3163  000E5A  0E18               	movlw	24
  3164  000E5C  6E94               	movwf	3988,c	;volatile
  3165                           
  3166                           ; BSR set to: 15
  3167                           ;fm.h: 138: TRISG = 0b11111111;
  3168  000E5E  6898               	setf	3992,c	;volatile
  3169                           
  3170                           ;fm.h: 139: PORTA = 0;
  3171  000E60  0E00               	movlw	0
  3172  000E62  6E80               	movwf	3968,c	;volatile
  3173                           
  3174                           ;fm.h: 140: PORTB = 0;
  3175  000E64  0E00               	movlw	0
  3176  000E66  6E81               	movwf	3969,c	;volatile
  3177                           
  3178                           ;fm.h: 141: PORTC = 0;
  3179  000E68  0E00               	movlw	0
  3180  000E6A  6E82               	movwf	3970,c	;volatile
  3181                           
  3182                           ; BSR set to: 15
  3183                           ;fm.h: 142: INTCONbits.TMR0IF = 0;
  3184  000E6C  94F2               	bcf	intcon,2,c	;volatile
  3185                           
  3186                           ;fm.h: 144: T0CON = 0b00001000;
  3187  000E6E  0E08               	movlw	8
  3188  000E70  6ED5               	movwf	4053,c	;volatile
  3189                           
  3190                           ;fm.h: 145: TMR0H = 0;
  3191  000E72  0E00               	movlw	0
  3192  000E74  6ED7               	movwf	4055,c	;volatile
  3193                           
  3194                           ;fm.h: 146: TMR0L = 0;
  3195  000E76  0E00               	movlw	0
  3196  000E78  6ED6               	movwf	4054,c	;volatile
  3197                           
  3198                           ; BSR set to: 15
  3199                           ;fm.h: 147: T0CONbits.TMR0ON = 1;
  3200  000E7A  8ED5               	bsf	4053,7,c	;volatile
  3201                           
  3202                           ; BSR set to: 15
  3203                           ;fm.h: 148: OpenI2C(0b00001000, 0b10000000);
  3204  000E7C  0E80               	movlw	128
  3205  000E7E  6E01               	movwf	OpenI2C@slew,c
  3206  000E80  0E08               	movlw	8
  3207  000E82  ECC2  F007         	call	_OpenI2C
  3208                           
  3209                           ;fm.h: 149: SSPADD = 0x3F;
  3210  000E86  0E3F               	movlw	63
  3211  000E88  6EC8               	movwf	4040,c	;volatile
  3212  000E8A  0012               	return	
  3213  000E8C                     __end_of_Init:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           prodh	equ	0xFF4
  3220                           prodl	equ	0xFF3
  3221                           intcon	equ	0xFF2
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           postinc2	equ	0xFDE
  3225                           postdec2	equ	0xFDD
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230 ;; *************** function _OpenI2C *****************
  3231 ;; Defined at:
  3232 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_open.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  sync_mode       1    wreg     unsigned char 
  3235 ;;  slew            1    0[COMRAM] unsigned char 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3247 ;;      Params:         1       0       0       0
  3248 ;;      Locals:         1       0       0       0
  3249 ;;      Temps:          0       0       0       0
  3250 ;;      Totals:         2       0       0       0
  3251 ;;Total ram usage:        2 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_Init
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text20
  3261  000F84                     __ptext20:
  3262                           	opt stack 0
  3263  000F84                     _OpenI2C:
  3264                           	opt stack 29
  3265                           
  3266                           ;incstack = 0
  3267                           ;OpenI2C@sync_mode stored from wreg
  3268  000F84  6E02               	movwf	OpenI2C@sync_mode,c
  3269  000F86  0E3F               	movlw	63
  3270  000F88  16C7               	andwf	4039,f,c	;volatile
  3271  000F8A  0E00               	movlw	0
  3272  000F8C  6EC6               	movwf	4038,c	;volatile
  3273  000F8E  0E00               	movlw	0
  3274  000F90  6EC5               	movwf	4037,c	;volatile
  3275  000F92  5002               	movf	OpenI2C@sync_mode,w,c
  3276  000F94  12C6               	iorwf	4038,f,c	;volatile
  3277  000F96  5001               	movf	OpenI2C@slew,w,c
  3278  000F98  12C7               	iorwf	4039,f,c	;volatile
  3279  000F9A  8694               	bsf	3988,3,c	;volatile
  3280  000F9C  8894               	bsf	3988,4,c	;volatile
  3281  000F9E  8AC6               	bsf	4038,5,c	;volatile
  3282  000FA0  0012               	return		;funcret
  3283  000FA2                     __end_of_OpenI2C:
  3284                           	opt stack 0
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function _FMvers *****************
  3301 ;; Defined at:
  3302 ;;		line 621 in file "fm.h"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  3305 ;;		 -> main@ui(2), 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      unsigned char 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3317 ;;      Params:         2       0       0       0
  3318 ;;      Locals:         0       0       0       0
  3319 ;;      Temps:          0       0       0       0
  3320 ;;      Totals:         2       0       0       0
  3321 ;;Total ram usage:        2 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    3
  3324 ;; This function calls:
  3325 ;;		_FMread
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text21
  3332  001042                     __ptext21:
  3333                           	opt stack 0
  3334  001042                     _FMvers:
  3335                           	opt stack 27
  3336                           
  3337                           ;fm.h: 622: if (FMread(0x1C, vsn) != 0) return 1;
  3338                           
  3339                           ;incstack = 0
  3340  001042  C00C  F003         	movff	FMvers@vsn,FMread@data
  3341  001046  C00D  F004         	movff	FMvers@vsn+1,FMread@data+1
  3342  00104A  0E1C               	movlw	28
  3343  00104C  ECF0  F004         	call	_FMread
  3344                           
  3345                           ;	Return value of _FMvers is never used
  3346  001050  0012               	return	
  3347  001052                     __end_of_FMvers:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           postinc2	equ	0xFDE
  3359                           postdec2	equ	0xFDD
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8
  3363                           
  3364 ;; *************** function _FMinit *****************
  3365 ;; Defined at:
  3366 ;;		line 556 in file "fm.h"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  dat             2   17[COMRAM] unsigned int 
  3371 ;;  ad              1   19[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      unsigned char 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3381 ;;      Params:         0       0       0       0
  3382 ;;      Locals:         3       0       0       0
  3383 ;;      Temps:          0       0       0       0
  3384 ;;      Totals:         3       0       0       0
  3385 ;;Total ram usage:        3 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    4
  3388 ;; This function calls:
  3389 ;;		_FMready
  3390 ;;		_FMwrite
  3391 ;;		_dly
  3392 ;;		_showFreq
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text22
  3399  000AAA                     __ptext22:
  3400                           	opt stack 0
  3401  000AAA                     _FMinit:
  3402                           	opt stack 26
  3403                           
  3404                           ;fm.h: 558: unsigned char ad;
  3405                           ;fm.h: 559: unsigned int dat;
  3406                           ;fm.h: 562: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  3407                           
  3408                           ;incstack = 0
  3409  000AAA  0E00               	movlw	0
  3410  000AAC  6E14               	movwf	FMinit@ad,c
  3411  000AAE                     l1942:
  3412  000AAE  0E11               	movlw	17
  3413  000AB0  6414               	cpfsgt	FMinit@ad,c
  3414  000AB2  D001               	goto	l1946
  3415  000AB4  D018               	goto	l180
  3416  000AB6                     l1946:
  3417  000AB6  5014               	movf	FMinit@ad,w,c
  3418  000AB8  0D02               	mullw	2
  3419  000ABA  0E01               	movlw	low _regDflt
  3420  000ABC  24F3               	addwf	prodl,w,c
  3421  000ABE  6EF6               	movwf	tblptrl,c
  3422  000AC0  0E03               	movlw	high _regDflt
  3423  000AC2  20F4               	addwfc	prodh,w,c
  3424  000AC4  6EF7               	movwf	tblptrh,c
  3425  000AC6                     	if	0	;There are less than 3 active tblptr bytes
  3426  000AC6                     	endif
  3427  000AC6  5014               	movf	FMinit@ad,w,c
  3428  000AC8  0D02               	mullw	2
  3429  000ACA  0E31               	movlw	low _regImg
  3430  000ACC  24F3               	addwf	prodl,w,c
  3431  000ACE  6ED9               	movwf	fsr2l,c
  3432  000AD0  0E00               	movlw	high _regImg
  3433  000AD2  20F4               	addwfc	prodh,w,c
  3434  000AD4  6EDA               	movwf	fsr2h,c
  3435  000AD6  0009               	tblrd		*+
  3436  000AD8  CFF5 FFDE          	movff	tablat,postinc2
  3437  000ADC  0008               	tblrd		*
  3438  000ADE  CFF5 FFDD          	movff	tablat,postdec2
  3439  000AE2  2A14               	incf	FMinit@ad,f,c
  3440  000AE4  D7E4               	goto	l1942
  3441  000AE6                     l180:
  3442                           
  3443                           ;fm.h: 564: dat = regImg[0];
  3444  000AE6  C031  F012         	movff	_regImg,FMinit@dat
  3445  000AEA  C032  F013         	movff	_regImg+1,FMinit@dat+1
  3446                           
  3447                           ;fm.h: 565: regImg[0] &= ~1;
  3448  000AEE  9031               	bcf	_regImg,0,c
  3449                           
  3450                           ;fm.h: 566: if (FMwrite(0) != 0) return 1;
  3451  000AF0  0E00               	movlw	0
  3452  000AF2  EC64  F006         	call	_FMwrite
  3453  000AF6  0900               	iorlw	0
  3454  000AF8  B4D8               	btfsc	status,2,c
  3455  000AFA  D002               	goto	l1960
  3456  000AFC  0E01               	movlw	1
  3457  000AFE  0012               	return	
  3458  000B00                     l1960:
  3459                           
  3460                           ;fm.h: 567: for (ad = 1; ad < 18; ad++) {
  3461  000B00  0E01               	movlw	1
  3462  000B02  6E14               	movwf	FMinit@ad,c
  3463  000B04                     l1962:
  3464  000B04  0E11               	movlw	17
  3465  000B06  6414               	cpfsgt	FMinit@ad,c
  3466  000B08  D001               	goto	l1966
  3467  000B0A  D00A               	goto	l1976
  3468  000B0C                     l1966:
  3469                           
  3470                           ;fm.h: 568: if (FMwrite(ad) != 0)return 1;
  3471  000B0C  5014               	movf	FMinit@ad,w,c
  3472  000B0E  EC64  F006         	call	_FMwrite
  3473  000B12  0900               	iorlw	0
  3474  000B14  B4D8               	btfsc	status,2,c
  3475  000B16  D002               	goto	l1972
  3476  000B18  0E01               	movlw	1
  3477  000B1A  0012               	return	
  3478  000B1C                     l1972:
  3479  000B1C  2A14               	incf	FMinit@ad,f,c
  3480  000B1E  D7F2               	goto	l1962
  3481  000B20                     l1976:
  3482                           
  3483                           ;fm.h: 569: }
  3484                           ;fm.h: 571: regImg[0] = dat | 1;
  3485  000B20  0E01               	movlw	1
  3486  000B22  1012               	iorwf	FMinit@dat,w,c
  3487  000B24  6E31               	movwf	_regImg,c
  3488  000B26  5013               	movf	FMinit@dat+1,w,c
  3489  000B28  6E32               	movwf	_regImg+1,c
  3490                           
  3491                           ;fm.h: 572: if (FMwrite(0) != 0) return 1;
  3492  000B2A  0E00               	movlw	0
  3493  000B2C  EC64  F006         	call	_FMwrite
  3494  000B30  0900               	iorlw	0
  3495  000B32  B4D8               	btfsc	status,2,c
  3496  000B34  D002               	goto	l1984
  3497  000B36  0E01               	movlw	1
  3498  000B38  0012               	return	
  3499  000B3A                     l1984:
  3500                           
  3501                           ;fm.h: 573: dly(20);
  3502  000B3A  0E00               	movlw	0
  3503  000B3C  6E02               	movwf	dly@d+1,c
  3504  000B3E  0E14               	movlw	20
  3505  000B40  6E01               	movwf	dly@d,c
  3506  000B42  EC67  F007         	call	_dly	;wreg free
  3507                           
  3508                           ;fm.h: 574: while (FMready(&dat), !dat) dly(2);
  3509  000B46  D006               	goto	l1988
  3510  000B48                     l1986:
  3511  000B48  0E00               	movlw	0
  3512  000B4A  6E02               	movwf	dly@d+1,c
  3513  000B4C  0E02               	movlw	2
  3514  000B4E  6E01               	movwf	dly@d,c
  3515  000B50  EC67  F007         	call	_dly	;wreg free
  3516  000B54                     l1988:
  3517  000B54  0E12               	movlw	low FMinit@dat
  3518  000B56  6E0C               	movwf	FMready@rdy,c
  3519  000B58  0E00               	movlw	high FMinit@dat
  3520  000B5A  6E0D               	movwf	FMready@rdy+1,c
  3521  000B5C  EC01  F007         	call	_FMready	;wreg free
  3522  000B60  5012               	movf	FMinit@dat,w,c
  3523  000B62  1013               	iorwf	FMinit@dat+1,w,c
  3524  000B64  B4D8               	btfsc	status,2,c
  3525  000B66  D7F0               	goto	l1986
  3526                           
  3527                           ;fm.h: 575: showFreq();
  3528  000B68  EC2B  F008         	call	_showFreq	;wreg free
  3529                           
  3530                           ;fm.h: 576: return 0;
  3531  000B6C  0E00               	movlw	0
  3532  000B6E  0012               	return	
  3533  000B70                     __end_of_FMinit:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _showFreq *****************
  3551 ;; Defined at:
  3552 ;;		line 749 in file "fm.h"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		None
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3566 ;;      Params:         0       0       0       0
  3567 ;;      Locals:         0       0       0       0
  3568 ;;      Temps:          0       0       0       0
  3569 ;;      Totals:         0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_FMinit
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text23
  3580  001056                     __ptext23:
  3581                           	opt stack 0
  3582  001056                     _showFreq:
  3583                           	opt stack 29
  3584                           
  3585                           ;fm.h: 751: ;
  3586                           ;fm.h: 752: return 0;
  3587                           ;	Return value of _showFreq is never used
  3588                           
  3589                           ;incstack = 0
  3590  001056  0012               	return		;funcret
  3591  001058                     __end_of_showFreq:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           prodh	equ	0xFF4
  3598                           prodl	equ	0xFF3
  3599                           intcon	equ	0xFF2
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _dly *****************
  3609 ;; Defined at:
  3610 ;;		line 847 in file "fm.h"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  d               2    0[COMRAM] int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  i               2    2[COMRAM] int 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3624 ;;      Params:         2       0       0       0
  3625 ;;      Locals:         2       0       0       0
  3626 ;;      Temps:          0       0       0       0
  3627 ;;      Totals:         4       0       0       0
  3628 ;;Total ram usage:        4 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_FMinit
  3634 ;;		_FMfrequenc
  3635 ;;		_main
  3636 ;;		_setVolume
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text24
  3641  000ECE                     __ptext24:
  3642                           	opt stack 0
  3643  000ECE                     _dly:
  3644                           	opt stack 28
  3645                           
  3646                           ;fm.h: 849: int i = 0;
  3647                           
  3648                           ;incstack = 0
  3649  000ECE  0E00               	movlw	0
  3650  000ED0  6E04               	movwf	dly@i+1,c
  3651  000ED2  0E00               	movlw	0
  3652  000ED4  6E03               	movwf	dly@i,c
  3653                           
  3654                           ;fm.h: 851: for (; d; --d)
  3655  000ED6  D00F               	goto	l1826
  3656  000ED8                     l1818:
  3657                           
  3658                           ;fm.h: 852: for (i = 100; i; --i);
  3659  000ED8  0E00               	movlw	0
  3660  000EDA  6E04               	movwf	dly@i+1,c
  3661  000EDC  0E64               	movlw	100
  3662  000EDE  6E03               	movwf	dly@i,c
  3663  000EE0  D003               	goto	l1822
  3664  000EE2                     l1820:
  3665  000EE2  0603               	decf	dly@i,f,c
  3666  000EE4  A0D8               	btfss	status,0,c
  3667  000EE6  0604               	decf	dly@i+1,f,c
  3668  000EE8                     l1822:
  3669  000EE8  5003               	movf	dly@i,w,c
  3670  000EEA  1004               	iorwf	dly@i+1,w,c
  3671  000EEC  A4D8               	btfss	status,2,c
  3672  000EEE  D7F9               	goto	l1820
  3673  000EF0  0601               	decf	dly@d,f,c
  3674  000EF2  A0D8               	btfss	status,0,c
  3675  000EF4  0602               	decf	dly@d+1,f,c
  3676  000EF6                     l1826:
  3677  000EF6  5001               	movf	dly@d,w,c
  3678  000EF8  1002               	iorwf	dly@d+1,w,c
  3679  000EFA  B4D8               	btfsc	status,2,c
  3680  000EFC  0012               	return	
  3681  000EFE  D7EC               	goto	l1818
  3682  000F00                     __end_of_dly:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _FMwrite *****************
  3700 ;; Defined at:
  3701 ;;		line 170 in file "fm.h"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  adr             1    wreg     unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  adr             1    6[COMRAM] unsigned char 
  3706 ;;  regstr          2    0        unsigned int 
  3707 ;;  secndByt        1    5[COMRAM] unsigned char 
  3708 ;;  firstByt        1    4[COMRAM] unsigned char 
  3709 ;;  rpy             1    0        unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3719 ;;      Params:         0       0       0       0
  3720 ;;      Locals:         3       0       0       0
  3721 ;;      Temps:          2       0       0       0
  3722 ;;      Totals:         5       0       0       0
  3723 ;;Total ram usage:        5 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    2
  3726 ;; This function calls:
  3727 ;;		_IdleI2C
  3728 ;;		_WriteI2C
  3729 ;; This function is called by:
  3730 ;;		_setBitInRegister
  3731 ;;		_seek
  3732 ;;		_readLOInjection
  3733 ;;		_tuneWithAutoHiLo
  3734 ;;		_FMinit
  3735 ;;		_FMfrequenc
  3736 ;;		_setVolume
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text25
  3741  000CC8                     __ptext25:
  3742                           	opt stack 0
  3743  000CC8                     _FMwrite:
  3744                           	opt stack 26
  3745                           
  3746                           ;incstack = 0
  3747                           ;FMwrite@adr stored from wreg
  3748  000CC8  6E07               	movwf	FMwrite@adr,c
  3749                           
  3750                           ;fm.h: 172: unsigned int regstr;
  3751                           ;fm.h: 173: unsigned char firstByt;
  3752                           ;fm.h: 174: unsigned char secndByt;
  3753                           ;fm.h: 175: unsigned char rpy;
  3754                           ;fm.h: 177: firstByt = regImg[adr] >> 8;
  3755  000CCA  5007               	movf	FMwrite@adr,w,c
  3756  000CCC  0D02               	mullw	2
  3757  000CCE  0E31               	movlw	low _regImg
  3758  000CD0  24F3               	addwf	prodl,w,c
  3759  000CD2  6ED9               	movwf	fsr2l,c
  3760  000CD4  0E00               	movlw	high _regImg
  3761  000CD6  20F4               	addwfc	prodh,w,c
  3762  000CD8  6EDA               	movwf	fsr2h,c
  3763  000CDA  CFDE F003          	movff	postinc2,??_FMwrite
  3764  000CDE  CFDD F004          	movff	postdec2,??_FMwrite+1
  3765  000CE2  C004  F003         	movff	??_FMwrite+1,??_FMwrite
  3766  000CE6  6A04               	clrf	??_FMwrite+1,c
  3767  000CE8  5003               	movf	??_FMwrite,w,c
  3768  000CEA  6E05               	movwf	FMwrite@firstByt,c
  3769                           
  3770                           ;fm.h: 178: secndByt = regImg[adr];
  3771  000CEC  5007               	movf	FMwrite@adr,w,c
  3772  000CEE  0D02               	mullw	2
  3773  000CF0  0E31               	movlw	low _regImg
  3774  000CF2  24F3               	addwf	prodl,w,c
  3775  000CF4  6ED9               	movwf	fsr2l,c
  3776  000CF6  0E00               	movlw	high _regImg
  3777  000CF8  20F4               	addwfc	prodh,w,c
  3778  000CFA  6EDA               	movwf	fsr2h,c
  3779  000CFC  50DF               	movf	indf2,w,c
  3780  000CFE  6E06               	movwf	FMwrite@secndByt,c
  3781                           
  3782                           ;fm.h: 180: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3783  000D00  80C5               	bsf	4037,0,c	;volatile
  3784  000D02                     l88:
  3785  000D02  B0C5               	btfsc	4037,0,c	;volatile
  3786  000D04  D7FE               	goto	l88
  3787                           
  3788                           ;fm.h: 181: IdleI2C();
  3789  000D06  EC18  F008         	call	_IdleI2C	;wreg free
  3790                           
  3791                           ;fm.h: 184: if (WriteI2C(0x20)) return 1;
  3792  000D0A  0E20               	movlw	32
  3793  000D0C  ECA5  F006         	call	_WriteI2C
  3794  000D10  0900               	iorlw	0
  3795  000D12  B4D8               	btfsc	status,2,c
  3796  000D14  D002               	goto	l1052
  3797  000D16  0E01               	movlw	1
  3798  000D18  0012               	return	
  3799  000D1A                     l1052:
  3800                           
  3801                           ;fm.h: 185: IdleI2C();
  3802  000D1A  EC18  F008         	call	_IdleI2C	;wreg free
  3803                           
  3804                           ;fm.h: 186: WriteI2C(adr);
  3805  000D1E  5007               	movf	FMwrite@adr,w,c
  3806  000D20  ECA5  F006         	call	_WriteI2C
  3807                           
  3808                           ;fm.h: 187: IdleI2C();
  3809  000D24  EC18  F008         	call	_IdleI2C	;wreg free
  3810                           
  3811                           ;fm.h: 188: WriteI2C(firstByt);
  3812  000D28  5005               	movf	FMwrite@firstByt,w,c
  3813  000D2A  ECA5  F006         	call	_WriteI2C
  3814                           
  3815                           ;fm.h: 189: IdleI2C();
  3816  000D2E  EC18  F008         	call	_IdleI2C	;wreg free
  3817                           
  3818                           ;fm.h: 190: WriteI2C(secndByt);
  3819  000D32  5006               	movf	FMwrite@secndByt,w,c
  3820  000D34  ECA5  F006         	call	_WriteI2C
  3821                           
  3822                           ;fm.h: 191: IdleI2C();
  3823  000D38  EC18  F008         	call	_IdleI2C	;wreg free
  3824                           
  3825                           ;fm.h: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3826  000D3C  84C5               	bsf	4037,2,c	;volatile
  3827  000D3E                     l93:
  3828  000D3E  B4C5               	btfsc	4037,2,c	;volatile
  3829  000D40  D7FE               	goto	l93
  3830                           
  3831                           ;fm.h: 193: IdleI2C();
  3832  000D42  EC18  F008         	call	_IdleI2C	;wreg free
  3833                           
  3834                           ;fm.h: 194: return 0;
  3835  000D46  0E00               	movlw	0
  3836  000D48  0012               	return	
  3837  000D4A                     __end_of_FMwrite:
  3838                           	opt stack 0
  3839                           tblptru	equ	0xFF8
  3840                           tblptrh	equ	0xFF7
  3841                           tblptrl	equ	0xFF6
  3842                           tablat	equ	0xFF5
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf2	equ	0xFDF
  3849                           postinc2	equ	0xFDE
  3850                           postdec2	equ	0xFDD
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _FMready *****************
  3856 ;; Defined at:
  3857 ;;		line 536 in file "fm.h"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  3860 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), setVolume@dat(2), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  sts             2   15[COMRAM] unsigned int 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3872 ;;      Params:         2       0       0       0
  3873 ;;      Locals:         2       0       0       0
  3874 ;;      Temps:          2       0       0       0
  3875 ;;      Totals:         6       0       0       0
  3876 ;;Total ram usage:        6 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    3
  3879 ;; This function calls:
  3880 ;;		_FMread
  3881 ;; This function is called by:
  3882 ;;		_FMinit
  3883 ;;		_FMfrequenc
  3884 ;;		_setVolume
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text26
  3889  000E02                     __ptext26:
  3890                           	opt stack 0
  3891  000E02                     _FMready:
  3892                           	opt stack 25
  3893                           
  3894                           ;fm.h: 538: unsigned int sts;
  3895                           ;fm.h: 540: if (FMread(0x13, &sts) != 0) return 1;
  3896                           
  3897                           ;incstack = 0
  3898  000E02  0E10               	movlw	low FMready@sts
  3899  000E04  6E03               	movwf	FMread@data,c
  3900  000E06  0E00               	movlw	high FMready@sts
  3901  000E08  6E04               	movwf	FMread@data+1,c
  3902  000E0A  0E13               	movlw	19
  3903  000E0C  ECF0  F004         	call	_FMread
  3904  000E10  0900               	iorlw	0
  3905  000E12  B4D8               	btfsc	status,2,c
  3906  000E14  D002               	goto	l1834
  3907  000E16  0E01               	movlw	1
  3908  000E18  0012               	return	
  3909  000E1A                     l1834:
  3910                           
  3911                           ;fm.h: 541: sts &= 0x0020;
  3912  000E1A  0E20               	movlw	32
  3913  000E1C  1610               	andwf	FMready@sts,f,c
  3914  000E1E  0E00               	movlw	0
  3915  000E20  1611               	andwf	FMready@sts+1,f,c
  3916                           
  3917                           ;fm.h: 542: *rdy = sts ? 1 : 0;
  3918  000E22  5010               	movf	FMready@sts,w,c
  3919  000E24  1011               	iorwf	FMready@sts+1,w,c
  3920  000E26  B4D8               	btfsc	status,2,c
  3921  000E28  D002               	goto	u1200
  3922  000E2A  0E01               	movlw	1
  3923  000E2C  D001               	goto	u1210
  3924  000E2E                     u1200:
  3925  000E2E  0E00               	movlw	0
  3926  000E30                     u1210:
  3927  000E30  6E0E               	movwf	??_FMready& (0+255),c
  3928  000E32  6A0F               	clrf	(??_FMready+1)& (0+255),c
  3929  000E34  C00C  FFD9         	movff	FMready@rdy,fsr2l
  3930  000E38  C00D  FFDA         	movff	FMready@rdy+1,fsr2h
  3931  000E3C  C00E  FFDE         	movff	??_FMready,postinc2
  3932  000E40  C00F  FFDD         	movff	??_FMready+1,postdec2
  3933                           
  3934                           ;fm.h: 543: return 0;
  3935  000E44  0E00               	movlw	0
  3936  000E46  0012               	return	
  3937  000E48                     __end_of_FMready:
  3938                           	opt stack 0
  3939                           tblptru	equ	0xFF8
  3940                           tblptrh	equ	0xFF7
  3941                           tblptrl	equ	0xFF6
  3942                           tablat	equ	0xFF5
  3943                           prodh	equ	0xFF4
  3944                           prodl	equ	0xFF3
  3945                           intcon	equ	0xFF2
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _FMread *****************
  3956 ;; Defined at:
  3957 ;;		line 212 in file "fm.h"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  regAddr         1    wreg     unsigned char 
  3960 ;;  data            2    2[COMRAM] PTR unsigned int 
  3961 ;;		 -> main@ui(2), FMready@sts(2), frequency@data(2), tuneWithAutoHiLo@status(2), 
  3962 ;;		 -> readLOInjection@status(2), seek@status(2), 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  regAddr         1    8[COMRAM] unsigned char 
  3965 ;;  secndByt        1   10[COMRAM] unsigned char 
  3966 ;;  firstByt        1    9[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      unsigned char 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3976 ;;      Params:         2       0       0       0
  3977 ;;      Locals:         3       0       0       0
  3978 ;;      Temps:          4       0       0       0
  3979 ;;      Totals:         9       0       0       0
  3980 ;;Total ram usage:        9 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		_IdleI2C
  3985 ;;		_ReadI2C
  3986 ;;		_WriteI2C
  3987 ;; This function is called by:
  3988 ;;		_seek
  3989 ;;		_readLOInjection
  3990 ;;		_tuneWithAutoHiLo
  3991 ;;		_frequency
  3992 ;;		_FMready
  3993 ;;		_FMvers
  3994 ;;		_FMid
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text27
  3999  0009E0                     __ptext27:
  4000                           	opt stack 0
  4001  0009E0                     _FMread:
  4002                           	opt stack 25
  4003                           
  4004                           ;incstack = 0
  4005                           ;FMread@regAddr stored from wreg
  4006  0009E0  6E09               	movwf	FMread@regAddr,c
  4007                           
  4008                           ;fm.h: 214: unsigned char firstByt;
  4009                           ;fm.h: 215: unsigned char secndByt;
  4010                           ;fm.h: 217: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4011  0009E2  80C5               	bsf	4037,0,c	;volatile
  4012  0009E4                     l98:
  4013  0009E4  B0C5               	btfsc	4037,0,c	;volatile
  4014  0009E6  D7FE               	goto	l98
  4015                           
  4016                           ;fm.h: 218: IdleI2C();
  4017  0009E8  EC18  F008         	call	_IdleI2C	;wreg free
  4018                           
  4019                           ;fm.h: 221: if (WriteI2C(0x20)) return 1;
  4020  0009EC  0E20               	movlw	32
  4021  0009EE  ECA5  F006         	call	_WriteI2C
  4022  0009F2  0900               	iorlw	0
  4023  0009F4  B4D8               	btfsc	status,2,c
  4024  0009F6  D002               	goto	l1694
  4025  0009F8  0E01               	movlw	1
  4026  0009FA  0012               	return	
  4027  0009FC                     l1694:
  4028                           
  4029                           ;fm.h: 222: IdleI2C();
  4030  0009FC  EC18  F008         	call	_IdleI2C	;wreg free
  4031                           
  4032                           ;fm.h: 223: WriteI2C(regAddr);
  4033  000A00  5009               	movf	FMread@regAddr,w,c
  4034  000A02  ECA5  F006         	call	_WriteI2C
  4035                           
  4036                           ;fm.h: 224: IdleI2C();
  4037  000A06  EC18  F008         	call	_IdleI2C	;wreg free
  4038                           
  4039                           ;fm.h: 225: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  4040  000A0A  82C5               	bsf	4037,1,c	;volatile
  4041  000A0C                     l103:
  4042  000A0C  B2C5               	btfsc	4037,1,c	;volatile
  4043  000A0E  D7FE               	goto	l103
  4044                           
  4045                           ;fm.h: 226: IdleI2C();
  4046  000A10  EC18  F008         	call	_IdleI2C	;wreg free
  4047                           
  4048                           ;fm.h: 227: WriteI2C(0x20 + 0x01);
  4049  000A14  0E21               	movlw	33
  4050  000A16  ECA5  F006         	call	_WriteI2C
  4051                           
  4052                           ;fm.h: 228: IdleI2C();
  4053  000A1A  EC18  F008         	call	_IdleI2C	;wreg free
  4054                           
  4055                           ;fm.h: 229: firstByt = ReadI2C();
  4056  000A1E  ECED  F007         	call	_ReadI2C	;wreg free
  4057  000A22  6E0A               	movwf	FMread@firstByt,c
  4058                           
  4059                           ;fm.h: 230: IdleI2C();
  4060  000A24  EC18  F008         	call	_IdleI2C	;wreg free
  4061                           
  4062                           ;fm.h: 231: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4063  000A28  9AC5               	bcf	4037,5,c	;volatile
  4064  000A2A  88C5               	bsf	4037,4,c	;volatile
  4065  000A2C                     l106:
  4066  000A2C  B8C5               	btfsc	4037,4,c	;volatile
  4067  000A2E  D7FE               	goto	l106
  4068                           
  4069                           ;fm.h: 232: IdleI2C();
  4070  000A30  EC18  F008         	call	_IdleI2C	;wreg free
  4071                           
  4072                           ;fm.h: 233: secndByt = ReadI2C();
  4073  000A34  ECED  F007         	call	_ReadI2C	;wreg free
  4074  000A38  6E0B               	movwf	FMread@secndByt,c
  4075                           
  4076                           ;fm.h: 234: IdleI2C();
  4077  000A3A  EC18  F008         	call	_IdleI2C	;wreg free
  4078                           
  4079                           ;fm.h: 235: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4080  000A3E  8AC5               	bsf	4037,5,c	;volatile
  4081  000A40  88C5               	bsf	4037,4,c	;volatile
  4082  000A42                     l109:
  4083  000A42  B8C5               	btfsc	4037,4,c	;volatile
  4084  000A44  D7FE               	goto	l109
  4085                           
  4086                           ;fm.h: 236: IdleI2C();
  4087  000A46  EC18  F008         	call	_IdleI2C	;wreg free
  4088                           
  4089                           ;fm.h: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4090  000A4A  84C5               	bsf	4037,2,c	;volatile
  4091  000A4C                     l112:
  4092  000A4C  B4C5               	btfsc	4037,2,c	;volatile
  4093  000A4E  D7FE               	goto	l112
  4094                           
  4095                           ;fm.h: 238: IdleI2C();
  4096  000A50  EC18  F008         	call	_IdleI2C	;wreg free
  4097                           
  4098                           ;fm.h: 239: *data = firstByt;
  4099  000A54  500A               	movf	FMread@firstByt,w,c
  4100  000A56  6E05               	movwf	??_FMread& (0+255),c
  4101  000A58  6A06               	clrf	(??_FMread+1)& (0+255),c
  4102  000A5A  C003  FFD9         	movff	FMread@data,fsr2l
  4103  000A5E  C004  FFDA         	movff	FMread@data+1,fsr2h
  4104  000A62  C005  FFDE         	movff	??_FMread,postinc2
  4105  000A66  C006  FFDD         	movff	??_FMread+1,postdec2
  4106                           
  4107                           ;fm.h: 240: *data <<= 8;
  4108  000A6A  C003  FFD9         	movff	FMread@data,fsr2l
  4109  000A6E  C004  FFDA         	movff	FMread@data+1,fsr2h
  4110  000A72  50DE               	movf	postinc2,w,c
  4111  000A74  6EDD               	movwf	postdec2,c
  4112  000A76  6ADF               	clrf	indf2,c
  4113                           
  4114                           ;fm.h: 241: *data = *data | secndByt;
  4115  000A78  C003  FFD9         	movff	FMread@data,fsr2l
  4116  000A7C  C004  FFDA         	movff	FMread@data+1,fsr2h
  4117  000A80  CFDE F005          	movff	postinc2,??_FMread
  4118  000A84  CFDD F006          	movff	postdec2,??_FMread+1
  4119  000A88  500B               	movf	FMread@secndByt,w,c
  4120  000A8A  6E07               	movwf	(??_FMread+2)& (0+255),c
  4121  000A8C  6A08               	clrf	(??_FMread+3)& (0+255),c
  4122  000A8E  5005               	movf	??_FMread,w,c
  4123  000A90  1207               	iorwf	??_FMread+2,f,c
  4124  000A92  5006               	movf	??_FMread+1,w,c
  4125  000A94  1208               	iorwf	??_FMread+3,f,c
  4126  000A96  C003  FFD9         	movff	FMread@data,fsr2l
  4127  000A9A  C004  FFDA         	movff	FMread@data+1,fsr2h
  4128  000A9E  C007  FFDE         	movff	??_FMread+2,postinc2
  4129  000AA2  C008  FFDD         	movff	??_FMread+3,postdec2
  4130                           
  4131                           ;fm.h: 243: return 0;
  4132  000AA6  0E00               	movlw	0
  4133  000AA8  0012               	return	
  4134  000AAA                     __end_of_FMread:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf2	equ	0xFDF
  4146                           postinc2	equ	0xFDE
  4147                           postdec2	equ	0xFDD
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _WriteI2C *****************
  4153 ;; Defined at:
  4154 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_writ.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  data_out        1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  data_out        1    1[COMRAM] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      char 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4168 ;;      Params:         0       0       0       0
  4169 ;;      Locals:         1       0       0       0
  4170 ;;      Temps:          0       0       0       0
  4171 ;;      Totals:         1       0       0       0
  4172 ;;Total ram usage:        1 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    1
  4175 ;; This function calls:
  4176 ;;		_IdleI2C
  4177 ;; This function is called by:
  4178 ;;		_FMwrite
  4179 ;;		_FMread
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text28
  4184  000D4A                     __ptext28:
  4185                           	opt stack 0
  4186  000D4A                     _WriteI2C:
  4187                           	opt stack 26
  4188                           
  4189                           ;incstack = 0
  4190                           ;WriteI2C@data_out stored from wreg
  4191  000D4A  6E02               	movwf	WriteI2C@data_out,c
  4192  000D4C  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  4193  000D50  AEC6               	btfss	4038,7,c	;volatile
  4194  000D52  D002               	goto	l1006
  4195  000D54  0EFF               	movlw	255
  4196  000D56  0012               	return	
  4197  000D58                     l1006:
  4198  000D58  50C6               	movf	4038,w,c	;volatile
  4199  000D5A  0B0F               	andlw	15
  4200  000D5C  0A08               	xorlw	8
  4201  000D5E  B4D8               	btfsc	status,2,c
  4202  000D60  D00F               	goto	l1024
  4203  000D62  50C6               	movf	4038,w,c	;volatile
  4204  000D64  0B0F               	andlw	15
  4205  000D66  0A0B               	xorlw	11
  4206  000D68  B4D8               	btfsc	status,2,c
  4207  000D6A  D00A               	goto	l1024
  4208  000D6C  88C6               	bsf	4038,4,c	;volatile
  4209  000D6E                     l363:
  4210  000D6E  A69E               	btfss	3998,3,c	;volatile
  4211  000D70  D7FE               	goto	l363
  4212  000D72  A4C7               	btfss	4039,2,c	;volatile
  4213  000D74  B0C7               	btfsc	4039,0,c	;volatile
  4214  000D76  D002               	goto	l1020
  4215  000D78  0EFE               	movlw	254
  4216  000D7A  0012               	return	
  4217  000D7C                     l1020:
  4218  000D7C  0E00               	movlw	0
  4219  000D7E  0012               	return	
  4220  000D80                     l1024:
  4221  000D80  50C6               	movf	4038,w,c	;volatile
  4222  000D82  0B0F               	andlw	15
  4223  000D84  0A08               	xorlw	8
  4224  000D86  B4D8               	btfsc	status,2,c
  4225  000D88  D005               	goto	l372
  4226  000D8A  50C6               	movf	4038,w,c	;volatile
  4227  000D8C  0B0F               	andlw	15
  4228  000D8E  0A0B               	xorlw	11
  4229  000D90  A4D8               	btfss	status,2,c
  4230  000D92  0012               	return	
  4231  000D94                     l372:
  4232  000D94  B0C7               	btfsc	4039,0,c	;volatile
  4233  000D96  D7FE               	goto	l372
  4234  000D98  EC18  F008         	call	_IdleI2C	;wreg free
  4235  000D9C  ACC5               	btfss	4037,6,c	;volatile
  4236  000D9E  D002               	goto	l1038
  4237  000DA0  0EFE               	movlw	254
  4238  000DA2  0012               	return	
  4239  000DA4                     l1038:
  4240  000DA4  0E00               	movlw	0
  4241  000DA6  0012               	return	
  4242  000DA8                     __end_of_WriteI2C:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           prodh	equ	0xFF4
  4249                           prodl	equ	0xFF3
  4250                           intcon	equ	0xFF2
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           postdec2	equ	0xFDD
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8
  4259                           
  4260 ;; *************** function _IdleI2C *****************
  4261 ;; Defined at:
  4262 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_idle.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4276 ;;      Params:         0       0       0       0
  4277 ;;      Locals:         0       0       0       0
  4278 ;;      Temps:          1       0       0       0
  4279 ;;      Totals:         1       0       0       0
  4280 ;;Total ram usage:        1 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_FMwrite
  4286 ;;		_FMread
  4287 ;;		_WriteI2C
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text29
  4292  001030                     __ptext29:
  4293                           	opt stack 0
  4294  001030                     _IdleI2C:
  4295                           	opt stack 26
  4296  001030                     l992:
  4297  001030  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  4298  001034  0E1F               	movlw	31
  4299  001036  1601               	andwf	??_IdleI2C,f,c
  4300  001038  A4D8               	btfss	status,2,c
  4301  00103A  D7FA               	goto	l992
  4302  00103C  A4C7               	btfss	4039,2,c	;volatile
  4303  00103E  0012               	return	
  4304  001040  D7F7               	goto	l992
  4305  001042                     __end_of_IdleI2C:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           indf2	equ	0xFDF
  4317                           postinc2	equ	0xFDE
  4318                           postdec2	equ	0xFDD
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _ReadI2C *****************
  4324 ;; Defined at:
  4325 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_read.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      unsigned char 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4339 ;;      Params:         0       0       0       0
  4340 ;;      Locals:         0       0       0       0
  4341 ;;      Temps:          0       0       0       0
  4342 ;;      Totals:         0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_FMread
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text30
  4353  000FDA                     __ptext30:
  4354                           	opt stack 0
  4355  000FDA                     _ReadI2C:
  4356                           	opt stack 26
  4357                           
  4358                           ;incstack = 0
  4359  000FDA  50C6               	movf	4038,w,c	;volatile
  4360  000FDC  0B0F               	andlw	15
  4361  000FDE  0A08               	xorlw	8
  4362  000FE0  B4D8               	btfsc	status,2,c
  4363  000FE2  D004               	goto	l338
  4364  000FE4  50C6               	movf	4038,w,c	;volatile
  4365  000FE6  0B0F               	andlw	15
  4366  000FE8  0A0B               	xorlw	11
  4367  000FEA  B4D8               	btfsc	status,2,c
  4368  000FEC                     l338:
  4369  000FEC  86C5               	bsf	4037,3,c	;volatile
  4370  000FEE                     l339:
  4371  000FEE  A0C7               	btfss	4039,0,c	;volatile
  4372  000FF0  D7FE               	goto	l339
  4373  000FF2  50C9               	movf	4041,w,c	;volatile
  4374  000FF4  0012               	return	
  4375  000FF6                     __end_of_ReadI2C:
  4376                           	opt stack 0
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           postinc0	equ	0xFEE
  4385                           wreg	equ	0xFE8
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           prodh	equ	0xFF4
  4397                           prodl	equ	0xFF3
  4398                           intcon	equ	0xFF2
  4399                           postinc0	equ	0xFEE
  4400                           wreg	equ	0xFE8
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           postdec2	equ	0xFDD
  4404                           fsr2h	equ	0xFDA
  4405                           fsr2l	equ	0xFD9
  4406                           status	equ	0xFD8
  4407                           
  4408                           	psect	rparam
  4409  0000                     tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           prodh	equ	0xFF4
  4414                           prodl	equ	0xFF3
  4415                           intcon	equ	0xFF2
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           indf2	equ	0xFDF
  4419                           postinc2	equ	0xFDE
  4420                           postdec2	equ	0xFDD
  4421                           fsr2h	equ	0xFDA
  4422                           fsr2l	equ	0xFD9
  4423                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    87
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      84
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), setVolume@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), frequency@data(COMRAM[2]), tuneWithAutoHiLo@status(COMRAM[2]), 
		 -> readLOInjection@status(COMRAM[2]), seek@status(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_VolumeDown
    _main->_VolumeUp
    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _VolumeUp->_seek
    _VolumeDown->_seek
    _seek->_tuneWithAutoHiLo
    _tuneWithAutoHiLo->_readLOInjection
    _setHardmute->_setBitInRegister
    _readLOInjection->_setBitInRegister
    _frequency->_FMread
    _setSeekDirection->_setBitInRegister
    _setBitInRegister->_FMwrite
    _SeekUP->_delay_10ms
    _SeekDOWN->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   50065
                                             42 COMRAM     6     6      0
                         _FMfrequenc
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                           _SeekDOWN
                             _SeekUP
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    2206
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    2206
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1800
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           19    17      2     416
                                              0 COMRAM    19    17      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0   19772
                                             41 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0   19772
                                             41 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (2) _seek                                                 7     7      0   19343
                                             34 COMRAM     7     7      0
                             _FMread
                            _FMwrite
                          _frequency
                   _setBitInRegister
                        _setHardmute
                   _setSeekDirection
                   _tuneWithAutoHiLo
 ---------------------------------------------------------------------------------
 (3) _tuneWithAutoHiLo                                     8     8      0   10129
                                             26 COMRAM     8     8      0
                             _FMread
                            _FMwrite
                          _frequency
                    _readLOInjection
                   _setBitInRegister
                        _setHardmute
 ---------------------------------------------------------------------------------
 (4) _setHardmute                                          1     1      0    2464
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _readLOInjection                                      9     9      0    3444
                                             17 COMRAM     9     9      0
                             _FMread
                            _FMwrite
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _frequency                                            9     7      2     798
                                             11 COMRAM     9     7      2
                             _FMread
 ---------------------------------------------------------------------------------
 (3) _setSeekDirection                                     1     1      0    2486
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (5) _setBitInRegister                                    10     8      2    2442
                                              7 COMRAM    10     8      2
                            _FMwrite
 ---------------------------------------------------------------------------------
 (1) _SeekUP                                               0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _SeekDOWN                                             0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     406
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     833
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1698
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     368
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2    1013
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     747
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMfrequenc
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _SeekDOWN
     _delay_10ms
   _SeekUP
     _delay_10ms
   _VolumeDown
     _delay_10ms
     _seek
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _VolumeUp
     _delay_10ms
     _seek
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _butnEvent
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      54       1       88.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       8        0.0%
DATA                 0      0      54      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Feb 19 18:18:21 2017

    readLOInjection@rssi_val 0018                  __CFG_CP$OFF 000000                  _SSPSTATbits 000FC7  
                         l93 0D3E                           l88 0D02                           l98 09E4  
                __CFG_BORV$3 000000                          l103 0A0C                          l112 0A4C  
                        l106 0A2C                          l131 07DA                          l109 0A42  
                        l142 08B4                          l151 06F6                          l152 0730  
                        l240 03FC                          l232 1052                          l242 0392  
                        l251 0434                          l180 0AE6                          l245 03D4  
                        l262 053C                          l254 0474                          l264 0524  
                        l257 04EC                          l249 049C                          l338 0FEC  
                        l339 0FEE                          l363 0D6E                          l259 04D4  
                        l372 0D94                          l269 0574                          l992 1030  
                        _dly 0ECE                 _softmute_bit 0350                          prod 000FF3  
                        wreg 000FE8                 __CFG_WDT$OFF 000000                         l1020 0D7C  
                       l1006 0D58                         l1024 0D80                         l1052 0D1A  
                       l1038 0DA4                         l2120 0480                         l2104 0418  
                       l2114 0458                         l2126 048A                         l2070 0376  
                       l2080 03B6                         l2138 04B8                         l2148 04E2  
                       l2092 03EA                         l2260 097C                         l2252 095C  
                       l2158 0508                         l2086 03E0                         l2262 0982  
                       l2254 096A                         l2192 058A                         l2168 0532  
                       l2264 098A                         l2256 0970                         l2272 099C  
                       l1730 0BCC                         l1810 071A                         l2178 0558  
                       l2266 0990                         l2258 0976                         l1820 0EE2  
                       l1732 0C26                         l2188 0582                         l1900 0C62  
                       l2268 0996                         l1822 0EE8                         l1760 08AC  
                       l1808 0690                         l1834 0E1A                         l1818 0ED8  
                       l1826 0EF6                         l1922 0F28                         l1754 0894  
                       l1924 0F36                         l1780 0DD6                         l1748 085E  
                       l1694 09FC                         l1942 0AAE                         l1960 0B00  
                       l1768 08D4                         ?_dly 0001                         l1962 0B04  
                       l1946 0AB6                         l1866 07BE                         l1972 0B1C  
                       l1966 0B0C                         l1984 0B3A                         l1976 0B20  
                       l1896 0C4E                         l1986 0B48                         l1988 0B54  
                       u1200 0E2E                         u1210 0E30                         u1125 08E0  
                       u1054 0BA6                         u1055 0BA0                         u1064 0BFA  
                       u1065 0BF4                         u1075 0EAE                         u1500 0434  
                       u1430 0392                         u1610 0524                         u1530 0474  
                       u1460 03D4                         u1650 0574                         u1570 04D4  
                       u1750 0940                         u1807 045E                         u1817 04BE  
                       u1827 050E                         u1837 055E                         u1847 0F2E  
                       u1777 037C                         u1787 03BC                         u1797 041E  
                       _Init 0E48              __end_of_FMready 0E48                         _main 0916  
                       _seek 0740                         dly@d 0001                         dly@i 0003  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
            __end_of_FMwrite 0D4A                         prodh 000FF4                         prodl 000FF3  
              seek@direction 0025                         start 0000                __CFG_IESO$OFF 000000  
            __end_of_IdleI2C 1042                __CFG_MCLRE$ON 000000                 ___param_bank 000010  
            __end_of_ReadI2C 0FF6      tuneWithAutoHiLo@rssi_hi 0020              __end_of_OpenI2C 0FA2  
    tuneWithAutoHiLo@rssi_lo 001F                        ??_dly 0003                        ?_Init 0001  
                      ?_main 0001                        ?_seek 0001                        _T0CON 000FD5  
                      _LCDPS 000F58                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISG 000F98                __CFG_PWRT$OFF 000000               __CFG_FCMEN$OFF 000000  
            __end_of_regDflt 0325                        _errfm 1052                  ?_FMfrequenc 0012  
              _hiloctrl1_bit 033C                _hiloctrl2_bit 0340               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        status 000FD8               seek@curChannel 0023  
               ?_nextChannel 0001              __initialization 0FF6                 __end_of_Init 0E8C  
               __end_of_main 09E0                 __end_of_seek 083E                 ?_setHardmute 0001  
           __end_of_SeekDOWN 1030                       ??_Init 0003                       ??_main 002B  
setBitInRegister@bitRegister 0008                       ??_seek 0023                __activetblptr 000002  
           __end_of_MuteHard 1056                       _ADCON1 000FC1                    ??_FMready 000E  
                     ?_errfm 0001            ?_setSeekDirection 0001             __end_of_WriteI2C 0DA8  
                  ??_FMwrite 0003             __end_of_VolumeUp 0FBE                  OpenI2C@slew 0001  
                  ??_IdleI2C 0001           ??_setSeekDirection 0012          readLOInjection@loHi 0015  
                     _FMinit 0AAA                       _FMread 09E0                       _SSPADD 000FC8  
        readLOInjection@temp 0016                       _SSPBUF 000FC9                       _FMvers 1042  
                  ??_ReadI2C 0001                    ??_OpenI2C 0002                       _SeekUP 100C  
             __CFG_XINST$OFF 000000            ?_tuneWithAutoHiLo 0001           ??_tuneWithAutoHiLo 001B  
 tuneWithAutoHiLo@curChannel 001B          __size_of_FMfrequenc 009A                       _regImg 0031  
                     clear_0 0FFC         __end_of_hardmute_bit 033C             __end_of_seek_bit 034C  
                     main@ui 002F             __end_of_showFreq 1058                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
        butnEvent@timereturn 0012             __end_of_tune_bit 0358            ?_setBitInRegister 0008  
                 __accesstop 0060      __end_of__initialization 1002           ??_setBitInRegister 000A  
              ___rparam_used 000001                   _VolumeDown 0FBE               __pcstackCOMRAM 0001  
              __end_of_errfm 1054               setVolume@F6670 0325     __size_of_readLOInjection 00D8  
            __CFG_OSC$INTIO7 000000                      ??_errfm 0001     __size_of_previousChannel 001E  
         __size_of_butnEvent 023A                   _delay_10ms 0F26                      ?_FMinit 0001  
                    ?_FMread 0003                    ?_SeekDOWN 0001                      ?_FMvers 000C  
         __size_of_frequency 0042                      ?_SeekUP 0001                    ?_MuteHard 0001  
       __end_of_hiloside_bit 0348       __end_ofsetVolume@F6670 0338         __size_of_nextChannel 001E  
                  ?_WriteI2C 0001                    ?_VolumeUp 0001         __size_of_setHardmute 0026  
                  FMinit@dat 0012                      _FMready 0E02                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                 ??_FMfrequenc 0014                      _SSPSTAT 000FC7  
                    _FMwrite 0CC8                      _IdleI2C 1030                   ??_SeekDOWN 0004  
            __size_of_FMinit 00C6              __size_of_FMread 00CA                    FMvers@vsn 000C  
                    _ReadI2C 0FDA              __size_of_FMvers 0010                      _OpenI2C 0F84  
                    __Hparam 0000                      __Lparam 0000                  ?_VolumeDown 0001  
                 ??_MuteHard 0001              __size_of_SeekUP 0012                    ?_showFreq 0001  
               __psmallconst 0300              __CFG_STVREN$OFF 000000                      __pcinit 0FF6  
                 ??_WriteI2C 0002            __end_of_butnEvent 0594           __end_of_FMfrequenc 0CC8  
                 ??_VolumeUp 002A                      __ramtop 0300                      __ptext0 0916  
                    __ptext1 0F48                      __ptext2 0F66                      __ptext3 0C2E  
                    __ptext4 1052                      __ptext5 035A                      __ptext6 0FA2  
                    __ptext7 0FBE                      __ptext8 0740                      __ptext9 0594  
                  _T0CONbits 000FD5            __end_of_frequency 0ECE                      _regDflt 0301  
               __size_of_dly 0032                      main@evt 002D            ??_readLOInjection 0012  
       end_of_initialization 1002                  ?_delay_10ms 0001                 _hardmute_bit 0338  
              __Lmediumconst 0000                   _seekup_bit 034C            ??_previousChannel 001C  
                FMfrequenc@f 0012                   ??_showFreq 0001                      postdec2 000FDD  
  __size_of_setSeekDirection 005A                      postinc0 000FEE                      postinc2 000FDE  
                  _PORTAbits 000F80                    _PORTBbits 000F81                    _PORTCbits 000F82  
                  _PORTGbits 000F86    __size_of_tuneWithAutoHiLo 01AC                    _TRISCbits 000F94  
        __size_of_VolumeDown 001C                VolumeDown@dir 002A               __end_of_FMinit 0B70  
             __end_of_FMread 0AAA               __end_of_FMvers 1052       tuneWithAutoHiLo@status 0021  
             __end_of_SeekUP 101E    __size_of_setBitInRegister 00BE          setHardmute@bitState 0012  
        __size_of_delay_10ms 0022                   butnEvent@c 0004          start_initialization 0FF6  
                __end_of_dly 0F00             WriteI2C@data_out 0002                 _hiloside_bit 0344  
                   ??_FMinit 0012                     ??_FMread 0005                     ??_FMvers 000E  
          __size_of_SeekDOWN 0012                     ??_SeekUP 0004            __size_of_MuteHard 0002  
          __size_of_WriteI2C 005E            __size_of_VolumeUp 001C                  __pbssCOMRAM 0031  
                VolumeUp@dir 002A                     ?_FMready 000C        __end_of_hiloctrl1_bit 0340  
      __end_of_hiloctrl2_bit 0344                   seek@status 0028                     ?_FMwrite 0001  
                   ?_IdleI2C 0001                     ?_ReadI2C 0001                     ?_OpenI2C 0001  
              ??_nextChannel 001C                 ??_VolumeDown 002A             _setSeekDirection 0DA8  
              ??_setHardmute 0012            __size_of_showFreq 0002                     FMinit@ad 0014  
            _readLOInjection 083E                  __smallconst 0300                    _butnEvent 035A  
            FMwrite@firstByt 0005             _tuneWithAutoHiLo 0594              _previousChannel 0F48  
                  _frequency 0E8C           __end_of_VolumeDown 0FDA              FMwrite@secndByt 0006  
             __size_of_errfm 0002                 ??_delay_10ms 0003                 MuteHard@down 0001  
              frequency@data 0013               FMread@firstByt 000A                   FMread@data 0003  
                   _PIR1bits 000F9E             _setBitInRegister 0B70               FMread@secndByt 000B  
                 FMready@rdy 000C                   FMready@sts 0010          __end_of_nextChannel 0F84  
      readLOInjection@status 0019           __end_of_delay_10ms 0F48                   ?_butnEvent 0001  
        __end_of_setHardmute 0F26                   ?_frequency 000C             __size_of_FMready 0046  
           __size_of_FMwrite 0082             OpenI2C@sync_mode 0002                     _SeekDOWN 101E  
           __size_of_IdleI2C 0012         __end_of_softmute_bit 0354             __size_of_ReadI2C 001C  
                   __Hrparam 0000             __size_of_OpenI2C 001E                     _MuteHard 1054  
                   __Lrparam 0000      __end_of_readLOInjection 0916                   FMwrite@adr 0007  
                   _WriteI2C 0D4A                     _VolumeUp 0FA2      __end_of_previousChannel 0F66  
  setSeekDirection@direction 0012     setBitInRegister@bitState 0009                     __ptext10 0F00  
                   __ptext11 083E                     __ptext20 0F84                     __ptext12 0E8C  
                   __ptext21 1042                     __ptext13 0DA8                     __ptext30 0FDA  
                   __ptext22 0AAA                     __ptext14 0B70                     __ptext23 1056  
                   __ptext15 100C                     __ptext24 0ECE                     __ptext16 101E  
                   __ptext25 0CC8                     __ptext17 0F26                     __ptext26 0E02  
                   __ptext18 1054                     __ptext27 09E0                     __ptext19 0E48  
                   __ptext28 0D4A                     __ptext29 1030                  delay_10ms@n 0001  
              __size_of_Init 0044                __size_of_main 00CA                __size_of_seek 00FE  
                   _seek_bit 0348                FMread@regAddr 0009                  _nextChannel 0F66  
                   _showFreq 1056                FMfrequenc@dat 0018                  _setHardmute 0F00  
                   _tune_bit 0354         tuneWithAutoHiLo@temp 001D                  ??_butnEvent 0003  
                 _INTCONbits 000FF2           __end_of_seekup_bit 0350                  ??_frequency 000E  
   __end_of_setSeekDirection 0E02                     seek@temp 0026      setBitInRegister@address 0011  
   __end_of_tuneWithAutoHiLo 0740                 FMfrequenc@cn 001A             ?_readLOInjection 0001  
           ?_previousChannel 0001                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
   __end_of_setBitInRegister 0C2E                   _FMfrequenc 0C2E               butnEvent@c_630 0008  
             butnEvent@c_631 000A               butnEvent@c_640 000C               butnEvent@c_641 000E  
             butnEvent@c_629 0006               butnEvent@c_648 0010  
