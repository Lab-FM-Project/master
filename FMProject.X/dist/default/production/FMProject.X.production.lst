

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Feb 17 14:37:31 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	smallconst
    35  000300                     __psmallconst:
    36                           	opt stack 0
    37  000300  00                 	db	0
    38  000301                     _regDflt:
    39                           	opt stack 0
    40  000301  FFFF               	dw	65535
    41  000303  5B15               	dw	23317
    42  000305  D0B9               	dw	53433
    43  000307  A010               	dw	40976
    44  000309  0780               	dw	1920
    45  00030B  28AB               	dw	10411
    46  00030D  6400               	dw	25600
    47  00030F  1EE7               	dw	7911
    48  000311  7141               	dw	28993
    49  000313  007D               	dw	125
    50  000315  82C6               	dw	33478
    51  000317  4F55               	dw	20309
    52  000319  970C               	dw	38668
    53  00031B  B845               	dw	47173
    54  00031D  FC2D               	dw	64557
    55  00031F  8097               	dw	32919
    56  000321  04A1               	dw	1185
    57  000323  DF6A               	dw	57194
    58  000325                     __end_of_regDflt:
    59                           	opt stack 0
    60  0000                     _LCDCON	set	3929
    61  0000                     _LCDPS	set	3928
    62  0000                     _LCDSE0	set	3930
    63  0000                     _LCDSE1	set	3931
    64  0000                     _LCDSE2	set	3932
    65  0000                     _LCDSE3	set	3933
    66  0000                     _ADCON1	set	4033
    67  0000                     _INTCONbits	set	4082
    68  0000                     _OSCCON	set	4051
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTGbits	set	3974
    77  0000                     _SSPADD	set	4040
    78  0000                     _SSPBUF	set	4041
    79  0000                     _SSPCON1	set	4038
    80  0000                     _SSPCON1bits	set	4038
    81  0000                     _SSPCON2	set	4037
    82  0000                     _SSPCON2bits	set	4037
    83  0000                     _SSPSTAT	set	4039
    84  0000                     _SSPSTATbits	set	4039
    85  0000                     _T0CON	set	4053
    86  0000                     _T0CONbits	set	4053
    87  0000                     _TMR0H	set	4055
    88  0000                     _TMR0L	set	4054
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISG	set	3992
    94  0000                     _LCDDATA0	set	3936
    95                           
    96                           ; #config settings
    97  000325  00                 	db	0	; dummy byte at the end
    98  0000                     
    99                           	psect	cinit
   100  0009C0                     __pcinit:
   101                           	opt stack 0
   102  0009C0                     start_initialization:
   103                           	opt stack 0
   104  0009C0                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (36 bytes)
   108  0009C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   109  0009C4  0E24               	movlw	36
   110  0009C6                     clear_0:
   111  0009C6  6AEE               	clrf	postinc0,c
   112  0009C8  06E8               	decf	wreg,f,c
   113  0009CA  E1FD               	bnz	clear_0
   114  0009CC                     end_of_initialization:
   115                           	opt stack 0
   116  0009CC                     __end_of__initialization:
   117                           	opt stack 0
   118  0009CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  0009CE  6EF8               	movwf	tblptru,c
   120  0009D0  0100               	movlb	0
   121  0009D2  EF2B  F003         	goto	_main	;jump to C main() function
   122                           tblptru	equ	0xFF8
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           
   126                           	psect	bssCOMRAM
   127  000001                     __pbssCOMRAM:
   128                           	opt stack 0
   129  000001                     _regImg:
   130                           	opt stack 0
   131  000001                     	ds	36
   132                           tblptru	equ	0xFF8
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           
   136                           	psect	cstackCOMRAM
   137  000025                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000025                     ??_IdleI2C:
   140  000025                     OpenI2C@slew:
   141                           	opt stack 0
   142  000025                     dly@d:
   143                           	opt stack 0
   144  000025                     delay_10ms@n:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x0
   148  000025                     	ds	1
   149  000026                     OpenI2C@sync_mode:
   150                           	opt stack 0
   151  000026                     WriteI2C@data_out:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x1
   155  000026                     	ds	1
   156  000027                     ??_delay_10ms:
   157  000027                     ??_FMwrite:
   158  000027                     dly@i:
   159                           	opt stack 0
   160  000027                     FMread@data:
   161                           	opt stack 0
   162                           
   163                           ; 2 bytes @ 0x2
   164  000027                     	ds	1
   165  000028                     ?_butnEvent:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x3
   169  000028                     	ds	1
   170  000029                     ??_FMread:
   171  000029                     FMwrite@firstByt:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175  000029                     	ds	1
   176  00002A                     ??_butnEvent:
   177  00002A                     FMwrite@secndByt:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x5
   181  00002A                     	ds	1
   182  00002B                     FMwrite@adr:
   183                           	opt stack 0
   184  00002B                     butnEvent@c:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x6
   188  00002B                     	ds	2
   189  00002D                     FMread@regAddr:
   190                           	opt stack 0
   191  00002D                     butnEvent@c_507:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x8
   195  00002D                     	ds	1
   196  00002E                     FMread@firstByt:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x9
   200  00002E                     	ds	1
   201  00002F                     FMread@secndByt:
   202                           	opt stack 0
   203  00002F                     butnEvent@c_516:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0xA
   207  00002F                     	ds	1
   208  000030                     FMready@rdy:
   209                           	opt stack 0
   210  000030                     FMvers@vsn:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0xB
   214  000030                     	ds	1
   215  000031                     butnEvent@c_517:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0xC
   219  000031                     	ds	1
   220  000032                     ??_FMready:
   221  000032                     
   222                           ; 1 bytes @ 0xD
   223  000032                     	ds	1
   224  000033                     butnEvent@c_524:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0xE
   228  000033                     	ds	1
   229  000034                     FMready@sts:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0xF
   233  000034                     	ds	2
   234  000036                     FMinit@dat:
   235                           	opt stack 0
   236  000036                     FMfrequenc@f:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x11
   240  000036                     	ds	2
   241  000038                     ??_FMfrequenc:
   242  000038                     FMinit@ad:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x13
   246  000038                     	ds	4
   247  00003C                     FMfrequenc@cn:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x17
   251  00003C                     	ds	2
   252  00003E                     FMfrequenc@dat:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x19
   256  00003E                     	ds	2
   257  000040                     ??_main:
   258                           
   259                           ; 1 bytes @ 0x1B
   260  000040                     	ds	2
   261  000042                     main@evt:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x1D
   265  000042                     	ds	2
   266  000044                     main@ui:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x1F
   270  000044                     	ds	2
   271                           tblptru	equ	0xFF8
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 529 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  ui              2   31[COMRAM] unsigned int 
   285 ;;  evt             2   29[COMRAM] int 
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   295 ;;      Params:         0       0       0       0
   296 ;;      Locals:         4       0       0       0
   297 ;;      Temps:          2       0       0       0
   298 ;;      Totals:         6       0       0       0
   299 ;;Total ram usage:        6 bytes
   300 ;; Hardware stack levels required when called:    6
   301 ;; This function calls:
   302 ;;		_FMinit
   303 ;;		_FMvers
   304 ;;		_Init
   305 ;;		_MuteHard
   306 ;;		_VolumeDown
   307 ;;		_VolumeUp
   308 ;;		_butnEvent
   309 ;;		_dly
   310 ;;		_errfm
   311 ;;		_nextChannel
   312 ;;		_previousChannel
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319  000656                     __ptext0:
   320                           	opt stack 0
   321  000656                     _main:
   322                           	opt stack 25
   323                           
   324                           ;main.c: 530: int evt;
   325                           ;main.c: 531: unsigned int ui;
   326                           ;main.c: 532: dly(20);
   327                           
   328                           ;incstack = 0
   329  000656  0E00               	movlw	0
   330  000658  6E26               	movwf	dly@d+1,c
   331  00065A  0E14               	movlw	20
   332  00065C  6E25               	movwf	dly@d,c
   333  00065E  EC7B  F004         	call	_dly	;wreg free
   334                           
   335                           ;main.c: 533: Init();
   336  000662  ECF9  F003         	call	_Init	;wreg free
   337                           
   338                           ;main.c: 536: FMvers(&ui);
   339  000666  0E44               	movlw	low main@ui
   340  000668  6E30               	movwf	FMvers@vsn,c
   341  00066A  0E00               	movlw	high main@ui
   342  00066C  6E31               	movwf	FMvers@vsn+1,c
   343  00066E  ECF4  F004         	call	_FMvers	;wreg free
   344                           
   345                           ;main.c: 537: if (ui != 0x1010) errfm();
   346  000672  0E10               	movlw	16
   347  000674  1844               	xorwf	main@ui,w,c
   348  000676  E103               	bnz	u1140
   349  000678  0E10               	movlw	16
   350  00067A  1845               	xorwf	main@ui+1,w,c
   351  00067C  A4D8               	btfss	status,2,c
   352  00067E                     u1140:
   353  00067E  ECFC  F004         	call	_errfm	;wreg free
   354                           
   355                           ;main.c: 538: if (FMinit() != 0) errfm();
   356  000682  ECC8  F002         	call	_FMinit	;wreg free
   357  000686  0900               	iorlw	0
   358  000688  A4D8               	btfss	status,2,c
   359  00068A  ECFC  F004         	call	_errfm	;wreg free
   360  00068E                     l1738:
   361                           
   362                           ;main.c: 541: evt = butnEvent();
   363  00068E  EC93  F001         	call	_butnEvent	;wreg free
   364  000692  C028  F042         	movff	?_butnEvent,main@evt
   365  000696  C029  F043         	movff	?_butnEvent+1,main@evt+1
   366                           
   367                           ;main.c: 542: switch (evt) {
   368  00069A  D015               	goto	l1754
   369  00069C                     l1740:
   370  00069C  ECB4  F004         	call	_nextChannel	;wreg free
   371                           
   372                           ;main.c: 544: break;
   373  0006A0  D7F6               	goto	l1738
   374  0006A2                     l1742:
   375  0006A2  ECA5  F004         	call	_previousChannel	;wreg free
   376                           
   377                           ;main.c: 546: break;
   378  0006A6  D7F3               	goto	l1738
   379  0006A8                     l1744:
   380  0006A8  0E00               	movlw	0
   381  0006AA  ECFD  F004         	call	_VolumeUp
   382                           
   383                           ;main.c: 548: break;
   384  0006AE  D7EF               	goto	l1738
   385  0006B0                     l1746:
   386  0006B0  0E00               	movlw	0
   387  0006B2  ECFE  F004         	call	_VolumeDown
   388                           
   389                           ;main.c: 550: break;
   390  0006B6  D7EB               	goto	l1738
   391  0006B8                     l1748:
   392  0006B8  0E00               	movlw	0
   393  0006BA  ECFF  F004         	call	_MuteHard
   394                           
   395                           ;main.c: 552: break;
   396  0006BE  D7E7               	goto	l1738
   397  0006C0                     l1750:
   398  0006C0  ECFC  F004         	call	_errfm	;wreg free
   399                           
   400                           ;main.c: 558: }
   401                           
   402                           ;main.c: 557: default: break;
   403                           
   404                           ;main.c: 555: break;
   405  0006C4  D7E4               	goto	l1738
   406  0006C6                     l1754:
   407  0006C6  C042  F040         	movff	main@evt,??_main
   408  0006CA  C043  F041         	movff	main@evt+1,??_main+1
   409                           
   410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   411                           ; Switch size 1, requested type "space"
   412                           ; Number of cases is 1, Range of values is 0 to 0
   413                           ; switch strategies available:
   414                           ; Name         Instructions Cycles
   415                           ; simple_byte            4     3 (average)
   416                           ;	Chosen strategy is simple_byte
   417  0006CE  5041               	movf	??_main+1,w,c
   418  0006D0  0A00               	xorlw	0	; case 0
   419  0006D2  A4D8               	btfss	status,2,c
   420  0006D4  D7DC               	goto	l1738
   421                           
   422                           ; Switch size 1, requested type "space"
   423                           ; Number of cases is 6, Range of values is 1 to 8
   424                           ; switch strategies available:
   425                           ; Name         Instructions Cycles
   426                           ; simple_byte           19    10 (average)
   427                           ;	Chosen strategy is simple_byte
   428  0006D6  5040               	movf	??_main,w,c
   429  0006D8  0A01               	xorlw	1	; case 1
   430  0006DA  B4D8               	btfsc	status,2,c
   431  0006DC  D7DF               	goto	l1740
   432  0006DE  0A03               	xorlw	3	; case 2
   433  0006E0  B4D8               	btfsc	status,2,c
   434  0006E2  D7DF               	goto	l1742
   435  0006E4  0A01               	xorlw	1	; case 3
   436  0006E6  B4D8               	btfsc	status,2,c
   437  0006E8  D7DF               	goto	l1744
   438  0006EA  0A07               	xorlw	7	; case 4
   439  0006EC  B4D8               	btfsc	status,2,c
   440  0006EE  D7E0               	goto	l1746
   441  0006F0  0A01               	xorlw	1	; case 5
   442  0006F2  B4D8               	btfsc	status,2,c
   443  0006F4  D7E1               	goto	l1748
   444  0006F6  0A0D               	xorlw	13	; case 8
   445  0006F8  B4D8               	btfsc	status,2,c
   446  0006FA  D7E2               	goto	l1750
   447                           
   448                           ;main.c: 559: }
   449  0006FC  D7C8               	goto	l1738
   450  0006FE                     __end_of_main:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           status	equ	0xFD8
   456                           
   457 ;; *************** function _previousChannel *****************
   458 ;; Defined at:
   459 ;;		line 466 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      unsigned char 
   466 ;; Registers used:
   467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   473 ;;      Params:         0       0       0       0
   474 ;;      Locals:         0       0       0       0
   475 ;;      Temps:          0       0       0       0
   476 ;;      Totals:         0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    5
   480 ;; This function calls:
   481 ;;		_FMfrequenc
   482 ;;		_delay_10ms
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text1
   489  00094A                     __ptext1:
   490                           	opt stack 0
   491  00094A                     _previousChannel:
   492                           	opt stack 25
   493                           
   494                           ;main.c: 467: FMfrequenc(1046);
   495                           
   496                           ;incstack = 0
   497  00094A  0E04               	movlw	4
   498  00094C  6E37               	movwf	FMfrequenc@f+1,c
   499  00094E  0E16               	movlw	22
   500  000950  6E36               	movwf	FMfrequenc@f,c
   501  000952  ECC0  F003         	call	_FMfrequenc	;wreg free
   502                           
   503                           ;main.c: 468: PORTCbits.RC7 = 1;
   504  000956  8E82               	bsf	3970,7,c	;volatile
   505                           
   506                           ;main.c: 469: delay_10ms(10);
   507  000958  0E00               	movlw	0
   508  00095A  6E26               	movwf	delay_10ms@n+1,c
   509  00095C  0E0A               	movlw	10
   510  00095E  6E25               	movwf	delay_10ms@n,c
   511  000960  EC94  F004         	call	_delay_10ms	;wreg free
   512                           
   513                           ;main.c: 470: PORTCbits.RC7 = 0;
   514  000964  9E82               	bcf	3970,7,c	;volatile
   515  000966  0012               	return	
   516  000968                     __end_of_previousChannel:
   517                           	opt stack 0
   518                           tblptru	equ	0xFF8
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           status	equ	0xFD8
   522                           
   523 ;; *************** function _nextChannel *****************
   524 ;; Defined at:
   525 ;;		line 456 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      unsigned char 
   532 ;; Registers used:
   533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       0       0       0
   541 ;;      Temps:          0       0       0       0
   542 ;;      Totals:         0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    5
   546 ;; This function calls:
   547 ;;		_FMfrequenc
   548 ;;		_delay_10ms
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text2
   555  000968                     __ptext2:
   556                           	opt stack 0
   557  000968                     _nextChannel:
   558                           	opt stack 25
   559                           
   560                           ;main.c: 457: FMfrequenc(964);
   561                           
   562                           ;incstack = 0
   563  000968  0E03               	movlw	3
   564  00096A  6E37               	movwf	FMfrequenc@f+1,c
   565  00096C  0EC4               	movlw	196
   566  00096E  6E36               	movwf	FMfrequenc@f,c
   567  000970  ECC0  F003         	call	_FMfrequenc	;wreg free
   568                           
   569                           ;main.c: 458: PORTCbits.RC6 = 1;
   570  000974  8C82               	bsf	3970,6,c	;volatile
   571                           
   572                           ;main.c: 459: delay_10ms(10);
   573  000976  0E00               	movlw	0
   574  000978  6E26               	movwf	delay_10ms@n+1,c
   575  00097A  0E0A               	movlw	10
   576  00097C  6E25               	movwf	delay_10ms@n,c
   577  00097E  EC94  F004         	call	_delay_10ms	;wreg free
   578                           
   579                           ;main.c: 460: PORTCbits.RC6 = 0;
   580  000982  9C82               	bcf	3970,6,c	;volatile
   581  000984  0012               	return	
   582  000986                     __end_of_nextChannel:
   583                           	opt stack 0
   584                           tblptru	equ	0xFF8
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           status	equ	0xFD8
   588                           
   589 ;; *************** function _FMfrequenc *****************
   590 ;; Defined at:
   591 ;;		line 391 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  f               2   17[COMRAM] unsigned int 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  dat             2   25[COMRAM] unsigned int 
   596 ;;  cn              2   23[COMRAM] unsigned int 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      unsigned char 
   599 ;; Registers used:
   600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   606 ;;      Params:         2       0       0       0
   607 ;;      Locals:         4       0       0       0
   608 ;;      Temps:          4       0       0       0
   609 ;;      Totals:        10       0       0       0
   610 ;;Total ram usage:       10 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    4
   613 ;; This function calls:
   614 ;;		_FMready
   615 ;;		_FMwrite
   616 ;;		_dly
   617 ;; This function is called by:
   618 ;;		_nextChannel
   619 ;;		_previousChannel
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text3
   624  000780                     __ptext3:
   625                           	opt stack 0
   626  000780                     _FMfrequenc:
   627                           	opt stack 25
   628                           
   629                           ;main.c: 393: unsigned int dat;
   630                           ;main.c: 394: unsigned int cn;
   631                           ;main.c: 396: cn = f - 690;
   632                           
   633                           ;incstack = 0
   634  000780  0E4E               	movlw	78
   635  000782  2436               	addwf	FMfrequenc@f,w,c
   636  000784  6E3C               	movwf	FMfrequenc@cn,c
   637  000786  0EFD               	movlw	253
   638  000788  2037               	addwfc	FMfrequenc@f+1,w,c
   639  00078A  6E3D               	movwf	FMfrequenc@cn+1,c
   640                           
   641                           ;main.c: 399: regImg[2] &= ~0x0200;
   642  00078C  9206               	bcf	_regImg+5,1,c
   643                           
   644                           ;main.c: 400: if (FMwrite(2) != 0) return 1;
   645  00078E  0E02               	movlw	2
   646  000790  EC7F  F003         	call	_FMwrite
   647  000794  0900               	iorlw	0
   648  000796  A4D8               	btfss	status,2,c
   649  000798  0012               	return	
   650                           
   651                           ;main.c: 401: regImg[2] &= 0xfe00;
   652                           
   653                           ;	Return value of _FMfrequenc is never used
   654  00079A  0E00               	movlw	0
   655  00079C  1605               	andwf	_regImg+4,f,c
   656  00079E  0EFE               	movlw	254
   657  0007A0  1606               	andwf	_regImg+5,f,c
   658                           
   659                           ;main.c: 402: regImg[2] |= (cn | 0x0200);
   660  0007A2  0E00               	movlw	0
   661  0007A4  6E38               	movwf	??_FMfrequenc& (0+255),c
   662  0007A6  0E02               	movlw	2
   663  0007A8  6E39               	movwf	(??_FMfrequenc+1)& (0+255),c
   664  0007AA  C03C  F03A         	movff	FMfrequenc@cn,??_FMfrequenc+2
   665  0007AE  C03D  F03B         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   666  0007B2  5038               	movf	??_FMfrequenc,w,c
   667  0007B4  123A               	iorwf	??_FMfrequenc+2,f,c
   668  0007B6  5039               	movf	??_FMfrequenc+1,w,c
   669  0007B8  123B               	iorwf	??_FMfrequenc+3,f,c
   670  0007BA  503A               	movf	??_FMfrequenc+2,w,c
   671  0007BC  1205               	iorwf	_regImg+4,f,c
   672  0007BE  503B               	movf	??_FMfrequenc+3,w,c
   673  0007C0  1206               	iorwf	_regImg+5,f,c
   674                           
   675                           ;main.c: 403: if (FMwrite(2) != 0) return 1;
   676  0007C2  0E02               	movlw	2
   677  0007C4  EC7F  F003         	call	_FMwrite
   678  0007C8  0900               	iorlw	0
   679  0007CA  A4D8               	btfss	status,2,c
   680  0007CC  0012               	return	
   681                           
   682                           ;main.c: 405: dly(2);
   683                           
   684                           ;main.c: 404: do {
   685                           
   686                           ;	Return value of _FMfrequenc is never used
   687  0007CE  0E00               	movlw	0
   688  0007D0  6E26               	movwf	dly@d+1,c
   689  0007D2  0E02               	movlw	2
   690  0007D4  6E25               	movwf	dly@d,c
   691  0007D6  EC7B  F004         	call	_dly	;wreg free
   692                           
   693                           ;main.c: 406: if (FMready(&dat) != 0) return 1;
   694  0007DA  0E3E               	movlw	low FMfrequenc@dat
   695  0007DC  6E30               	movwf	FMready@rdy,c
   696  0007DE  0E00               	movlw	high FMfrequenc@dat
   697  0007E0  6E31               	movwf	FMready@rdy+1,c
   698  0007E2  EC58  F004         	call	_FMready	;wreg free
   699  0007E6  0900               	iorlw	0
   700  0007E8  A4D8               	btfss	status,2,c
   701  0007EA  0012               	return	
   702                           
   703                           ;main.c: 407: } while (!dat);
   704                           
   705                           ;	Return value of _FMfrequenc is never used
   706  0007EC  503E               	movf	FMfrequenc@dat,w,c
   707  0007EE  103F               	iorwf	FMfrequenc@dat+1,w,c
   708  0007F0  D7EC               	goto	L1
   709  0007F2                     __end_of_FMfrequenc:
   710                           	opt stack 0
   711                           tblptru	equ	0xFF8
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function _errfm *****************
   717 ;; Defined at:
   718 ;;		line 504 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		None
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   732 ;;      Params:         0       0       0       0
   733 ;;      Locals:         0       0       0       0
   734 ;;      Temps:          0       0       0       0
   735 ;;      Totals:         0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text4
   746  0009F8                     __ptext4:
   747                           	opt stack 0
   748  0009F8                     _errfm:
   749                           	opt stack 30
   750  0009F8                     l203:
   751  0009F8  D7FF               	goto	l203
   752  0009FA                     __end_of_errfm:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           status	equ	0xFD8
   758                           
   759 ;; *************** function _butnEvent *****************
   760 ;; Defined at:
   761 ;;		line 80 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  c               2   14[COMRAM] int 
   766 ;;  c               2   12[COMRAM] int 
   767 ;;  c               2   10[COMRAM] int 
   768 ;;  c               2    8[COMRAM] int 
   769 ;;  c               2    6[COMRAM] int 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2    3[COMRAM] int 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   779 ;;      Params:         2       0       0       0
   780 ;;      Locals:        10       0       0       0
   781 ;;      Temps:          1       0       0       0
   782 ;;      Totals:        13       0       0       0
   783 ;;Total ram usage:       13 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		_delay_10ms
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text5
   794  000326                     __ptext5:
   795                           	opt stack 0
   796  000326                     _butnEvent:
   797                           	opt stack 29
   798                           
   799                           ;main.c: 82: if (PORTAbits.RA0 == 0)
   800                           
   801                           ;incstack = 0
   802  000326  B080               	btfsc	3968,0,c	;volatile
   803  000328  D02E               	goto	l75
   804                           
   805                           ;main.c: 83: {
   806                           ;main.c: 84: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   807  00032A  0E00               	movlw	0
   808  00032C  6E2C               	movwf	butnEvent@c+1,c
   809  00032E  0E00               	movlw	0
   810  000330  6E2B               	movwf	butnEvent@c,c
   811  000332  BE2C               	btfsc	butnEvent@c+1,7,c
   812  000334  D006               	goto	l1520
   813  000336  502C               	movf	butnEvent@c+1,w,c
   814  000338  E112               	bnz	l77
   815  00033A  0E0B               	movlw	11
   816  00033C  5C2B               	subwf	butnEvent@c,w,c
   817  00033E  B0D8               	btfsc	status,0,c
   818  000340  D00E               	goto	l77
   819  000342                     l1520:
   820  000342  0E0D               	movlw	13
   821  000344  6E2A               	movwf	??_butnEvent& (0+255),c
   822  000346  0EFC               	movlw	252
   823  000348                     u1167:
   824  000348  2EE8               	decfsz	wreg,f,c
   825  00034A  D7FE               	goto	u1167
   826  00034C  2E2A               	decfsz	??_butnEvent& (0+255),f,c
   827  00034E  D7FC               	goto	u1167
   828  000350  4A2B               	infsnz	butnEvent@c,f,c
   829  000352  2A2C               	incf	butnEvent@c+1,f,c
   830  000354  BE2C               	btfsc	butnEvent@c+1,7,c
   831  000356  D7F5               	goto	l1520
   832  000358  502C               	movf	butnEvent@c+1,w,c
   833  00035A  E101               	bnz	u880
   834  00035C  D7EE               	goto	L2
   835  00035E                     u880:
   836  00035E                     l77:
   837                           
   838                           ;main.c: 85: if (PORTAbits.RA0 == 0)
   839  00035E  B080               	btfsc	3968,0,c	;volatile
   840  000360  D00D               	goto	l1536
   841                           
   842                           ;main.c: 86: {
   843                           ;main.c: 87: PORTCbits.RC6 = 1;
   844  000362  8C82               	bsf	3970,6,c	;volatile
   845                           
   846                           ;main.c: 88: delay_10ms(10);
   847  000364  0E00               	movlw	0
   848  000366  6E26               	movwf	delay_10ms@n+1,c
   849  000368  0E0A               	movlw	10
   850  00036A  6E25               	movwf	delay_10ms@n,c
   851  00036C  EC94  F004         	call	_delay_10ms	;wreg free
   852                           
   853                           ;main.c: 89: PORTCbits.RC6 = 0;
   854  000370  9C82               	bcf	3970,6,c	;volatile
   855                           
   856                           ;main.c: 90: return 1;
   857  000372  0E00               	movlw	0
   858  000374  6E29               	movwf	?_butnEvent+1,c
   859  000376  0E01               	movlw	1
   860  000378  6E28               	movwf	?_butnEvent,c
   861  00037A  0012               	return	
   862  00037C                     l1536:
   863                           
   864                           ;main.c: 93: return 0;
   865  00037C  0E00               	movlw	0
   866  00037E  6E29               	movwf	?_butnEvent+1,c
   867  000380  0E00               	movlw	0
   868  000382  6E28               	movwf	?_butnEvent,c
   869  000384  0012               	return	
   870  000386                     l75:
   871                           
   872                           ;main.c: 94: }
   873                           ;main.c: 95: }
   874                           ;main.c: 97: if (PORTAbits.RA1 == 0)
   875  000386  B280               	btfsc	3968,1,c	;volatile
   876  000388  D026               	goto	l81
   877                           
   878                           ;main.c: 98: {
   879                           ;main.c: 99: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   880  00038A  0E00               	movlw	0
   881  00038C  6E2E               	movwf	butnEvent@c_507+1,c
   882  00038E  0E00               	movlw	0
   883  000390  6E2D               	movwf	butnEvent@c_507,c
   884  000392  BE2E               	btfsc	butnEvent@c_507+1,7,c
   885  000394  D006               	goto	l1546
   886  000396  502E               	movf	butnEvent@c_507+1,w,c
   887  000398  E112               	bnz	l83
   888  00039A  0E0B               	movlw	11
   889  00039C  5C2D               	subwf	butnEvent@c_507,w,c
   890  00039E  B0D8               	btfsc	status,0,c
   891  0003A0  D00E               	goto	l83
   892  0003A2                     l1546:
   893  0003A2  0E0D               	movlw	13
   894  0003A4  6E2A               	movwf	??_butnEvent& (0+255),c
   895  0003A6  0EFC               	movlw	252
   896  0003A8                     u1177:
   897  0003A8  2EE8               	decfsz	wreg,f,c
   898  0003AA  D7FE               	goto	u1177
   899  0003AC  2E2A               	decfsz	??_butnEvent& (0+255),f,c
   900  0003AE  D7FC               	goto	u1177
   901  0003B0  4A2D               	infsnz	butnEvent@c_507,f,c
   902  0003B2  2A2E               	incf	butnEvent@c_507+1,f,c
   903  0003B4  BE2E               	btfsc	butnEvent@c_507+1,7,c
   904  0003B6  D7F5               	goto	l1546
   905  0003B8  502E               	movf	butnEvent@c_507+1,w,c
   906  0003BA  E101               	bnz	u920
   907  0003BC  D7EE               	goto	L3
   908  0003BE                     u920:
   909  0003BE                     l83:
   910                           
   911                           ;main.c: 100: if (PORTAbits.RA1 == 0)
   912  0003BE  B280               	btfsc	3968,1,c	;volatile
   913  0003C0  D005               	goto	l1556
   914                           
   915                           ;main.c: 101: {
   916                           ;main.c: 102: return 2;
   917  0003C2  0E00               	movlw	0
   918  0003C4  6E29               	movwf	?_butnEvent+1,c
   919  0003C6  0E02               	movlw	2
   920  0003C8  6E28               	movwf	?_butnEvent,c
   921  0003CA  0012               	return	
   922  0003CC                     l1556:
   923                           
   924                           ;main.c: 104: return 0;
   925  0003CC  0E00               	movlw	0
   926  0003CE  6E29               	movwf	?_butnEvent+1,c
   927  0003D0  0E00               	movlw	0
   928  0003D2  6E28               	movwf	?_butnEvent,c
   929  0003D4  0012               	return	
   930  0003D6                     l81:
   931                           
   932                           ;main.c: 105: }
   933                           ;main.c: 106: }
   934                           ;main.c: 108: if (PORTBbits.RB0 == 0)
   935  0003D6  B081               	btfsc	3969,0,c	;volatile
   936  0003D8  D026               	goto	l86
   937                           
   938                           ;main.c: 109: {
   939                           ;main.c: 110: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   940  0003DA  0E00               	movlw	0
   941  0003DC  6E30               	movwf	butnEvent@c_516+1,c
   942  0003DE  0E00               	movlw	0
   943  0003E0  6E2F               	movwf	butnEvent@c_516,c
   944  0003E2  BE30               	btfsc	butnEvent@c_516+1,7,c
   945  0003E4  D006               	goto	l1566
   946  0003E6  5030               	movf	butnEvent@c_516+1,w,c
   947  0003E8  E112               	bnz	l88
   948  0003EA  0E0B               	movlw	11
   949  0003EC  5C2F               	subwf	butnEvent@c_516,w,c
   950  0003EE  B0D8               	btfsc	status,0,c
   951  0003F0  D00E               	goto	l88
   952  0003F2                     l1566:
   953  0003F2  0E0D               	movlw	13
   954  0003F4  6E2A               	movwf	??_butnEvent& (0+255),c
   955  0003F6  0EFC               	movlw	252
   956  0003F8                     u1187:
   957  0003F8  2EE8               	decfsz	wreg,f,c
   958  0003FA  D7FE               	goto	u1187
   959  0003FC  2E2A               	decfsz	??_butnEvent& (0+255),f,c
   960  0003FE  D7FC               	goto	u1187
   961  000400  4A2F               	infsnz	butnEvent@c_516,f,c
   962  000402  2A30               	incf	butnEvent@c_516+1,f,c
   963  000404  BE30               	btfsc	butnEvent@c_516+1,7,c
   964  000406  D7F5               	goto	l1566
   965  000408  5030               	movf	butnEvent@c_516+1,w,c
   966  00040A  E101               	bnz	u960
   967  00040C  D7EE               	goto	L4
   968  00040E                     u960:
   969  00040E                     l88:
   970                           
   971                           ;main.c: 111: if (PORTBbits.RB0 == 0)
   972  00040E  B081               	btfsc	3969,0,c	;volatile
   973  000410  D005               	goto	l1576
   974                           
   975                           ;main.c: 112: {
   976                           ;main.c: 113: return 3;
   977  000412  0E00               	movlw	0
   978  000414  6E29               	movwf	?_butnEvent+1,c
   979  000416  0E03               	movlw	3
   980  000418  6E28               	movwf	?_butnEvent,c
   981  00041A  0012               	return	
   982  00041C                     l1576:
   983                           
   984                           ;main.c: 115: return 0;
   985  00041C  0E00               	movlw	0
   986  00041E  6E29               	movwf	?_butnEvent+1,c
   987  000420  0E00               	movlw	0
   988  000422  6E28               	movwf	?_butnEvent,c
   989  000424  0012               	return	
   990  000426                     l86:
   991                           
   992                           ;main.c: 116: }
   993                           ;main.c: 117: }
   994                           ;main.c: 119: if (PORTBbits.RB5 == 0)
   995  000426  BA81               	btfsc	3969,5,c	;volatile
   996  000428  D026               	goto	l91
   997                           
   998                           ;main.c: 120: {
   999                           ;main.c: 121: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1000  00042A  0E00               	movlw	0
  1001  00042C  6E32               	movwf	butnEvent@c_517+1,c
  1002  00042E  0E00               	movlw	0
  1003  000430  6E31               	movwf	butnEvent@c_517,c
  1004  000432  BE32               	btfsc	butnEvent@c_517+1,7,c
  1005  000434  D006               	goto	l1586
  1006  000436  5032               	movf	butnEvent@c_517+1,w,c
  1007  000438  E112               	bnz	l93
  1008  00043A  0E0B               	movlw	11
  1009  00043C  5C31               	subwf	butnEvent@c_517,w,c
  1010  00043E  B0D8               	btfsc	status,0,c
  1011  000440  D00E               	goto	l93
  1012  000442                     l1586:
  1013  000442  0E0D               	movlw	13
  1014  000444  6E2A               	movwf	??_butnEvent& (0+255),c
  1015  000446  0EFC               	movlw	252
  1016  000448                     u1197:
  1017  000448  2EE8               	decfsz	wreg,f,c
  1018  00044A  D7FE               	goto	u1197
  1019  00044C  2E2A               	decfsz	??_butnEvent& (0+255),f,c
  1020  00044E  D7FC               	goto	u1197
  1021  000450  4A31               	infsnz	butnEvent@c_517,f,c
  1022  000452  2A32               	incf	butnEvent@c_517+1,f,c
  1023  000454  BE32               	btfsc	butnEvent@c_517+1,7,c
  1024  000456  D7F5               	goto	l1586
  1025  000458  5032               	movf	butnEvent@c_517+1,w,c
  1026  00045A  E101               	bnz	u1000
  1027  00045C  D7EE               	goto	L5
  1028  00045E                     u1000:
  1029  00045E                     l93:
  1030                           
  1031                           ;main.c: 122: if (PORTBbits.RB5 == 0)
  1032  00045E  BA81               	btfsc	3969,5,c	;volatile
  1033  000460  D005               	goto	l1596
  1034                           
  1035                           ;main.c: 123: {
  1036                           ;main.c: 124: return 4;
  1037  000462  0E00               	movlw	0
  1038  000464  6E29               	movwf	?_butnEvent+1,c
  1039  000466  0E04               	movlw	4
  1040  000468  6E28               	movwf	?_butnEvent,c
  1041  00046A  0012               	return	
  1042  00046C                     l1596:
  1043                           
  1044                           ;main.c: 126: return 0;
  1045  00046C  0E00               	movlw	0
  1046  00046E  6E29               	movwf	?_butnEvent+1,c
  1047  000470  0E00               	movlw	0
  1048  000472  6E28               	movwf	?_butnEvent,c
  1049  000474  0012               	return	
  1050  000476                     l91:
  1051                           
  1052                           ;main.c: 127: }
  1053                           ;main.c: 128: }
  1054                           ;main.c: 130: if (PORTGbits.RG0 == 0)
  1055  000476  B086               	btfsc	3974,0,c	;volatile
  1056  000478  0012               	return	
  1057                           
  1058                           ;main.c: 131: {
  1059                           ;main.c: 132: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1060  00047A  0E00               	movlw	0
  1061  00047C  6E34               	movwf	butnEvent@c_524+1,c
  1062  00047E  0E00               	movlw	0
  1063  000480  6E33               	movwf	butnEvent@c_524,c
  1064  000482  BE34               	btfsc	butnEvent@c_524+1,7,c
  1065  000484  D006               	goto	l1606
  1066  000486  5034               	movf	butnEvent@c_524+1,w,c
  1067  000488  E112               	bnz	l98
  1068  00048A  0E0B               	movlw	11
  1069  00048C  5C33               	subwf	butnEvent@c_524,w,c
  1070  00048E  B0D8               	btfsc	status,0,c
  1071  000490  D00E               	goto	l98
  1072  000492                     l1606:
  1073  000492  0E0D               	movlw	13
  1074  000494  6E2A               	movwf	??_butnEvent& (0+255),c
  1075  000496  0EFC               	movlw	252
  1076  000498                     u1207:
  1077  000498  2EE8               	decfsz	wreg,f,c
  1078  00049A  D7FE               	goto	u1207
  1079  00049C  2E2A               	decfsz	??_butnEvent& (0+255),f,c
  1080  00049E  D7FC               	goto	u1207
  1081  0004A0  4A33               	infsnz	butnEvent@c_524,f,c
  1082  0004A2  2A34               	incf	butnEvent@c_524+1,f,c
  1083  0004A4  BE34               	btfsc	butnEvent@c_524+1,7,c
  1084  0004A6  D7F5               	goto	l1606
  1085  0004A8  5034               	movf	butnEvent@c_524+1,w,c
  1086  0004AA  E101               	bnz	u1040
  1087  0004AC  D7EE               	goto	L6
  1088  0004AE                     u1040:
  1089  0004AE                     l98:
  1090                           
  1091                           ;main.c: 133: if (PORTGbits.RG0 == 0)
  1092  0004AE  B086               	btfsc	3974,0,c	;volatile
  1093  0004B0  D005               	goto	l1616
  1094                           
  1095                           ;main.c: 134: {
  1096                           ;main.c: 135: return 5;
  1097  0004B2  0E00               	movlw	0
  1098  0004B4  6E29               	movwf	?_butnEvent+1,c
  1099  0004B6  0E05               	movlw	5
  1100  0004B8  6E28               	movwf	?_butnEvent,c
  1101                           
  1102                           ;main.c: 136: } else {
  1103  0004BA  0012               	return	
  1104  0004BC                     l1616:
  1105                           
  1106                           ;main.c: 137: return 0;
  1107  0004BC  0E00               	movlw	0
  1108  0004BE  6E29               	movwf	?_butnEvent+1,c
  1109  0004C0  0E00               	movlw	0
  1110  0004C2  6E28               	movwf	?_butnEvent,c
  1111  0004C4  0012               	return	
  1112  0004C6                     __end_of_butnEvent:
  1113                           	opt stack 0
  1114                           tblptru	equ	0xFF8
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _delay_10ms *****************
  1120 ;; Defined at:
  1121 ;;		line 562 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  n               2    0[COMRAM] unsigned int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1135 ;;      Params:         2       0       0       0
  1136 ;;      Locals:         0       0       0       0
  1137 ;;      Temps:          1       0       0       0
  1138 ;;      Totals:         3       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_butnEvent
  1145 ;;		_nextChannel
  1146 ;;		_previousChannel
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text6
  1151  000928                     __ptext6:
  1152                           	opt stack 0
  1153  000928                     _delay_10ms:
  1154                           	opt stack 29
  1155                           
  1156                           ;main.c: 563: while (n-- != 0) {
  1157                           
  1158                           ;incstack = 0
  1159  000928  D007               	goto	l1476
  1160  00092A                     l1474:
  1161                           
  1162                           ;main.c: 564: _delay((unsigned long)((12)*(8000000/4000.0)));
  1163  00092A  0E20               	movlw	32
  1164  00092C  6E27               	movwf	??_delay_10ms& (0+255),c
  1165  00092E  0E2A               	movlw	42
  1166  000930                     u1217:
  1167  000930  2EE8               	decfsz	wreg,f,c
  1168  000932  D7FE               	goto	u1217
  1169  000934  2E27               	decfsz	??_delay_10ms& (0+255),f,c
  1170  000936  D7FC               	goto	u1217
  1171  000938                     l1476:
  1172  000938  0625               	decf	delay_10ms@n,f,c
  1173  00093A  A0D8               	btfss	status,0,c
  1174  00093C  0626               	decf	delay_10ms@n+1,f,c
  1175  00093E  2825               	incf	delay_10ms@n,w,c
  1176  000940  E1F4               	bnz	l1474
  1177  000942  2826               	incf	delay_10ms@n+1,w,c
  1178  000944  B4D8               	btfsc	status,2,c
  1179  000946  0012               	return	
  1180  000948  D7F0               	goto	l1474
  1181  00094A                     __end_of_delay_10ms:
  1182                           	opt stack 0
  1183                           tblptru	equ	0xFF8
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _VolumeUp *****************
  1189 ;; Defined at:
  1190 ;;		line 475 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  down            1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  down            1    0[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      unsigned char 
  1197 ;; Registers used:
  1198 ;;		wreg
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1204 ;;      Params:         0       0       0       0
  1205 ;;      Locals:         0       0       0       0
  1206 ;;      Temps:          0       0       0       0
  1207 ;;      Totals:         0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text7
  1218  0009FA                     __ptext7:
  1219                           	opt stack 0
  1220  0009FA                     _VolumeUp:
  1221                           	opt stack 30
  1222                           
  1223                           ;main.c: 478: return 0;
  1224                           ;	Return value of _VolumeUp is never used
  1225                           
  1226                           ;incstack = 0
  1227  0009FA  0012               	return		;funcret
  1228  0009FC                     __end_of_VolumeUp:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _VolumeDown *****************
  1236 ;; Defined at:
  1237 ;;		line 481 in file "main.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  down            1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  down            1    0[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      unsigned char 
  1244 ;; Registers used:
  1245 ;;		wreg
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1251 ;;      Params:         0       0       0       0
  1252 ;;      Locals:         0       0       0       0
  1253 ;;      Temps:          0       0       0       0
  1254 ;;      Totals:         0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text8
  1265  0009FC                     __ptext8:
  1266                           	opt stack 0
  1267  0009FC                     _VolumeDown:
  1268                           	opt stack 30
  1269                           
  1270                           ;main.c: 484: return 0;
  1271                           ;	Return value of _VolumeDown is never used
  1272                           
  1273                           ;incstack = 0
  1274  0009FC  0012               	return		;funcret
  1275  0009FE                     __end_of_VolumeDown:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _MuteHard *****************
  1283 ;; Defined at:
  1284 ;;		line 487 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  down            1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  down            1    0[COMRAM] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1298 ;;      Params:         0       0       0       0
  1299 ;;      Locals:         0       0       0       0
  1300 ;;      Temps:          0       0       0       0
  1301 ;;      Totals:         0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text9
  1312  0009FE                     __ptext9:
  1313                           	opt stack 0
  1314  0009FE                     _MuteHard:
  1315                           	opt stack 30
  1316                           
  1317                           ;main.c: 490: return 0;
  1318                           ;	Return value of _MuteHard is never used
  1319                           
  1320                           ;incstack = 0
  1321  0009FE  0012               	return		;funcret
  1322  000A00                     __end_of_MuteHard:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function _Init *****************
  1330 ;; Defined at:
  1331 ;;		line 177 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  i               2    0        int 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1345 ;;      Params:         0       0       0       0
  1346 ;;      Locals:         0       0       0       0
  1347 ;;      Temps:          0       0       0       0
  1348 ;;      Totals:         0       0       0       0
  1349 ;;Total ram usage:        0 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    1
  1352 ;; This function calls:
  1353 ;;		_OpenI2C
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text10
  1360  0007F2                     __ptext10:
  1361                           	opt stack 0
  1362  0007F2                     _Init:
  1363                           	opt stack 29
  1364                           
  1365                           ;main.c: 179: int i;
  1366                           ;main.c: 181: OSCCON = 0b01110010;
  1367                           
  1368                           ;incstack = 0
  1369  0007F2  0E72               	movlw	114
  1370  0007F4  6ED3               	movwf	4051,c	;volatile
  1371                           
  1372                           ;main.c: 182: LCDSE0 = 0b11111111;
  1373  0007F6  010F               	movlb	15	; () banked
  1374  0007F8  695A               	setf	90,b	;volatile
  1375                           
  1376                           ; BSR set to: 15
  1377                           ;main.c: 183: LCDSE1 = 0b11111111;
  1378  0007FA  010F               	movlb	15	; () banked
  1379  0007FC  695B               	setf	91,b	;volatile
  1380                           
  1381                           ; BSR set to: 15
  1382                           ;main.c: 184: LCDSE2 = 0b11111111;
  1383  0007FE  010F               	movlb	15	; () banked
  1384  000800  695C               	setf	92,b	;volatile
  1385                           
  1386                           ;main.c: 185: LCDSE3 = 0b00000000;
  1387  000802  0E00               	movlw	0
  1388  000804  010F               	movlb	15	; () banked
  1389  000806  6F5D               	movwf	93,b	;volatile
  1390                           
  1391                           ;main.c: 186: LCDCON = 0b10001000;
  1392  000808  0E88               	movlw	136
  1393  00080A  010F               	movlb	15	; () banked
  1394  00080C  6F59               	movwf	89,b	;volatile
  1395                           
  1396                           ;main.c: 187: LCDPS = 0b00110110;
  1397  00080E  0E36               	movlw	54
  1398  000810  010F               	movlb	15	; () banked
  1399  000812  6F58               	movwf	88,b	;volatile
  1400                           
  1401                           ;main.c: 188: ADCON1 = 0b00111111;
  1402  000814  0E3F               	movlw	63
  1403  000816  6EC1               	movwf	4033,c	;volatile
  1404                           
  1405                           ;main.c: 189: TRISA = 0b00000011;
  1406  000818  0E03               	movlw	3
  1407  00081A  6E92               	movwf	3986,c	;volatile
  1408                           
  1409                           ;main.c: 190: TRISB = 0b00100001;
  1410  00081C  0E21               	movlw	33
  1411  00081E  6E93               	movwf	3987,c	;volatile
  1412                           
  1413                           ;main.c: 191: TRISC = 0b00011000;
  1414  000820  0E18               	movlw	24
  1415  000822  6E94               	movwf	3988,c	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;main.c: 192: TRISG = 0b11111111;
  1419  000824  6898               	setf	3992,c	;volatile
  1420                           
  1421                           ;main.c: 193: PORTA = 0;
  1422  000826  0E00               	movlw	0
  1423  000828  6E80               	movwf	3968,c	;volatile
  1424                           
  1425                           ;main.c: 194: PORTB = 0;
  1426  00082A  0E00               	movlw	0
  1427  00082C  6E81               	movwf	3969,c	;volatile
  1428                           
  1429                           ;main.c: 195: PORTC = 0;
  1430  00082E  0E00               	movlw	0
  1431  000830  6E82               	movwf	3970,c	;volatile
  1432                           
  1433                           ; BSR set to: 15
  1434                           ;main.c: 196: INTCONbits.TMR0IF = 0;
  1435  000832  94F2               	bcf	intcon,2,c	;volatile
  1436                           
  1437                           ;main.c: 198: T0CON = 0b00001000;
  1438  000834  0E08               	movlw	8
  1439  000836  6ED5               	movwf	4053,c	;volatile
  1440                           
  1441                           ;main.c: 199: TMR0H = 0;
  1442  000838  0E00               	movlw	0
  1443  00083A  6ED7               	movwf	4055,c	;volatile
  1444                           
  1445                           ;main.c: 200: TMR0L = 0;
  1446  00083C  0E00               	movlw	0
  1447  00083E  6ED6               	movwf	4054,c	;volatile
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;main.c: 201: T0CONbits.TMR0ON = 1;
  1451  000840  8ED5               	bsf	4053,7,c	;volatile
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;main.c: 202: OpenI2C(0b00001000, 0b10000000);
  1455  000842  0E80               	movlw	128
  1456  000844  6E25               	movwf	OpenI2C@slew,c
  1457  000846  0E08               	movlw	8
  1458  000848  ECC3  F004         	call	_OpenI2C
  1459                           
  1460                           ;main.c: 203: SSPADD = 0x3F;
  1461  00084C  0E3F               	movlw	63
  1462  00084E  6EC8               	movwf	4040,c	;volatile
  1463  000850  0012               	return	
  1464  000852                     __end_of_Init:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _OpenI2C *****************
  1473 ;; Defined at:
  1474 ;;		line 14 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_open.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  sync_mode       1    wreg     unsigned char 
  1477 ;;  slew            1    0[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1489 ;;      Params:         1       0       0       0
  1490 ;;      Locals:         1       0       0       0
  1491 ;;      Temps:          0       0       0       0
  1492 ;;      Totals:         2       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_Init
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text11
  1503  000986                     __ptext11:
  1504                           	opt stack 0
  1505  000986                     _OpenI2C:
  1506                           	opt stack 29
  1507                           
  1508                           ;incstack = 0
  1509                           ;OpenI2C@sync_mode stored from wreg
  1510  000986  6E26               	movwf	OpenI2C@sync_mode,c
  1511  000988  0E3F               	movlw	63
  1512  00098A  16C7               	andwf	4039,f,c	;volatile
  1513  00098C  0E00               	movlw	0
  1514  00098E  6EC6               	movwf	4038,c	;volatile
  1515  000990  0E00               	movlw	0
  1516  000992  6EC5               	movwf	4037,c	;volatile
  1517  000994  5026               	movf	OpenI2C@sync_mode,w,c
  1518  000996  12C6               	iorwf	4038,f,c	;volatile
  1519  000998  5025               	movf	OpenI2C@slew,w,c
  1520  00099A  12C7               	iorwf	4039,f,c	;volatile
  1521  00099C  8694               	bsf	3988,3,c	;volatile
  1522  00099E  8894               	bsf	3988,4,c	;volatile
  1523  0009A0  8AC6               	bsf	4038,5,c	;volatile
  1524  0009A2  0012               	return		;funcret
  1525  0009A4                     __end_of_OpenI2C:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           intcon	equ	0xFF2
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _FMvers *****************
  1534 ;; Defined at:
  1535 ;;		line 423 in file "main.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  1538 ;;		 -> main@ui(2), 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1550 ;;      Params:         2       0       0       0
  1551 ;;      Locals:         0       0       0       0
  1552 ;;      Temps:          0       0       0       0
  1553 ;;      Totals:         2       0       0       0
  1554 ;;Total ram usage:        2 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    3
  1557 ;; This function calls:
  1558 ;;		_FMread
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text12
  1565  0009E8                     __ptext12:
  1566                           	opt stack 0
  1567  0009E8                     _FMvers:
  1568                           	opt stack 27
  1569                           
  1570                           ;main.c: 424: if (FMread(0x1C, vsn) != 0) return 1;
  1571                           
  1572                           ;incstack = 0
  1573  0009E8  C030  F027         	movff	FMvers@vsn,FMread@data
  1574  0009EC  C031  F028         	movff	FMvers@vsn+1,FMread@data+1
  1575  0009F0  0E1C               	movlw	28
  1576  0009F2  EC63  F002         	call	_FMread
  1577                           
  1578                           ;	Return value of _FMvers is never used
  1579  0009F6  0012               	return	
  1580  0009F8                     __end_of_FMvers:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           intcon	equ	0xFF2
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           status	equ	0xFD8
  1587                           
  1588 ;; *************** function _FMinit *****************
  1589 ;; Defined at:
  1590 ;;		line 355 in file "main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  dat             2   17[COMRAM] unsigned int 
  1595 ;;  ad              1   19[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      unsigned char 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1605 ;;      Params:         0       0       0       0
  1606 ;;      Locals:         3       0       0       0
  1607 ;;      Temps:          0       0       0       0
  1608 ;;      Totals:         3       0       0       0
  1609 ;;Total ram usage:        3 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    4
  1612 ;; This function calls:
  1613 ;;		_FMready
  1614 ;;		_FMwrite
  1615 ;;		_dly
  1616 ;;		_showFreq
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text13
  1623  000590                     __ptext13:
  1624                           	opt stack 0
  1625  000590                     _FMinit:
  1626                           	opt stack 26
  1627                           
  1628                           ;main.c: 357: unsigned char ad;
  1629                           ;main.c: 358: unsigned int dat;
  1630                           ;main.c: 361: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  1631                           
  1632                           ;incstack = 0
  1633  000590  0E00               	movlw	0
  1634  000592  6E38               	movwf	FMinit@ad,c
  1635  000594                     l1642:
  1636  000594  0E11               	movlw	17
  1637  000596  6438               	cpfsgt	FMinit@ad,c
  1638  000598  D001               	goto	l1646
  1639  00059A  D018               	goto	l160
  1640  00059C                     l1646:
  1641  00059C  5038               	movf	FMinit@ad,w,c
  1642  00059E  0D02               	mullw	2
  1643  0005A0  0E01               	movlw	low _regDflt
  1644  0005A2  24F3               	addwf	prodl,w,c
  1645  0005A4  6EF6               	movwf	tblptrl,c
  1646  0005A6  0E03               	movlw	high _regDflt
  1647  0005A8  20F4               	addwfc	prodh,w,c
  1648  0005AA  6EF7               	movwf	tblptrh,c
  1649  0005AC                     	if	0	;There are less than 3 active tblptr bytes
  1650  0005AC                     	endif
  1651  0005AC  5038               	movf	FMinit@ad,w,c
  1652  0005AE  0D02               	mullw	2
  1653  0005B0  0E01               	movlw	low _regImg
  1654  0005B2  24F3               	addwf	prodl,w,c
  1655  0005B4  6ED9               	movwf	fsr2l,c
  1656  0005B6  0E00               	movlw	high _regImg
  1657  0005B8  20F4               	addwfc	prodh,w,c
  1658  0005BA  6EDA               	movwf	fsr2h,c
  1659  0005BC  0009               	tblrd		*+
  1660  0005BE  CFF5 FFDE          	movff	tablat,postinc2
  1661  0005C2  0008               	tblrd		*
  1662  0005C4  CFF5 FFDD          	movff	tablat,postdec2
  1663  0005C8  2A38               	incf	FMinit@ad,f,c
  1664  0005CA  D7E4               	goto	l1642
  1665  0005CC                     l160:
  1666                           
  1667                           ;main.c: 363: dat = regImg[0];
  1668  0005CC  C001  F036         	movff	_regImg,FMinit@dat
  1669  0005D0  C002  F037         	movff	_regImg+1,FMinit@dat+1
  1670                           
  1671                           ;main.c: 364: regImg[0] &= ~1;
  1672  0005D4  9001               	bcf	_regImg,0,c
  1673                           
  1674                           ;main.c: 365: if (FMwrite(0) != 0) return 1;
  1675  0005D6  0E00               	movlw	0
  1676  0005D8  EC7F  F003         	call	_FMwrite
  1677  0005DC  0900               	iorlw	0
  1678  0005DE  B4D8               	btfsc	status,2,c
  1679  0005E0  D002               	goto	l1660
  1680  0005E2  0E01               	movlw	1
  1681  0005E4  0012               	return	
  1682  0005E6                     l1660:
  1683                           
  1684                           ;main.c: 366: for (ad = 1; ad < 18; ad++) {
  1685  0005E6  0E01               	movlw	1
  1686  0005E8  6E38               	movwf	FMinit@ad,c
  1687  0005EA                     l1662:
  1688  0005EA  0E11               	movlw	17
  1689  0005EC  6438               	cpfsgt	FMinit@ad,c
  1690  0005EE  D001               	goto	l1666
  1691  0005F0  D00A               	goto	l1676
  1692  0005F2                     l1666:
  1693                           
  1694                           ;main.c: 367: if (FMwrite(ad) != 0)return 1;
  1695  0005F2  5038               	movf	FMinit@ad,w,c
  1696  0005F4  EC7F  F003         	call	_FMwrite
  1697  0005F8  0900               	iorlw	0
  1698  0005FA  B4D8               	btfsc	status,2,c
  1699  0005FC  D002               	goto	l1672
  1700  0005FE  0E01               	movlw	1
  1701  000600  0012               	return	
  1702  000602                     l1672:
  1703  000602  2A38               	incf	FMinit@ad,f,c
  1704  000604  D7F2               	goto	l1662
  1705  000606                     l1676:
  1706                           
  1707                           ;main.c: 368: }
  1708                           ;main.c: 370: regImg[0] = dat | 1;
  1709  000606  0E01               	movlw	1
  1710  000608  1036               	iorwf	FMinit@dat,w,c
  1711  00060A  6E01               	movwf	_regImg,c
  1712  00060C  5037               	movf	FMinit@dat+1,w,c
  1713  00060E  6E02               	movwf	_regImg+1,c
  1714                           
  1715                           ;main.c: 371: if (FMwrite(0) != 0) return 1;
  1716  000610  0E00               	movlw	0
  1717  000612  EC7F  F003         	call	_FMwrite
  1718  000616  0900               	iorlw	0
  1719  000618  B4D8               	btfsc	status,2,c
  1720  00061A  D002               	goto	l1684
  1721  00061C  0E01               	movlw	1
  1722  00061E  0012               	return	
  1723  000620                     l1684:
  1724                           
  1725                           ;main.c: 372: dly(20);
  1726  000620  0E00               	movlw	0
  1727  000622  6E26               	movwf	dly@d+1,c
  1728  000624  0E14               	movlw	20
  1729  000626  6E25               	movwf	dly@d,c
  1730  000628  EC7B  F004         	call	_dly	;wreg free
  1731                           
  1732                           ;main.c: 373: while (FMready(&dat), !dat) dly(2);
  1733  00062C  D006               	goto	l1688
  1734  00062E                     l1686:
  1735  00062E  0E00               	movlw	0
  1736  000630  6E26               	movwf	dly@d+1,c
  1737  000632  0E02               	movlw	2
  1738  000634  6E25               	movwf	dly@d,c
  1739  000636  EC7B  F004         	call	_dly	;wreg free
  1740  00063A                     l1688:
  1741  00063A  0E36               	movlw	low FMinit@dat
  1742  00063C  6E30               	movwf	FMready@rdy,c
  1743  00063E  0E00               	movlw	high FMinit@dat
  1744  000640  6E31               	movwf	FMready@rdy+1,c
  1745  000642  EC58  F004         	call	_FMready	;wreg free
  1746  000646  5036               	movf	FMinit@dat,w,c
  1747  000648  1037               	iorwf	FMinit@dat+1,w,c
  1748  00064A  B4D8               	btfsc	status,2,c
  1749  00064C  D7F0               	goto	l1686
  1750                           
  1751                           ;main.c: 374: showFreq();
  1752  00064E  EC00  F005         	call	_showFreq	;wreg free
  1753                           
  1754                           ;main.c: 375: return 0;
  1755  000652  0E00               	movlw	0
  1756  000654  0012               	return	
  1757  000656                     __end_of_FMinit:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           postinc2	equ	0xFDE
  1769                           postdec2	equ	0xFDD
  1770                           fsr2h	equ	0xFDA
  1771                           fsr2l	equ	0xFD9
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function _showFreq *****************
  1775 ;; Defined at:
  1776 ;;		line 520 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      unsigned char 
  1783 ;; Registers used:
  1784 ;;		None
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1790 ;;      Params:         0       0       0       0
  1791 ;;      Locals:         0       0       0       0
  1792 ;;      Temps:          0       0       0       0
  1793 ;;      Totals:         0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_FMinit
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text14
  1804  000A00                     __ptext14:
  1805                           	opt stack 0
  1806  000A00                     _showFreq:
  1807                           	opt stack 29
  1808                           
  1809                           ;main.c: 522: ;
  1810                           ;main.c: 523: return 0;
  1811                           ;	Return value of _showFreq is never used
  1812                           
  1813                           ;incstack = 0
  1814  000A00  0012               	return		;funcret
  1815  000A02                     __end_of_showFreq:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           intcon	equ	0xFF2
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postinc2	equ	0xFDE
  1827                           postdec2	equ	0xFDD
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _dly *****************
  1833 ;; Defined at:
  1834 ;;		line 146 in file "main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  d               2    0[COMRAM] int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  i               2    2[COMRAM] int 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1848 ;;      Params:         2       0       0       0
  1849 ;;      Locals:         2       0       0       0
  1850 ;;      Temps:          0       0       0       0
  1851 ;;      Totals:         4       0       0       0
  1852 ;;Total ram usage:        4 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_FMinit
  1858 ;;		_FMfrequenc
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text15
  1864  0008F6                     __ptext15:
  1865                           	opt stack 0
  1866  0008F6                     _dly:
  1867                           	opt stack 28
  1868                           
  1869                           ;main.c: 148: int i = 0;
  1870                           
  1871                           ;incstack = 0
  1872  0008F6  0E00               	movlw	0
  1873  0008F8  6E28               	movwf	dly@i+1,c
  1874  0008FA  0E00               	movlw	0
  1875  0008FC  6E27               	movwf	dly@i,c
  1876                           
  1877                           ;main.c: 150: for (; d; --d)
  1878  0008FE  D00F               	goto	l1456
  1879  000900                     l1448:
  1880                           
  1881                           ;main.c: 151: for (i = 100; i; --i);
  1882  000900  0E00               	movlw	0
  1883  000902  6E28               	movwf	dly@i+1,c
  1884  000904  0E64               	movlw	100
  1885  000906  6E27               	movwf	dly@i,c
  1886  000908  D003               	goto	l1452
  1887  00090A                     l1450:
  1888  00090A  0627               	decf	dly@i,f,c
  1889  00090C  A0D8               	btfss	status,0,c
  1890  00090E  0628               	decf	dly@i+1,f,c
  1891  000910                     l1452:
  1892  000910  5027               	movf	dly@i,w,c
  1893  000912  1028               	iorwf	dly@i+1,w,c
  1894  000914  A4D8               	btfss	status,2,c
  1895  000916  D7F9               	goto	l1450
  1896  000918  0625               	decf	dly@d,f,c
  1897  00091A  A0D8               	btfss	status,0,c
  1898  00091C  0626               	decf	dly@d+1,f,c
  1899  00091E                     l1456:
  1900  00091E  5025               	movf	dly@d,w,c
  1901  000920  1026               	iorwf	dly@d+1,w,c
  1902  000922  B4D8               	btfsc	status,2,c
  1903  000924  0012               	return	
  1904  000926  D7EC               	goto	l1448
  1905  000928                     __end_of_dly:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           postinc2	equ	0xFDE
  1917                           postdec2	equ	0xFDD
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _FMwrite *****************
  1923 ;; Defined at:
  1924 ;;		line 245 in file "main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  adr             1    wreg     unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  adr             1    6[COMRAM] unsigned char 
  1929 ;;  regstr          2    0        unsigned int 
  1930 ;;  secndByt        1    5[COMRAM] unsigned char 
  1931 ;;  firstByt        1    4[COMRAM] unsigned char 
  1932 ;;  rpy             1    0        unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1942 ;;      Params:         0       0       0       0
  1943 ;;      Locals:         3       0       0       0
  1944 ;;      Temps:          2       0       0       0
  1945 ;;      Totals:         5       0       0       0
  1946 ;;Total ram usage:        5 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    2
  1949 ;; This function calls:
  1950 ;;		_IdleI2C
  1951 ;;		_WriteI2C
  1952 ;; This function is called by:
  1953 ;;		_FMinit
  1954 ;;		_FMfrequenc
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text16
  1959  0006FE                     __ptext16:
  1960                           	opt stack 0
  1961  0006FE                     _FMwrite:
  1962                           	opt stack 26
  1963                           
  1964                           ;incstack = 0
  1965                           ;FMwrite@adr stored from wreg
  1966  0006FE  6E2B               	movwf	FMwrite@adr,c
  1967                           
  1968                           ;main.c: 247: unsigned int regstr;
  1969                           ;main.c: 248: unsigned char firstByt;
  1970                           ;main.c: 249: unsigned char secndByt;
  1971                           ;main.c: 250: unsigned char rpy;
  1972                           ;main.c: 252: firstByt = regImg[adr] >> 8;
  1973  000700  502B               	movf	FMwrite@adr,w,c
  1974  000702  0D02               	mullw	2
  1975  000704  0E01               	movlw	low _regImg
  1976  000706  24F3               	addwf	prodl,w,c
  1977  000708  6ED9               	movwf	fsr2l,c
  1978  00070A  0E00               	movlw	high _regImg
  1979  00070C  20F4               	addwfc	prodh,w,c
  1980  00070E  6EDA               	movwf	fsr2h,c
  1981  000710  CFDE F027          	movff	postinc2,??_FMwrite
  1982  000714  CFDD F028          	movff	postdec2,??_FMwrite+1
  1983  000718  C028  F027         	movff	??_FMwrite+1,??_FMwrite
  1984  00071C  6A28               	clrf	??_FMwrite+1,c
  1985  00071E  5027               	movf	??_FMwrite,w,c
  1986  000720  6E29               	movwf	FMwrite@firstByt,c
  1987                           
  1988                           ;main.c: 253: secndByt = regImg[adr];
  1989  000722  502B               	movf	FMwrite@adr,w,c
  1990  000724  0D02               	mullw	2
  1991  000726  0E01               	movlw	low _regImg
  1992  000728  24F3               	addwf	prodl,w,c
  1993  00072A  6ED9               	movwf	fsr2l,c
  1994  00072C  0E00               	movlw	high _regImg
  1995  00072E  20F4               	addwfc	prodh,w,c
  1996  000730  6EDA               	movwf	fsr2h,c
  1997  000732  50DF               	movf	indf2,w,c
  1998  000734  6E2A               	movwf	FMwrite@secndByt,c
  1999                           
  2000                           ;main.c: 255: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2001  000736  80C5               	bsf	4037,0,c	;volatile
  2002  000738                     l126:
  2003  000738  B0C5               	btfsc	4037,0,c	;volatile
  2004  00073A  D7FE               	goto	l126
  2005                           
  2006                           ;main.c: 256: IdleI2C();
  2007  00073C  ECEB  F004         	call	_IdleI2C	;wreg free
  2008                           
  2009                           ;main.c: 259: if (WriteI2C(0x20)) return 1;
  2010  000740  0E20               	movlw	32
  2011  000742  EC29  F004         	call	_WriteI2C
  2012  000746  0900               	iorlw	0
  2013  000748  B4D8               	btfsc	status,2,c
  2014  00074A  D002               	goto	l1038
  2015  00074C  0E01               	movlw	1
  2016  00074E  0012               	return	
  2017  000750                     l1038:
  2018                           
  2019                           ;main.c: 260: IdleI2C();
  2020  000750  ECEB  F004         	call	_IdleI2C	;wreg free
  2021                           
  2022                           ;main.c: 261: WriteI2C(adr);
  2023  000754  502B               	movf	FMwrite@adr,w,c
  2024  000756  EC29  F004         	call	_WriteI2C
  2025                           
  2026                           ;main.c: 262: IdleI2C();
  2027  00075A  ECEB  F004         	call	_IdleI2C	;wreg free
  2028                           
  2029                           ;main.c: 263: WriteI2C(firstByt);
  2030  00075E  5029               	movf	FMwrite@firstByt,w,c
  2031  000760  EC29  F004         	call	_WriteI2C
  2032                           
  2033                           ;main.c: 264: IdleI2C();
  2034  000764  ECEB  F004         	call	_IdleI2C	;wreg free
  2035                           
  2036                           ;main.c: 265: WriteI2C(secndByt);
  2037  000768  502A               	movf	FMwrite@secndByt,w,c
  2038  00076A  EC29  F004         	call	_WriteI2C
  2039                           
  2040                           ;main.c: 266: IdleI2C();
  2041  00076E  ECEB  F004         	call	_IdleI2C	;wreg free
  2042                           
  2043                           ;main.c: 267: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2044  000772  84C5               	bsf	4037,2,c	;volatile
  2045  000774                     l131:
  2046  000774  B4C5               	btfsc	4037,2,c	;volatile
  2047  000776  D7FE               	goto	l131
  2048                           
  2049                           ;main.c: 268: IdleI2C();
  2050  000778  ECEB  F004         	call	_IdleI2C	;wreg free
  2051                           
  2052                           ;main.c: 269: return 0;
  2053  00077C  0E00               	movlw	0
  2054  00077E  0012               	return	
  2055  000780                     __end_of_FMwrite:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           indf2	equ	0xFDF
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _FMready *****************
  2074 ;; Defined at:
  2075 ;;		line 335 in file "main.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  2078 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  sts             2   15[COMRAM] unsigned int 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2090 ;;      Params:         2       0       0       0
  2091 ;;      Locals:         2       0       0       0
  2092 ;;      Temps:          2       0       0       0
  2093 ;;      Totals:         6       0       0       0
  2094 ;;Total ram usage:        6 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    3
  2097 ;; This function calls:
  2098 ;;		_FMread
  2099 ;; This function is called by:
  2100 ;;		_FMinit
  2101 ;;		_FMfrequenc
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text17
  2106  0008B0                     __ptext17:
  2107                           	opt stack 0
  2108  0008B0                     _FMready:
  2109                           	opt stack 25
  2110                           
  2111                           ;main.c: 337: unsigned int sts;
  2112                           ;main.c: 339: if (FMread(0x13, &sts) != 0) return 1;
  2113                           
  2114                           ;incstack = 0
  2115  0008B0  0E34               	movlw	low FMready@sts
  2116  0008B2  6E27               	movwf	FMread@data,c
  2117  0008B4  0E00               	movlw	high FMready@sts
  2118  0008B6  6E28               	movwf	FMread@data+1,c
  2119  0008B8  0E13               	movlw	19
  2120  0008BA  EC63  F002         	call	_FMread
  2121  0008BE  0900               	iorlw	0
  2122  0008C0  B4D8               	btfsc	status,2,c
  2123  0008C2  D002               	goto	l1464
  2124  0008C4  0E01               	movlw	1
  2125  0008C6  0012               	return	
  2126  0008C8                     l1464:
  2127                           
  2128                           ;main.c: 340: sts &= 0x0020;
  2129  0008C8  0E20               	movlw	32
  2130  0008CA  1634               	andwf	FMready@sts,f,c
  2131  0008CC  0E00               	movlw	0
  2132  0008CE  1635               	andwf	FMready@sts+1,f,c
  2133                           
  2134                           ;main.c: 341: *rdy = sts ? 1 : 0;
  2135  0008D0  5034               	movf	FMready@sts,w,c
  2136  0008D2  1035               	iorwf	FMready@sts+1,w,c
  2137  0008D4  B4D8               	btfsc	status,2,c
  2138  0008D6  D002               	goto	u790
  2139  0008D8  0E01               	movlw	1
  2140  0008DA  D001               	goto	u800
  2141  0008DC                     u790:
  2142  0008DC  0E00               	movlw	0
  2143  0008DE                     u800:
  2144  0008DE  6E32               	movwf	??_FMready& (0+255),c
  2145  0008E0  6A33               	clrf	(??_FMready+1)& (0+255),c
  2146  0008E2  C030  FFD9         	movff	FMready@rdy,fsr2l
  2147  0008E6  C031  FFDA         	movff	FMready@rdy+1,fsr2h
  2148  0008EA  C032  FFDE         	movff	??_FMready,postinc2
  2149  0008EE  C033  FFDD         	movff	??_FMready+1,postdec2
  2150                           
  2151                           ;main.c: 342: return 0;
  2152  0008F2  0E00               	movlw	0
  2153  0008F4  0012               	return	
  2154  0008F6                     __end_of_FMready:
  2155                           	opt stack 0
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           prodh	equ	0xFF4
  2161                           prodl	equ	0xFF3
  2162                           intcon	equ	0xFF2
  2163                           postinc0	equ	0xFEE
  2164                           wreg	equ	0xFE8
  2165                           indf2	equ	0xFDF
  2166                           postinc2	equ	0xFDE
  2167                           postdec2	equ	0xFDD
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _FMread *****************
  2173 ;; Defined at:
  2174 ;;		line 287 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  regAddr         1    wreg     unsigned char 
  2177 ;;  data            2    2[COMRAM] PTR unsigned int 
  2178 ;;		 -> main@ui(2), FMready@sts(2), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  regAddr         1    8[COMRAM] unsigned char 
  2181 ;;  secndByt        1   10[COMRAM] unsigned char 
  2182 ;;  firstByt        1    9[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2192 ;;      Params:         2       0       0       0
  2193 ;;      Locals:         3       0       0       0
  2194 ;;      Temps:          4       0       0       0
  2195 ;;      Totals:         9       0       0       0
  2196 ;;Total ram usage:        9 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		_IdleI2C
  2201 ;;		_ReadI2C
  2202 ;;		_WriteI2C
  2203 ;; This function is called by:
  2204 ;;		_FMready
  2205 ;;		_FMvers
  2206 ;;		_FMid
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text18
  2211  0004C6                     __ptext18:
  2212                           	opt stack 0
  2213  0004C6                     _FMread:
  2214                           	opt stack 25
  2215                           
  2216                           ;incstack = 0
  2217                           ;FMread@regAddr stored from wreg
  2218  0004C6  6E2D               	movwf	FMread@regAddr,c
  2219                           
  2220                           ;main.c: 289: unsigned char firstByt;
  2221                           ;main.c: 290: unsigned char secndByt;
  2222                           ;main.c: 292: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2223  0004C8  80C5               	bsf	4037,0,c	;volatile
  2224  0004CA                     l136:
  2225  0004CA  B0C5               	btfsc	4037,0,c	;volatile
  2226  0004CC  D7FE               	goto	l136
  2227                           
  2228                           ;main.c: 293: IdleI2C();
  2229  0004CE  ECEB  F004         	call	_IdleI2C	;wreg free
  2230                           
  2231                           ;main.c: 296: if (WriteI2C(0x20)) return 1;
  2232  0004D2  0E20               	movlw	32
  2233  0004D4  EC29  F004         	call	_WriteI2C
  2234  0004D8  0900               	iorlw	0
  2235  0004DA  B4D8               	btfsc	status,2,c
  2236  0004DC  D002               	goto	l1414
  2237  0004DE  0E01               	movlw	1
  2238  0004E0  0012               	return	
  2239  0004E2                     l1414:
  2240                           
  2241                           ;main.c: 297: IdleI2C();
  2242  0004E2  ECEB  F004         	call	_IdleI2C	;wreg free
  2243                           
  2244                           ;main.c: 298: WriteI2C(regAddr);
  2245  0004E6  502D               	movf	FMread@regAddr,w,c
  2246  0004E8  EC29  F004         	call	_WriteI2C
  2247                           
  2248                           ;main.c: 299: IdleI2C();
  2249  0004EC  ECEB  F004         	call	_IdleI2C	;wreg free
  2250                           
  2251                           ;main.c: 300: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2252  0004F0  82C5               	bsf	4037,1,c	;volatile
  2253  0004F2                     l141:
  2254  0004F2  B2C5               	btfsc	4037,1,c	;volatile
  2255  0004F4  D7FE               	goto	l141
  2256                           
  2257                           ;main.c: 301: IdleI2C();
  2258  0004F6  ECEB  F004         	call	_IdleI2C	;wreg free
  2259                           
  2260                           ;main.c: 302: WriteI2C(0x20 + 0x01);
  2261  0004FA  0E21               	movlw	33
  2262  0004FC  EC29  F004         	call	_WriteI2C
  2263                           
  2264                           ;main.c: 303: IdleI2C();
  2265  000500  ECEB  F004         	call	_IdleI2C	;wreg free
  2266                           
  2267                           ;main.c: 304: firstByt = ReadI2C();
  2268  000504  ECD2  F004         	call	_ReadI2C	;wreg free
  2269  000508  6E2E               	movwf	FMread@firstByt,c
  2270                           
  2271                           ;main.c: 305: IdleI2C();
  2272  00050A  ECEB  F004         	call	_IdleI2C	;wreg free
  2273                           
  2274                           ;main.c: 306: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2275  00050E  9AC5               	bcf	4037,5,c	;volatile
  2276  000510  88C5               	bsf	4037,4,c	;volatile
  2277  000512                     l144:
  2278  000512  B8C5               	btfsc	4037,4,c	;volatile
  2279  000514  D7FE               	goto	l144
  2280                           
  2281                           ;main.c: 307: IdleI2C();
  2282  000516  ECEB  F004         	call	_IdleI2C	;wreg free
  2283                           
  2284                           ;main.c: 308: secndByt = ReadI2C();
  2285  00051A  ECD2  F004         	call	_ReadI2C	;wreg free
  2286  00051E  6E2F               	movwf	FMread@secndByt,c
  2287                           
  2288                           ;main.c: 309: IdleI2C();
  2289  000520  ECEB  F004         	call	_IdleI2C	;wreg free
  2290                           
  2291                           ;main.c: 310: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2292  000524  8AC5               	bsf	4037,5,c	;volatile
  2293  000526  88C5               	bsf	4037,4,c	;volatile
  2294  000528                     l147:
  2295  000528  B8C5               	btfsc	4037,4,c	;volatile
  2296  00052A  D7FE               	goto	l147
  2297                           
  2298                           ;main.c: 311: IdleI2C();
  2299  00052C  ECEB  F004         	call	_IdleI2C	;wreg free
  2300                           
  2301                           ;main.c: 312: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2302  000530  84C5               	bsf	4037,2,c	;volatile
  2303  000532                     l150:
  2304  000532  B4C5               	btfsc	4037,2,c	;volatile
  2305  000534  D7FE               	goto	l150
  2306                           
  2307                           ;main.c: 313: IdleI2C();
  2308  000536  ECEB  F004         	call	_IdleI2C	;wreg free
  2309                           
  2310                           ;main.c: 314: *data = firstByt;
  2311  00053A  502E               	movf	FMread@firstByt,w,c
  2312  00053C  6E29               	movwf	??_FMread& (0+255),c
  2313  00053E  6A2A               	clrf	(??_FMread+1)& (0+255),c
  2314  000540  C027  FFD9         	movff	FMread@data,fsr2l
  2315  000544  C028  FFDA         	movff	FMread@data+1,fsr2h
  2316  000548  C029  FFDE         	movff	??_FMread,postinc2
  2317  00054C  C02A  FFDD         	movff	??_FMread+1,postdec2
  2318                           
  2319                           ;main.c: 315: *data <<= 8;
  2320  000550  C027  FFD9         	movff	FMread@data,fsr2l
  2321  000554  C028  FFDA         	movff	FMread@data+1,fsr2h
  2322  000558  50DE               	movf	postinc2,w,c
  2323  00055A  6EDD               	movwf	postdec2,c
  2324  00055C  6ADF               	clrf	indf2,c
  2325                           
  2326                           ;main.c: 316: *data = *data | secndByt;
  2327  00055E  C027  FFD9         	movff	FMread@data,fsr2l
  2328  000562  C028  FFDA         	movff	FMread@data+1,fsr2h
  2329  000566  CFDE F029          	movff	postinc2,??_FMread
  2330  00056A  CFDD F02A          	movff	postdec2,??_FMread+1
  2331  00056E  502F               	movf	FMread@secndByt,w,c
  2332  000570  6E2B               	movwf	(??_FMread+2)& (0+255),c
  2333  000572  6A2C               	clrf	(??_FMread+3)& (0+255),c
  2334  000574  5029               	movf	??_FMread,w,c
  2335  000576  122B               	iorwf	??_FMread+2,f,c
  2336  000578  502A               	movf	??_FMread+1,w,c
  2337  00057A  122C               	iorwf	??_FMread+3,f,c
  2338  00057C  C027  FFD9         	movff	FMread@data,fsr2l
  2339  000580  C028  FFDA         	movff	FMread@data+1,fsr2h
  2340  000584  C02B  FFDE         	movff	??_FMread+2,postinc2
  2341  000588  C02C  FFDD         	movff	??_FMread+3,postdec2
  2342                           
  2343                           ;main.c: 318: return 0;
  2344  00058C  0E00               	movlw	0
  2345  00058E  0012               	return	
  2346  000590                     __end_of_FMread:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           prodh	equ	0xFF4
  2353                           prodl	equ	0xFF3
  2354                           intcon	equ	0xFF2
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           indf2	equ	0xFDF
  2358                           postinc2	equ	0xFDE
  2359                           postdec2	equ	0xFDD
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _WriteI2C *****************
  2365 ;; Defined at:
  2366 ;;		line 12 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_writ.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  data_out        1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  data_out        1    1[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      char 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2380 ;;      Params:         0       0       0       0
  2381 ;;      Locals:         1       0       0       0
  2382 ;;      Temps:          0       0       0       0
  2383 ;;      Totals:         1       0       0       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		_IdleI2C
  2389 ;; This function is called by:
  2390 ;;		_FMwrite
  2391 ;;		_FMread
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text19
  2396  000852                     __ptext19:
  2397                           	opt stack 0
  2398  000852                     _WriteI2C:
  2399                           	opt stack 26
  2400                           
  2401                           ;incstack = 0
  2402                           ;WriteI2C@data_out stored from wreg
  2403  000852  6E26               	movwf	WriteI2C@data_out,c
  2404  000854  C026  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2405  000858  AEC6               	btfss	4038,7,c	;volatile
  2406  00085A  D002               	goto	l932
  2407  00085C  0EFF               	movlw	255
  2408  00085E  0012               	return	
  2409  000860                     l932:
  2410  000860  50C6               	movf	4038,w,c	;volatile
  2411  000862  0B0F               	andlw	15
  2412  000864  0A08               	xorlw	8
  2413  000866  B4D8               	btfsc	status,2,c
  2414  000868  D00F               	goto	l950
  2415  00086A  50C6               	movf	4038,w,c	;volatile
  2416  00086C  0B0F               	andlw	15
  2417  00086E  0A0B               	xorlw	11
  2418  000870  B4D8               	btfsc	status,2,c
  2419  000872  D00A               	goto	l950
  2420  000874  88C6               	bsf	4038,4,c	;volatile
  2421  000876                     l289:
  2422  000876  A69E               	btfss	3998,3,c	;volatile
  2423  000878  D7FE               	goto	l289
  2424  00087A  A4C7               	btfss	4039,2,c	;volatile
  2425  00087C  B0C7               	btfsc	4039,0,c	;volatile
  2426  00087E  D002               	goto	l946
  2427  000880  0EFE               	movlw	254
  2428  000882  0012               	return	
  2429  000884                     l946:
  2430  000884  0E00               	movlw	0
  2431  000886  0012               	return	
  2432  000888                     l950:
  2433  000888  50C6               	movf	4038,w,c	;volatile
  2434  00088A  0B0F               	andlw	15
  2435  00088C  0A08               	xorlw	8
  2436  00088E  B4D8               	btfsc	status,2,c
  2437  000890  D005               	goto	l298
  2438  000892  50C6               	movf	4038,w,c	;volatile
  2439  000894  0B0F               	andlw	15
  2440  000896  0A0B               	xorlw	11
  2441  000898  A4D8               	btfss	status,2,c
  2442  00089A  0012               	return	
  2443  00089C                     l298:
  2444  00089C  B0C7               	btfsc	4039,0,c	;volatile
  2445  00089E  D7FE               	goto	l298
  2446  0008A0  ECEB  F004         	call	_IdleI2C	;wreg free
  2447  0008A4  ACC5               	btfss	4037,6,c	;volatile
  2448  0008A6  D002               	goto	l964
  2449  0008A8  0EFE               	movlw	254
  2450  0008AA  0012               	return	
  2451  0008AC                     l964:
  2452  0008AC  0E00               	movlw	0
  2453  0008AE  0012               	return	
  2454  0008B0                     __end_of_WriteI2C:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _IdleI2C *****************
  2473 ;; Defined at:
  2474 ;;		line 24 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_idle.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2488 ;;      Params:         0       0       0       0
  2489 ;;      Locals:         0       0       0       0
  2490 ;;      Temps:          1       0       0       0
  2491 ;;      Totals:         1       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_FMwrite
  2498 ;;		_FMread
  2499 ;;		_WriteI2C
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text20
  2504  0009D6                     __ptext20:
  2505                           	opt stack 0
  2506  0009D6                     _IdleI2C:
  2507                           	opt stack 26
  2508  0009D6                     l918:
  2509  0009D6  CFC5 F025          	movff	4037,??_IdleI2C	;volatile
  2510  0009DA  0E1F               	movlw	31
  2511  0009DC  1625               	andwf	??_IdleI2C,f,c
  2512  0009DE  A4D8               	btfss	status,2,c
  2513  0009E0  D7FA               	goto	l918
  2514  0009E2  A4C7               	btfss	4039,2,c	;volatile
  2515  0009E4  0012               	return	
  2516  0009E6  D7F7               	goto	l918
  2517  0009E8                     __end_of_IdleI2C:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           indf2	equ	0xFDF
  2529                           postinc2	equ	0xFDE
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _ReadI2C *****************
  2536 ;; Defined at:
  2537 ;;		line 11 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_read.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2551 ;;      Params:         0       0       0       0
  2552 ;;      Locals:         0       0       0       0
  2553 ;;      Temps:          0       0       0       0
  2554 ;;      Totals:         0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_FMread
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text21
  2565  0009A4                     __ptext21:
  2566                           	opt stack 0
  2567  0009A4                     _ReadI2C:
  2568                           	opt stack 26
  2569                           
  2570                           ;incstack = 0
  2571  0009A4  50C6               	movf	4038,w,c	;volatile
  2572  0009A6  0B0F               	andlw	15
  2573  0009A8  0A08               	xorlw	8
  2574  0009AA  B4D8               	btfsc	status,2,c
  2575  0009AC  D004               	goto	l264
  2576  0009AE  50C6               	movf	4038,w,c	;volatile
  2577  0009B0  0B0F               	andlw	15
  2578  0009B2  0A0B               	xorlw	11
  2579  0009B4  B4D8               	btfsc	status,2,c
  2580  0009B6                     l264:
  2581  0009B6  86C5               	bsf	4037,3,c	;volatile
  2582  0009B8                     l265:
  2583  0009B8  A0C7               	btfss	4039,0,c	;volatile
  2584  0009BA  D7FE               	goto	l265
  2585  0009BC  50C9               	movf	4041,w,c	;volatile
  2586  0009BE  0012               	return	
  2587  0009C0                     __end_of_ReadI2C:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodh	equ	0xFF4
  2609                           prodl	equ	0xFF3
  2610                           intcon	equ	0xFF2
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf2	equ	0xFDF
  2614                           postinc2	equ	0xFDE
  2615                           postdec2	equ	0xFDD
  2616                           fsr2h	equ	0xFDA
  2617                           fsr2l	equ	0xFD9
  2618                           status	equ	0xFD8
  2619                           
  2620                           	psect	rparam
  2621  0000                     tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           indf2	equ	0xFDF
  2631                           postinc2	equ	0xFDE
  2632                           postdec2	equ	0xFDD
  2633                           fsr2h	equ	0xFDA
  2634                           fsr2l	equ	0xFD9
  2635                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _butnEvent->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5349
                                             27 COMRAM     6     6      0
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    1392
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    1392
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1178
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           13    11      2     444
                                              3 COMRAM    13    11      2
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     214
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     449
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1186
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     304
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2     565
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     363
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _VolumeDown
   _VolumeUp
   _butnEvent
     _delay_10ms
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45       8        0.0%
DATA                 0      0      45      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Feb 17 14:37:31 2017

             __CFG_CP$OFF 000000               _SSPSTATbits 000FC7                        l81 03D6  
                      l91 0476                        l83 03BE                        l75 0386  
                      l93 045E                        l77 035E                        l86 0426  
                      l88 040E                        l98 04AE               __CFG_BORV$3 000000  
                     l131 0774                       l203 09F8                       l141 04F2  
                     l150 0532                       l126 0738                       l144 0512  
                     l136 04CA                       l160 05CC                       l147 0528  
                     l264 09B6                       l265 09B8                       l289 0876  
                     l298 089C                       l932 0860                       l918 09D6  
                     l950 0888                       l946 0884                       l964 08AC  
                     u800 08DE                       u920 03BE                       u790 08DC  
                     u960 040E                       u880 035E                       _dly 08F6  
                     prod 000FF3                       wreg 000FE8              __CFG_WDT$OFF 000000  
                    l1038 0750                      l1414 04E2                      l1520 0342  
                    l1450 090A                      l1452 0910                      l1606 0492  
                    l1464 08C8                      l1448 0900                      l1456 091E  
                    l1616 04BC                      l1536 037C                      l1642 0594  
                    l1474 092A                      l1546 03A2                      l1660 05E6  
                    l1476 0938                      l1556 03CC                      l1740 069C  
                    l1662 05EA                      l1646 059C                      l1566 03F2  
                    l1750 06C0                      l1742 06A2                      l1672 0602  
                    l1576 041C                      l1744 06A8                      l1666 05F2  
                    l1586 0442                      l1746 06B0                      l1754 06C6  
                    l1738 068E                      l1684 0620                      l1676 0606  
                    l1596 046C                      l1748 06B8                      l1686 062E  
                    l1688 063A                      ?_dly 0025                      u1000 045E  
                    u1040 04AE                      u1140 067E                      u1207 0498  
                    u1217 0930                      u1167 0348                      u1177 03A8  
                    u1187 03F8                      u1197 0448                      _Init 07F2  
          VolumeDown@down 0025           __end_of_FMready 08F6                      _main 0656  
                    dly@d 0025                      dly@i 0027                      fsr2h 000FDA  
                    indf2 000FDF                      fsr2l 000FD9           __end_of_FMwrite 0780  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           __CFG_IESO$OFF 000000           __end_of_IdleI2C 09E8             __CFG_MCLRE$ON 000000  
            ___param_bank 000010           __end_of_ReadI2C 09C0           __end_of_OpenI2C 09A4  
                   ??_dly 0027                     ?_Init 0025                     ?_main 0025  
                   _T0CON 000FD5                     _LCDPS 000F58                     _TMR0H 000FD7  
                   _TMR0L 000FD6                     _PORTA 000F80                     _PORTB 000F81  
                   _PORTC 000F82                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISG 000F98             __CFG_PWRT$OFF 000000  
          __CFG_FCMEN$OFF 000000           __end_of_regDflt 0325                     _errfm 09F8  
             ?_FMfrequenc 0036            __CFG_BOREN$OFF 000000                     tablat 000FF5  
                   status 000FD8              ?_nextChannel 0025           __initialization 09C0  
            __end_of_Init 0852              __end_of_main 06FE                    ??_Init 0027  
                  ??_main 0040             __activetblptr 000002          __end_of_MuteHard 0A00  
                  _ADCON1 000FC1                 ??_FMready 0032                    ?_errfm 0025  
        __end_of_WriteI2C 08B0                 ??_FMwrite 0027          __end_of_VolumeUp 09FC  
                  _LCDCON 000F59                    _LCDSE0 000F5A                    _LCDSE1 000F5B  
                  _LCDSE2 000F5C                    _LCDSE3 000F5D               OpenI2C@slew 0025  
               ??_IdleI2C 0025                    _OSCCON 000FD3                    _FMinit 0590  
                  _FMread 04C6                    _SSPADD 000FC8                    _SSPBUF 000FC9  
                  _FMvers 09E8                 ??_ReadI2C 0025                 ??_OpenI2C 0026  
          __CFG_XINST$OFF 000000       __size_of_FMfrequenc 0072                    _regImg 0001  
                  clear_0 09C6                    main@ui 0044          __end_of_showFreq 0A02  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 09CC  
           ___rparam_used 000001                _VolumeDown 09FC              VolumeUp@down 0025  
          __pcstackCOMRAM 0025             __end_of_errfm 09FA           __CFG_OSC$INTIO7 000000  
                 ??_errfm 0025  __size_of_previousChannel 001E        __size_of_butnEvent 01A0  
              _delay_10ms 0928                   ?_FMinit 0025                   ?_FMread 0027  
                 ?_FMvers 0030                 ?_MuteHard 0025      __size_of_nextChannel 001E  
               ?_WriteI2C 0025                 ?_VolumeUp 0025                 FMinit@dat 0036  
                 _FMready 08B0                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
            ??_FMfrequenc 0038                   _SSPSTAT 000FC7                   _FMwrite 06FE  
                 _IdleI2C 09D6           __size_of_FMinit 00C6           __size_of_FMread 00CA  
               FMvers@vsn 0030                   _ReadI2C 09A4           __size_of_FMvers 0010  
                 _OpenI2C 0986                   __Hparam 0000                   __Lparam 0000  
             ?_VolumeDown 0025                ??_MuteHard 0025                 ?_showFreq 0025  
            __psmallconst 0300           __CFG_STVREN$OFF 000000                   __pcinit 09C0  
              ??_WriteI2C 0026         __end_of_butnEvent 04C6        __end_of_FMfrequenc 07F2  
              ??_VolumeUp 0025                   __ramtop 0300                   __ptext0 0656  
                 __ptext1 094A                   __ptext2 0968                   __ptext3 0780  
                 __ptext4 09F8                   __ptext5 0326                   __ptext6 0928  
                 __ptext7 09FA                   __ptext8 09FC                   __ptext9 09FE  
               _T0CONbits 000FD5                   _regDflt 0301              __size_of_dly 0032  
                 main@evt 0042      end_of_initialization 09CC               ?_delay_10ms 0025  
           __Lmediumconst 0000         ??_previousChannel 0040               FMfrequenc@f 0036  
              ??_showFreq 0025                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                 _PORTAbits 000F80                 _PORTBbits 000F81  
               _PORTCbits 000F82                 _PORTGbits 000F86                 _TRISCbits 000F94  
     __size_of_VolumeDown 0002            __end_of_FMinit 0656            __end_of_FMread 0590  
          __end_of_FMvers 09F8       __size_of_delay_10ms 0022                butnEvent@c 002B  
     start_initialization 09C0               __end_of_dly 0928          WriteI2C@data_out 0026  
                ??_FMinit 0036                  ??_FMread 0029                  ??_FMvers 0032  
       __size_of_MuteHard 0002         __size_of_WriteI2C 005E         __size_of_VolumeUp 0002  
             __pbssCOMRAM 0001                  ?_FMready 0030                  ?_FMwrite 0025  
                ?_IdleI2C 0025                  ?_ReadI2C 0025                  ?_OpenI2C 0025  
           ??_nextChannel 0040              ??_VolumeDown 0025         __size_of_showFreq 0002  
                FMinit@ad 0038               __smallconst 0300                 _butnEvent 0326  
         FMwrite@firstByt 0029           _previousChannel 094A                  _LCDDATA0 000F60  
      __end_of_VolumeDown 09FE           FMwrite@secndByt 002A            __size_of_errfm 0002  
            ??_delay_10ms 0027              MuteHard@down 0025            FMread@firstByt 002E  
              FMread@data 0027                  _PIR1bits 000F9E            FMread@secndByt 002F  
              FMready@rdy 0030                FMready@sts 0034       __end_of_nextChannel 0986  
      __end_of_delay_10ms 094A                ?_butnEvent 0028          __size_of_FMready 0046  
        __size_of_FMwrite 0082          OpenI2C@sync_mode 0026          __size_of_IdleI2C 0012  
        __size_of_ReadI2C 001C                  __Hrparam 0000          __size_of_OpenI2C 001E  
                _MuteHard 09FE                  __Lrparam 0000                FMwrite@adr 002B  
                _WriteI2C 0852                  _VolumeUp 09FA   __end_of_previousChannel 0968  
                __ptext10 07F2                  __ptext11 0986                  __ptext20 09D6  
                __ptext12 09E8                  __ptext21 09A4                  __ptext13 0590  
                __ptext14 0A00                  __ptext15 08F6                  __ptext16 06FE  
                __ptext17 08B0                  __ptext18 04C6                  __ptext19 0852  
             delay_10ms@n 0025             __size_of_Init 0060             __size_of_main 00A8  
           FMread@regAddr 002D               _nextChannel 0968                  _showFreq 0A00  
           FMfrequenc@dat 003E               ??_butnEvent 002A                _INTCONbits 000FF2  
            FMfrequenc@cn 003C          ?_previousChannel 0025               _SSPCON1bits 000FC6  
             _SSPCON2bits 000FC5                _FMfrequenc 0780            butnEvent@c_507 002D  
          butnEvent@c_524 0033            butnEvent@c_516 002F            butnEvent@c_517 0031  
