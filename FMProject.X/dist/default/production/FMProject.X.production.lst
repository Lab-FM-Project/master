

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Feb 19 18:39:55 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	smallconst
    44  000300                     __psmallconst:
    45                           	opt stack 0
    46  000300  00                 	db	0
    47  000301                     _regDflt:
    48                           	opt stack 0
    49  000301  FFFF               	dw	65535
    50  000303  5B15               	dw	23317
    51  000305  D0B9               	dw	53433
    52  000307  A010               	dw	40976
    53  000309  0780               	dw	1920
    54  00030B  28AB               	dw	10411
    55  00030D  6400               	dw	25600
    56  00030F  1EE7               	dw	7911
    57  000311  7141               	dw	28993
    58  000313  007D               	dw	125
    59  000315  82C6               	dw	33478
    60  000317  4F55               	dw	20309
    61  000319  970C               	dw	38668
    62  00031B  B845               	dw	47173
    63  00031D  FC2D               	dw	64557
    64  00031F  8097               	dw	32919
    65  000321  04A1               	dw	1185
    66  000323  DF6A               	dw	57194
    67  000325                     __end_of_regDflt:
    68                           	opt stack 0
    69  000325                     setVolume@F6671:
    70                           	opt stack 0
    71  000325  0F                 	db	15
    72  000326  CF                 	db	207
    73  000327  DF                 	db	223
    74  000328  FF                 	db	255
    75  000329  CB                 	db	203
    76  00032A  DB                 	db	219
    77  00032B  FB                 	db	251
    78  00032C  FA                 	db	250
    79  00032D  F9                 	db	249
    80  00032E  F8                 	db	248
    81  00032F  F7                 	db	247
    82  000330  D6                 	db	214
    83  000331  E6                 	db	230
    84  000332  F6                 	db	246
    85  000333  E3                 	db	227
    86  000334  F3                 	db	243
    87  000335  F2                 	db	242
    88  000336  F1                 	db	241
    89  000337  F0                 	db	240
    90  000338                     __end_ofsetVolume@F6671:
    91                           	opt stack 0
    92  000338                     _hardmute_bit:
    93                           	opt stack 0
    94  000338  0001               	dw	1
    95  00033A  0001               	dw	1
    96  00033C                     __end_of_hardmute_bit:
    97                           	opt stack 0
    98  00033C                     _hiloctrl1_bit:
    99                           	opt stack 0
   100  00033C  000B               	dw	11
   101  00033E  0002               	dw	2
   102  000340                     __end_of_hiloctrl1_bit:
   103                           	opt stack 0
   104  000340                     _hiloctrl2_bit:
   105                           	opt stack 0
   106  000340  000B               	dw	11
   107  000342  0000               	dw	0
   108  000344                     __end_of_hiloctrl2_bit:
   109                           	opt stack 0
   110  000344                     _hiloside_bit:
   111                           	opt stack 0
   112  000344  000B               	dw	11
   113  000346  000F               	dw	15
   114  000348                     __end_of_hiloside_bit:
   115                           	opt stack 0
   116  000348                     _seek_bit:
   117                           	opt stack 0
   118  000348  0003               	dw	3
   119  00034A  000E               	dw	14
   120  00034C                     __end_of_seek_bit:
   121                           	opt stack 0
   122  00034C                     _seekup_bit:
   123                           	opt stack 0
   124  00034C  0003               	dw	3
   125  00034E  000F               	dw	15
   126  000350                     __end_of_seekup_bit:
   127                           	opt stack 0
   128  000350                     _softmute_bit:
   129                           	opt stack 0
   130  000350  0001               	dw	1
   131  000352  0002               	dw	2
   132  000354                     __end_of_softmute_bit:
   133                           	opt stack 0
   134  000354                     _tune_bit:
   135                           	opt stack 0
   136  000354  0002               	dw	2
   137  000356  0009               	dw	9
   138  000358                     __end_of_tune_bit:
   139                           	opt stack 0
   140  0000                     _LCDPS	set	3928
   141  0000                     _ADCON1	set	4033
   142  0000                     _INTCONbits	set	4082
   143  0000                     _OSCCON	set	4051
   144  0000                     _PIR1bits	set	3998
   145  0000                     _PORTA	set	3968
   146  0000                     _PORTAbits	set	3968
   147  0000                     _PORTB	set	3969
   148  0000                     _PORTBbits	set	3969
   149  0000                     _PORTC	set	3970
   150  0000                     _PORTCbits	set	3970
   151  0000                     _PORTGbits	set	3974
   152  0000                     _SSPADD	set	4040
   153  0000                     _SSPBUF	set	4041
   154  0000                     _SSPCON1	set	4038
   155  0000                     _SSPCON1bits	set	4038
   156  0000                     _SSPCON2	set	4037
   157  0000                     _SSPCON2bits	set	4037
   158  0000                     _SSPSTAT	set	4039
   159  0000                     _SSPSTATbits	set	4039
   160  0000                     _T0CON	set	4053
   161  0000                     _T0CONbits	set	4053
   162  0000                     _TMR0H	set	4055
   163  0000                     _TMR0L	set	4054
   164  0000                     _TRISA	set	3986
   165  0000                     _TRISB	set	3987
   166  0000                     _TRISC	set	3988
   167  0000                     _TRISCbits	set	3988
   168  0000                     _TRISG	set	3992
   169                           
   170                           ; #config settings
   171  000358  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	cinit
   174  000FFA                     __pcinit:
   175                           	opt stack 0
   176  000FFA                     start_initialization:
   177                           	opt stack 0
   178  000FFA                     __initialization:
   179                           	opt stack 0
   180                           
   181                           ; Clear objects allocated to COMRAM (36 bytes)
   182  000FFA  EE00  F031         	lfsr	0,__pbssCOMRAM
   183  000FFE  0E24               	movlw	36
   184  001000                     clear_0:
   185  001000  6AEE               	clrf	postinc0,c
   186  001002  06E8               	decf	wreg,f,c
   187  001004  E1FD               	bnz	clear_0
   188  001006                     end_of_initialization:
   189                           	opt stack 0
   190  001006                     __end_of__initialization:
   191                           	opt stack 0
   192  001006  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193  001008  6EF8               	movwf	tblptru,c
   194  00100A  0100               	movlb	0
   195  00100C  EF8B  F004         	goto	_main	;jump to C main() function
   196                           tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssCOMRAM
   201  000031                     __pbssCOMRAM:
   202                           	opt stack 0
   203  000031                     _regImg:
   204                           	opt stack 0
   205  000031                     	ds	36
   206                           tblptru	equ	0xFF8
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	cstackCOMRAM
   211  000001                     __pcstackCOMRAM:
   212                           	opt stack 0
   213  000001                     ??_IdleI2C:
   214  000001                     ?_butnEvent:
   215                           	opt stack 0
   216  000001                     OpenI2C@slew:
   217                           	opt stack 0
   218  000001                     dly@d:
   219                           	opt stack 0
   220  000001                     delay_10ms@n:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224  000001                     	ds	1
   225  000002                     OpenI2C@sync_mode:
   226                           	opt stack 0
   227  000002                     WriteI2C@data_out:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x1
   231  000002                     	ds	1
   232  000003                     ??_FMwrite:
   233  000003                     ??_delay_10ms:
   234  000003                     ??_butnEvent:
   235  000003                     FMread@data:
   236                           	opt stack 0
   237  000003                     dly@i:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x2
   241  000003                     	ds	1
   242  000004                     butnEvent@c:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000004                     	ds	1
   247  000005                     ??_FMread:
   248  000005                     FMwrite@firstByt:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x4
   252  000005                     	ds	1
   253  000006                     FMwrite@secndByt:
   254                           	opt stack 0
   255  000006                     butnEvent@c_611:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x5
   259  000006                     	ds	1
   260  000007                     FMwrite@adr:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x6
   264  000007                     	ds	1
   265  000008                     setBitInRegister@bitRegister:
   266                           	opt stack 0
   267  000008                     butnEvent@c_612:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x7
   271  000008                     	ds	1
   272  000009                     FMread@regAddr:
   273                           	opt stack 0
   274  000009                     setBitInRegister@bitState:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x8
   278  000009                     	ds	1
   279  00000A                     ??_setBitInRegister:
   280  00000A                     FMread@firstByt:
   281                           	opt stack 0
   282  00000A                     butnEvent@c_613:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286  00000A                     	ds	1
   287  00000B                     FMread@secndByt:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0xA
   291  00000B                     	ds	1
   292  00000C                     ?_frequency:
   293                           	opt stack 0
   294  00000C                     FMready@rdy:
   295                           	opt stack 0
   296  00000C                     FMvers@vsn:
   297                           	opt stack 0
   298  00000C                     butnEvent@c_622:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0xB
   302  00000C                     	ds	2
   303  00000E                     ??_frequency:
   304  00000E                     ??_FMready:
   305  00000E                     butnEvent@c_623:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0xD
   309  00000E                     	ds	2
   310  000010                     FMready@sts:
   311                           	opt stack 0
   312  000010                     butnEvent@c_630:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0xF
   316  000010                     	ds	1
   317  000011                     setBitInRegister@address:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x10
   321  000011                     	ds	1
   322  000012                     ??_readLOInjection:
   323  000012                     setSeekDirection@direction:
   324                           	opt stack 0
   325  000012                     setHardmute@bitState:
   326                           	opt stack 0
   327  000012                     FMinit@dat:
   328                           	opt stack 0
   329  000012                     FMfrequenc@f:
   330                           	opt stack 0
   331  000012                     butnEvent@timereturn:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x11
   335  000012                     	ds	1
   336  000013                     frequency@data:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x12
   340  000013                     	ds	1
   341  000014                     ??_FMfrequenc:
   342  000014                     FMinit@ad:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x13
   346  000014                     	ds	1
   347  000015                     readLOInjection@loHi:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x14
   351  000015                     	ds	1
   352  000016                     readLOInjection@temp:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x15
   356  000016                     	ds	2
   357  000018                     readLOInjection@rssi_val:
   358                           	opt stack 0
   359  000018                     FMfrequenc@dat:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x17
   363  000018                     	ds	1
   364  000019                     readLOInjection@status:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x18
   368  000019                     	ds	1
   369  00001A                     FMfrequenc@cn:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x19
   373  00001A                     	ds	1
   374  00001B                     tuneWithAutoHiLo@curChannel:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x1A
   378  00001B                     	ds	1
   379  00001C                     
   380                           ; 1 bytes @ 0x1B
   381  00001C                     	ds	1
   382  00001D                     tuneWithAutoHiLo@temp:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x1C
   386  00001D                     	ds	2
   387  00001F                     tuneWithAutoHiLo@rssi_lo:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x1E
   391  00001F                     	ds	1
   392  000020                     tuneWithAutoHiLo@rssi_hi:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x1F
   396  000020                     	ds	1
   397  000021                     tuneWithAutoHiLo@status:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x20
   401  000021                     	ds	2
   402  000023                     seek@curChannel:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x22
   406  000023                     	ds	2
   407  000025                     seek@direction:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x24
   411  000025                     	ds	1
   412  000026                     seek@temp:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x25
   416  000026                     	ds	2
   417  000028                     seek@status:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x27
   421  000028                     	ds	2
   422  00002A                     VolumeUp@dir:
   423                           	opt stack 0
   424  00002A                     VolumeDown@dir:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x29
   428  00002A                     	ds	1
   429  00002B                     ??_main:
   430                           
   431                           ; 1 bytes @ 0x2A
   432  00002B                     	ds	2
   433  00002D                     main@evt:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x2C
   437  00002D                     	ds	2
   438  00002F                     main@ui:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2E
   442  00002F                     	ds	2
   443                           tblptru	equ	0xFF8
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 42 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  ui              2   46[COMRAM] unsigned int 
   457 ;;  evt             2   44[COMRAM] int 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   467 ;;      Params:         0       0       0       0
   468 ;;      Locals:         4       0       0       0
   469 ;;      Temps:          2       0       0       0
   470 ;;      Totals:         6       0       0       0
   471 ;;Total ram usage:        6 bytes
   472 ;; Hardware stack levels required when called:    8
   473 ;; This function calls:
   474 ;;		_FMfrequenc
   475 ;;		_FMinit
   476 ;;		_FMvers
   477 ;;		_Init
   478 ;;		_MuteHard
   479 ;;		_SeekDOWN
   480 ;;		_SeekUP
   481 ;;		_VolumeDown
   482 ;;		_VolumeUp
   483 ;;		_butnEvent
   484 ;;		_dly
   485 ;;		_errfm
   486 ;;		_nextChannel
   487 ;;		_previousChannel
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text0
   494  000916                     __ptext0:
   495                           	opt stack 0
   496  000916                     _main:
   497                           	opt stack 23
   498                           
   499                           ;main.c: 43: int evt;
   500                           ;main.c: 44: unsigned int ui;
   501                           ;main.c: 45: dly(20);
   502                           
   503                           ;incstack = 0
   504  000916  0E00               	movlw	0
   505  000918  6E02               	movwf	dly@d+1,c
   506  00091A  0E14               	movlw	20
   507  00091C  6E01               	movwf	dly@d,c
   508  00091E  EC69  F007         	call	_dly	;wreg free
   509                           
   510                           ;main.c: 46: Init();
   511  000922  EC01  F007         	call	_Init	;wreg free
   512                           
   513                           ;main.c: 48: PORTCbits.RC6 = 1;
   514  000926  8C82               	bsf	3970,6,c	;volatile
   515                           
   516                           ;main.c: 50: FMvers(&ui);
   517  000928  0E2F               	movlw	low main@ui
   518  00092A  6E0C               	movwf	FMvers@vsn,c
   519  00092C  0E00               	movlw	high main@ui
   520  00092E  6E0D               	movwf	FMvers@vsn+1,c
   521  000930  EC23  F008         	call	_FMvers	;wreg free
   522                           
   523                           ;main.c: 51: if (ui != 0x1010) errfm();
   524  000934  0E10               	movlw	16
   525  000936  182F               	xorwf	main@ui,w,c
   526  000938  E103               	bnz	u1750
   527  00093A  0E10               	movlw	16
   528  00093C  1830               	xorwf	main@ui+1,w,c
   529  00093E  A4D8               	btfss	status,2,c
   530  000940                     u1750:
   531  000940  EC2B  F008         	call	_errfm	;wreg free
   532                           
   533                           ;main.c: 52: if (FMinit() != 0) errfm();
   534  000944  EC55  F005         	call	_FMinit	;wreg free
   535  000948  0900               	iorlw	0
   536  00094A  A4D8               	btfss	status,2,c
   537  00094C  EC2B  F008         	call	_errfm	;wreg free
   538                           
   539                           ;main.c: 53: FMfrequenc(964);
   540  000950  0E03               	movlw	3
   541  000952  6E13               	movwf	FMfrequenc@f+1,c
   542  000954  0EC4               	movlw	196
   543  000956  6E12               	movwf	FMfrequenc@f,c
   544  000958  EC17  F006         	call	_FMfrequenc	;wreg free
   545  00095C                     l2252:
   546                           
   547                           ;main.c: 56: evt = butnEvent();
   548  00095C  ECAD  F001         	call	_butnEvent	;wreg free
   549  000960  C001  F02D         	movff	?_butnEvent,main@evt
   550  000964  C002  F02E         	movff	?_butnEvent+1,main@evt+1
   551                           
   552                           ;main.c: 57: switch (evt) {
   553  000968  D019               	goto	l2272
   554  00096A                     l2254:
   555  00096A  ECB5  F007         	call	_nextChannel	;wreg free
   556                           
   557                           ;main.c: 59: break;
   558  00096E  D7F6               	goto	l2252
   559  000970                     l2256:
   560  000970  ECA6  F007         	call	_previousChannel	;wreg free
   561                           
   562                           ;main.c: 61: break;
   563  000974  D7F3               	goto	l2252
   564  000976                     l2258:
   565  000976  ECD3  F007         	call	_VolumeUp	;wreg free
   566                           
   567                           ;main.c: 63: break;
   568  00097A  D7F0               	goto	l2252
   569  00097C                     l2260:
   570  00097C  ECE1  F007         	call	_VolumeDown	;wreg free
   571                           
   572                           ;main.c: 65: break;
   573  000980  D7ED               	goto	l2252
   574  000982                     l2262:
   575  000982  0E00               	movlw	0
   576  000984  EC2C  F008         	call	_MuteHard
   577                           
   578                           ;main.c: 67: break;
   579  000988  D7E9               	goto	l2252
   580  00098A                     l2264:
   581  00098A  EC08  F008         	call	_SeekUP	;wreg free
   582                           
   583                           ;main.c: 69: break;
   584  00098E  D7E6               	goto	l2252
   585  000990                     l2266:
   586  000990  EC11  F008         	call	_SeekDOWN	;wreg free
   587                           
   588                           ;main.c: 71: break;
   589  000994  D7E3               	goto	l2252
   590  000996                     l2268:
   591  000996  EC2B  F008         	call	_errfm	;wreg free
   592                           
   593                           ;main.c: 77: }
   594                           
   595                           ;main.c: 76: default: break;
   596                           
   597                           ;main.c: 74: break;
   598  00099A  D7E0               	goto	l2252
   599  00099C                     l2272:
   600  00099C  C02D  F02B         	movff	main@evt,??_main
   601  0009A0  C02E  F02C         	movff	main@evt+1,??_main+1
   602                           
   603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   604                           ; Switch size 1, requested type "space"
   605                           ; Number of cases is 1, Range of values is 0 to 0
   606                           ; switch strategies available:
   607                           ; Name         Instructions Cycles
   608                           ; simple_byte            4     3 (average)
   609                           ;	Chosen strategy is simple_byte
   610  0009A4  502C               	movf	??_main+1,w,c
   611  0009A6  0A00               	xorlw	0	; case 0
   612  0009A8  A4D8               	btfss	status,2,c
   613  0009AA  D7D8               	goto	l2252
   614                           
   615                           ; Switch size 1, requested type "space"
   616                           ; Number of cases is 8, Range of values is 1 to 8
   617                           ; switch strategies available:
   618                           ; Name         Instructions Cycles
   619                           ; simple_byte           25    13 (average)
   620                           ;	Chosen strategy is simple_byte
   621  0009AC  502B               	movf	??_main,w,c
   622  0009AE  0A01               	xorlw	1	; case 1
   623  0009B0  B4D8               	btfsc	status,2,c
   624  0009B2  D7DB               	goto	l2254
   625  0009B4  0A03               	xorlw	3	; case 2
   626  0009B6  B4D8               	btfsc	status,2,c
   627  0009B8  D7DB               	goto	l2256
   628  0009BA  0A01               	xorlw	1	; case 3
   629  0009BC  B4D8               	btfsc	status,2,c
   630  0009BE  D7DB               	goto	l2258
   631  0009C0  0A07               	xorlw	7	; case 4
   632  0009C2  B4D8               	btfsc	status,2,c
   633  0009C4  D7DB               	goto	l2260
   634  0009C6  0A01               	xorlw	1	; case 5
   635  0009C8  B4D8               	btfsc	status,2,c
   636  0009CA  D7DB               	goto	l2262
   637  0009CC  0A03               	xorlw	3	; case 6
   638  0009CE  B4D8               	btfsc	status,2,c
   639  0009D0  D7DC               	goto	l2264
   640  0009D2  0A01               	xorlw	1	; case 7
   641  0009D4  B4D8               	btfsc	status,2,c
   642  0009D6  D7DC               	goto	l2266
   643  0009D8  0A0F               	xorlw	15	; case 8
   644  0009DA  B4D8               	btfsc	status,2,c
   645  0009DC  D7DC               	goto	l2268
   646                           
   647                           ;main.c: 78: }
   648  0009DE  D7BE               	goto	l2252
   649  0009E0                     __end_of_main:
   650                           	opt stack 0
   651                           tblptru	equ	0xFF8
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           status	equ	0xFD8
   655                           
   656 ;; *************** function _previousChannel *****************
   657 ;; Defined at:
   658 ;;		line 796 in file "fm.h"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      unsigned char 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   672 ;;      Params:         0       0       0       0
   673 ;;      Locals:         0       0       0       0
   674 ;;      Temps:          0       0       0       0
   675 ;;      Totals:         0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    5
   679 ;; This function calls:
   680 ;;		_FMfrequenc
   681 ;;		_delay_10ms
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text1
   688  000F4C                     __ptext1:
   689                           	opt stack 0
   690  000F4C                     _previousChannel:
   691                           	opt stack 25
   692                           
   693                           ;fm.h: 798: FMfrequenc(958);
   694                           
   695                           ;incstack = 0
   696  000F4C  0E03               	movlw	3
   697  000F4E  6E13               	movwf	FMfrequenc@f+1,c
   698  000F50  0EBE               	movlw	190
   699  000F52  6E12               	movwf	FMfrequenc@f,c
   700  000F54  EC17  F006         	call	_FMfrequenc	;wreg free
   701                           
   702                           ;fm.h: 799: PORTCbits.RC7 = 1;
   703  000F58  8E82               	bsf	3970,7,c	;volatile
   704                           
   705                           ;fm.h: 800: delay_10ms(10);
   706  000F5A  0E00               	movlw	0
   707  000F5C  6E02               	movwf	delay_10ms@n+1,c
   708  000F5E  0E0A               	movlw	10
   709  000F60  6E01               	movwf	delay_10ms@n,c
   710  000F62  EC95  F007         	call	_delay_10ms	;wreg free
   711                           
   712                           ;fm.h: 801: PORTCbits.RC7 = 0;
   713  000F66  9E82               	bcf	3970,7,c	;volatile
   714  000F68  0012               	return	
   715  000F6A                     __end_of_previousChannel:
   716                           	opt stack 0
   717                           tblptru	equ	0xFF8
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           status	equ	0xFD8
   721                           
   722 ;; *************** function _nextChannel *****************
   723 ;; Defined at:
   724 ;;		line 786 in file "fm.h"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      unsigned char 
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   738 ;;      Params:         0       0       0       0
   739 ;;      Locals:         0       0       0       0
   740 ;;      Temps:          0       0       0       0
   741 ;;      Totals:         0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    5
   745 ;; This function calls:
   746 ;;		_FMfrequenc
   747 ;;		_delay_10ms
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text2
   754  000F6A                     __ptext2:
   755                           	opt stack 0
   756  000F6A                     _nextChannel:
   757                           	opt stack 25
   758                           
   759                           ;fm.h: 787: FMfrequenc(964);
   760                           
   761                           ;incstack = 0
   762  000F6A  0E03               	movlw	3
   763  000F6C  6E13               	movwf	FMfrequenc@f+1,c
   764  000F6E  0EC4               	movlw	196
   765  000F70  6E12               	movwf	FMfrequenc@f,c
   766  000F72  EC17  F006         	call	_FMfrequenc	;wreg free
   767                           
   768                           ;fm.h: 788: PORTCbits.RC6 = 1;
   769  000F76  8C82               	bsf	3970,6,c	;volatile
   770                           
   771                           ;fm.h: 789: delay_10ms(10);
   772  000F78  0E00               	movlw	0
   773  000F7A  6E02               	movwf	delay_10ms@n+1,c
   774  000F7C  0E0A               	movlw	10
   775  000F7E  6E01               	movwf	delay_10ms@n,c
   776  000F80  EC95  F007         	call	_delay_10ms	;wreg free
   777                           
   778                           ;fm.h: 790: PORTCbits.RC6 = 0;
   779  000F84  9C82               	bcf	3970,6,c	;volatile
   780  000F86  0012               	return	
   781  000F88                     __end_of_nextChannel:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _FMfrequenc *****************
   789 ;; Defined at:
   790 ;;		line 581 in file "fm.h"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  f               2   17[COMRAM] unsigned int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  cn              2   25[COMRAM] unsigned int 
   795 ;;  dat             2   23[COMRAM] unsigned int 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      unsigned char 
   798 ;; Registers used:
   799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   805 ;;      Params:         2       0       0       0
   806 ;;      Locals:         4       0       0       0
   807 ;;      Temps:          4       0       0       0
   808 ;;      Totals:        10       0       0       0
   809 ;;Total ram usage:       10 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    4
   812 ;; This function calls:
   813 ;;		_FMready
   814 ;;		_FMwrite
   815 ;;		_dly
   816 ;; This function is called by:
   817 ;;		_nextChannel
   818 ;;		_previousChannel
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text3
   824  000C2E                     __ptext3:
   825                           	opt stack 0
   826  000C2E                     _FMfrequenc:
   827                           	opt stack 25
   828                           
   829                           ;fm.h: 583: unsigned int dat;
   830                           ;fm.h: 584: unsigned int cn;
   831                           ;fm.h: 586: cn = f - 690;
   832                           
   833                           ;incstack = 0
   834  000C2E  0E4E               	movlw	78
   835  000C30  2412               	addwf	FMfrequenc@f,w,c
   836  000C32  6E1A               	movwf	FMfrequenc@cn,c
   837  000C34  0EFD               	movlw	253
   838  000C36  2013               	addwfc	FMfrequenc@f+1,w,c
   839  000C38  6E1B               	movwf	FMfrequenc@cn+1,c
   840                           
   841                           ;fm.h: 589: if (cn < (875-690))
   842  000C3A  501B               	movf	FMfrequenc@cn+1,w,c
   843  000C3C  E108               	bnz	l1896
   844  000C3E  0EB9               	movlw	185
   845  000C40  5C1A               	subwf	FMfrequenc@cn,w,c
   846  000C42  B0D8               	btfsc	status,0,c
   847  000C44  D004               	goto	l1896
   848                           
   849                           ;fm.h: 590: cn = (875-690);
   850  000C46  0E00               	movlw	0
   851  000C48  6E1B               	movwf	FMfrequenc@cn+1,c
   852  000C4A  0EB9               	movlw	185
   853  000C4C  D009               	goto	L1
   854  000C4E                     l1896:
   855                           
   856                           ;fm.h: 591: else if (cn > (1080-690))
   857  000C4E  0E87               	movlw	135
   858  000C50  5C1A               	subwf	FMfrequenc@cn,w,c
   859  000C52  0E01               	movlw	1
   860  000C54  581B               	subwfb	FMfrequenc@cn+1,w,c
   861  000C56  A0D8               	btfss	status,0,c
   862  000C58  D004               	goto	l1900
   863                           
   864                           ;fm.h: 592: cn = (1080-690);
   865  000C5A  0E01               	movlw	1
   866  000C5C  6E1B               	movwf	FMfrequenc@cn+1,c
   867  000C5E  0E86               	movlw	134
   868  000C60                     L1:
   869  000C60  6E1A               	movwf	FMfrequenc@cn,c
   870  000C62                     l1900:
   871                           
   872                           ;fm.h: 595: regImg[2] &= ~0x0200;
   873  000C62  9236               	bcf	_regImg+5,1,c
   874                           
   875                           ;fm.h: 596: if (FMwrite(2) != 0) return 1;
   876  000C64  0E02               	movlw	2
   877  000C66  EC64  F006         	call	_FMwrite
   878  000C6A  0900               	iorlw	0
   879  000C6C  A4D8               	btfss	status,2,c
   880  000C6E  0012               	return	
   881                           
   882                           ;fm.h: 597: regImg[2] &= 0xfe00;
   883                           
   884                           ;	Return value of _FMfrequenc is never used
   885  000C70  0E00               	movlw	0
   886  000C72  1635               	andwf	_regImg+4,f,c
   887  000C74  0EFE               	movlw	254
   888  000C76  1636               	andwf	_regImg+5,f,c
   889                           
   890                           ;fm.h: 598: regImg[2] |= (cn | 0x0200);
   891  000C78  0E00               	movlw	0
   892  000C7A  6E14               	movwf	??_FMfrequenc& (0+255),c
   893  000C7C  0E02               	movlw	2
   894  000C7E  6E15               	movwf	(??_FMfrequenc+1)& (0+255),c
   895  000C80  C01A  F016         	movff	FMfrequenc@cn,??_FMfrequenc+2
   896  000C84  C01B  F017         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   897  000C88  5014               	movf	??_FMfrequenc,w,c
   898  000C8A  1216               	iorwf	??_FMfrequenc+2,f,c
   899  000C8C  5015               	movf	??_FMfrequenc+1,w,c
   900  000C8E  1217               	iorwf	??_FMfrequenc+3,f,c
   901  000C90  5016               	movf	??_FMfrequenc+2,w,c
   902  000C92  1235               	iorwf	_regImg+4,f,c
   903  000C94  5017               	movf	??_FMfrequenc+3,w,c
   904  000C96  1236               	iorwf	_regImg+5,f,c
   905                           
   906                           ;fm.h: 599: if (FMwrite(2) != 0) return 1;
   907  000C98  0E02               	movlw	2
   908  000C9A  EC64  F006         	call	_FMwrite
   909  000C9E  0900               	iorlw	0
   910  000CA0  A4D8               	btfss	status,2,c
   911  000CA2  0012               	return	
   912                           
   913                           ;fm.h: 601: dly(2);
   914                           
   915                           ;fm.h: 600: do {
   916                           
   917                           ;	Return value of _FMfrequenc is never used
   918  000CA4  0E00               	movlw	0
   919  000CA6  6E02               	movwf	dly@d+1,c
   920  000CA8  0E02               	movlw	2
   921  000CAA  6E01               	movwf	dly@d,c
   922  000CAC  EC69  F007         	call	_dly	;wreg free
   923                           
   924                           ;fm.h: 602: if (FMready(&dat) != 0) return 1;
   925  000CB0  0E18               	movlw	low FMfrequenc@dat
   926  000CB2  6E0C               	movwf	FMready@rdy,c
   927  000CB4  0E00               	movlw	high FMfrequenc@dat
   928  000CB6  6E0D               	movwf	FMready@rdy+1,c
   929  000CB8  EC25  F007         	call	_FMready	;wreg free
   930  000CBC  0900               	iorlw	0
   931  000CBE  A4D8               	btfss	status,2,c
   932  000CC0  0012               	return	
   933                           
   934                           ;fm.h: 603: } while (!dat);
   935                           
   936                           ;	Return value of _FMfrequenc is never used
   937  000CC2  5018               	movf	FMfrequenc@dat,w,c
   938  000CC4  1019               	iorwf	FMfrequenc@dat+1,w,c
   939  000CC6  D7EC               	goto	L2
   940  000CC8                     __end_of_FMfrequenc:
   941                           	opt stack 0
   942                           tblptru	equ	0xFF8
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _errfm *****************
   948 ;; Defined at:
   949 ;;		line 650 in file "fm.h"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   963 ;;      Params:         0       0       0       0
   964 ;;      Locals:         0       0       0       0
   965 ;;      Temps:          0       0       0       0
   966 ;;      Totals:         0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text4
   977  001056                     __ptext4:
   978                           	opt stack 0
   979  001056                     _errfm:
   980                           	opt stack 30
   981  001056                     l211:
   982  001056  D7FF               	goto	l211
   983  001058                     __end_of_errfm:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           status	equ	0xFD8
   989                           
   990 ;; *************** function _butnEvent *****************
   991 ;; Defined at:
   992 ;;		line 702 in file "fm.h"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  c               2    9[COMRAM] int 
   997 ;;  c               2    5[COMRAM] int 
   998 ;;  c               2   15[COMRAM] int 
   999 ;;  c               2   13[COMRAM] int 
  1000 ;;  c               2   11[COMRAM] int 
  1001 ;;  c               2    7[COMRAM] int 
  1002 ;;  c               2    3[COMRAM] int 
  1003 ;;  timereturn      2   17[COMRAM] int 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  2    0[COMRAM] int 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1013 ;;      Params:         2       0       0       0
  1014 ;;      Locals:        16       0       0       0
  1015 ;;      Temps:          1       0       0       0
  1016 ;;      Totals:        19       0       0       0
  1017 ;;Total ram usage:       19 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text5
  1027  00035A                     __ptext5:
  1028                           	opt stack 0
  1029  00035A                     _butnEvent:
  1030                           	opt stack 30
  1031                           
  1032                           ;fm.h: 703: int timereturn;
  1033                           ;fm.h: 704: if (PORTAbits.RA0 == 0)
  1034                           
  1035                           ;incstack = 0
  1036  00035A  B080               	btfsc	3968,0,c	;volatile
  1037  00035C  D04F               	goto	l234
  1038                           
  1039                           ;fm.h: 705: {
  1040                           ;fm.h: 706: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1041  00035E  0E00               	movlw	0
  1042  000360  6E05               	movwf	butnEvent@c+1,c
  1043  000362  0E00               	movlw	0
  1044  000364  6E04               	movwf	butnEvent@c,c
  1045  000366  BE05               	btfsc	butnEvent@c+1,7,c
  1046  000368  D006               	goto	l2010
  1047  00036A  5005               	movf	butnEvent@c+1,w,c
  1048  00036C  E112               	bnz	l236
  1049  00036E  0E0B               	movlw	11
  1050  000370  5C04               	subwf	butnEvent@c,w,c
  1051  000372  B0D8               	btfsc	status,0,c
  1052  000374  D00E               	goto	l236
  1053  000376                     l2010:
  1054  000376  0E0D               	movlw	13
  1055  000378  6E03               	movwf	??_butnEvent& (0+255),c
  1056  00037A  0EFC               	movlw	252
  1057  00037C                     u1777:
  1058  00037C  2EE8               	decfsz	wreg,f,c
  1059  00037E  D7FE               	goto	u1777
  1060  000380  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1061  000382  D7FC               	goto	u1777
  1062  000384  4A04               	infsnz	butnEvent@c,f,c
  1063  000386  2A05               	incf	butnEvent@c+1,f,c
  1064  000388  BE05               	btfsc	butnEvent@c+1,7,c
  1065  00038A  D7F5               	goto	l2010
  1066  00038C  5005               	movf	butnEvent@c+1,w,c
  1067  00038E  E101               	bnz	u1430
  1068  000390  D7EE               	goto	L3
  1069  000392                     u1430:
  1070  000392                     l236:
  1071                           
  1072                           ;fm.h: 707: if (PORTAbits.RA0 == 0)
  1073  000392  B080               	btfsc	3968,0,c	;volatile
  1074  000394  D02A               	goto	l2032
  1075                           
  1076                           ;fm.h: 708: {
  1077                           ;fm.h: 709: timereturn = 1;
  1078  000396  0E00               	movlw	0
  1079  000398  6E13               	movwf	butnEvent@timereturn+1,c
  1080  00039A  0E01               	movlw	1
  1081  00039C  6E12               	movwf	butnEvent@timereturn,c
  1082                           
  1083                           ;fm.h: 710: for (int c = 0; c <= 10; c++)_delay((unsigned long)((7)*(8000000/4000.0)));
  1084  00039E  0E00               	movlw	0
  1085  0003A0  6E07               	movwf	butnEvent@c_611+1,c
  1086  0003A2  0E00               	movlw	0
  1087  0003A4  6E06               	movwf	butnEvent@c_611,c
  1088  0003A6  BE07               	btfsc	butnEvent@c_611+1,7,c
  1089  0003A8  D006               	goto	l2020
  1090  0003AA  5007               	movf	butnEvent@c_611+1,w,c
  1091  0003AC  E113               	bnz	l239
  1092  0003AE  0E0B               	movlw	11
  1093  0003B0  5C06               	subwf	butnEvent@c_611,w,c
  1094  0003B2  B0D8               	btfsc	status,0,c
  1095  0003B4  D00F               	goto	l239
  1096  0003B6                     l2020:
  1097  0003B6  0E13               	movlw	19
  1098  0003B8  6E03               	movwf	??_butnEvent& (0+255),c
  1099  0003BA  0E2D               	movlw	45
  1100  0003BC                     u1787:
  1101  0003BC  2EE8               	decfsz	wreg,f,c
  1102  0003BE  D7FE               	goto	u1787
  1103  0003C0  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1104  0003C2  D7FC               	goto	u1787
  1105  0003C4  F000               	nop	
  1106  0003C6  4A06               	infsnz	butnEvent@c_611,f,c
  1107  0003C8  2A07               	incf	butnEvent@c_611+1,f,c
  1108  0003CA  BE07               	btfsc	butnEvent@c_611+1,7,c
  1109  0003CC  D7F4               	goto	l2020
  1110  0003CE  5007               	movf	butnEvent@c_611+1,w,c
  1111  0003D0  E101               	bnz	u1460
  1112  0003D2  D7ED               	goto	L4
  1113  0003D4                     u1460:
  1114  0003D4                     l239:
  1115                           
  1116                           ;fm.h: 711: if (PORTAbits.RA0 == 0) {
  1117  0003D4  B080               	btfsc	3968,0,c	;volatile
  1118  0003D6  D004               	goto	l2026
  1119                           
  1120                           ;fm.h: 712: timereturn = 6;
  1121  0003D8  0E00               	movlw	0
  1122  0003DA  6E13               	movwf	butnEvent@timereturn+1,c
  1123  0003DC  0E06               	movlw	6
  1124  0003DE  6E12               	movwf	butnEvent@timereturn,c
  1125  0003E0                     l2026:
  1126                           
  1127                           ;fm.h: 713: }
  1128                           ;fm.h: 714: return timereturn;
  1129  0003E0  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1130  0003E4  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1131  0003E8  0012               	return	
  1132  0003EA                     l2032:
  1133                           
  1134                           ;fm.h: 716: timereturn = 0;
  1135  0003EA  0E00               	movlw	0
  1136  0003EC  6E13               	movwf	butnEvent@timereturn+1,c
  1137  0003EE  0E00               	movlw	0
  1138  0003F0  6E12               	movwf	butnEvent@timereturn,c
  1139                           
  1140                           ;fm.h: 717: return timereturn;
  1141  0003F2  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1142  0003F6  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1143  0003FA  0012               	return	
  1144  0003FC                     l234:
  1145                           
  1146                           ;fm.h: 718: }
  1147                           ;fm.h: 719: }
  1148                           ;fm.h: 721: if (PORTAbits.RA1 == 0)
  1149  0003FC  B280               	btfsc	3968,1,c	;volatile
  1150  0003FE  D04E               	goto	l243
  1151                           
  1152                           ;fm.h: 722: {
  1153                           ;fm.h: 723: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1154  000400  0E00               	movlw	0
  1155  000402  6E09               	movwf	butnEvent@c_612+1,c
  1156  000404  0E00               	movlw	0
  1157  000406  6E08               	movwf	butnEvent@c_612,c
  1158  000408  BE09               	btfsc	butnEvent@c_612+1,7,c
  1159  00040A  D006               	goto	l2044
  1160  00040C  5009               	movf	butnEvent@c_612+1,w,c
  1161  00040E  E112               	bnz	l245
  1162  000410  0E0B               	movlw	11
  1163  000412  5C08               	subwf	butnEvent@c_612,w,c
  1164  000414  B0D8               	btfsc	status,0,c
  1165  000416  D00E               	goto	l245
  1166  000418                     l2044:
  1167  000418  0E0D               	movlw	13
  1168  00041A  6E03               	movwf	??_butnEvent& (0+255),c
  1169  00041C  0EFC               	movlw	252
  1170  00041E                     u1797:
  1171  00041E  2EE8               	decfsz	wreg,f,c
  1172  000420  D7FE               	goto	u1797
  1173  000422  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1174  000424  D7FC               	goto	u1797
  1175  000426  4A08               	infsnz	butnEvent@c_612,f,c
  1176  000428  2A09               	incf	butnEvent@c_612+1,f,c
  1177  00042A  BE09               	btfsc	butnEvent@c_612+1,7,c
  1178  00042C  D7F5               	goto	l2044
  1179  00042E  5009               	movf	butnEvent@c_612+1,w,c
  1180  000430  E101               	bnz	u1500
  1181  000432  D7EE               	goto	L5
  1182  000434                     u1500:
  1183  000434                     l245:
  1184                           
  1185                           ;fm.h: 724: if (PORTAbits.RA1 == 0)
  1186  000434  B280               	btfsc	3968,1,c	;volatile
  1187  000436  D029               	goto	l2066
  1188                           
  1189                           ;fm.h: 725: {
  1190                           ;fm.h: 726: timereturn = 2;
  1191  000438  0E00               	movlw	0
  1192  00043A  6E13               	movwf	butnEvent@timereturn+1,c
  1193  00043C  0E02               	movlw	2
  1194  00043E  6E12               	movwf	butnEvent@timereturn,c
  1195                           
  1196                           ;fm.h: 727: for (int c = 0; c <= 10; c++)_delay((unsigned long)((12)*(8000000/4000.0)));
  1197  000440  0E00               	movlw	0
  1198  000442  6E0B               	movwf	butnEvent@c_613+1,c
  1199  000444  0E00               	movlw	0
  1200  000446  6E0A               	movwf	butnEvent@c_613,c
  1201  000448  BE0B               	btfsc	butnEvent@c_613+1,7,c
  1202  00044A  D006               	goto	l2054
  1203  00044C  500B               	movf	butnEvent@c_613+1,w,c
  1204  00044E  E112               	bnz	l248
  1205  000450  0E0B               	movlw	11
  1206  000452  5C0A               	subwf	butnEvent@c_613,w,c
  1207  000454  B0D8               	btfsc	status,0,c
  1208  000456  D00E               	goto	l248
  1209  000458                     l2054:
  1210  000458  0E20               	movlw	32
  1211  00045A  6E03               	movwf	??_butnEvent& (0+255),c
  1212  00045C  0E2A               	movlw	42
  1213  00045E                     u1807:
  1214  00045E  2EE8               	decfsz	wreg,f,c
  1215  000460  D7FE               	goto	u1807
  1216  000462  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1217  000464  D7FC               	goto	u1807
  1218  000466  4A0A               	infsnz	butnEvent@c_613,f,c
  1219  000468  2A0B               	incf	butnEvent@c_613+1,f,c
  1220  00046A  BE0B               	btfsc	butnEvent@c_613+1,7,c
  1221  00046C  D7F5               	goto	l2054
  1222  00046E  500B               	movf	butnEvent@c_613+1,w,c
  1223  000470  E101               	bnz	u1530
  1224  000472  D7EE               	goto	L6
  1225  000474                     u1530:
  1226  000474                     l248:
  1227                           
  1228                           ;fm.h: 728: if (PORTAbits.RA1 == 0) {
  1229  000474  B280               	btfsc	3968,1,c	;volatile
  1230  000476  D004               	goto	l2060
  1231                           
  1232                           ;fm.h: 729: timereturn = 7;
  1233  000478  0E00               	movlw	0
  1234  00047A  6E13               	movwf	butnEvent@timereturn+1,c
  1235  00047C  0E07               	movlw	7
  1236  00047E  6E12               	movwf	butnEvent@timereturn,c
  1237  000480                     l2060:
  1238                           
  1239                           ;fm.h: 730: }
  1240                           ;fm.h: 732: return timereturn;
  1241  000480  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1242  000484  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1243  000488  0012               	return	
  1244  00048A                     l2066:
  1245                           
  1246                           ;fm.h: 735: timereturn = 0;
  1247  00048A  0E00               	movlw	0
  1248  00048C  6E13               	movwf	butnEvent@timereturn+1,c
  1249  00048E  0E00               	movlw	0
  1250  000490  6E12               	movwf	butnEvent@timereturn,c
  1251                           
  1252                           ;fm.h: 736: return timereturn;
  1253  000492  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1254  000496  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1255  00049A  0012               	return	
  1256  00049C                     l243:
  1257                           
  1258                           ;fm.h: 737: }
  1259                           ;fm.h: 738: }
  1260                           ;fm.h: 740: if (PORTBbits.RB0 == 0)
  1261  00049C  B081               	btfsc	3969,0,c	;volatile
  1262  00049E  D026               	goto	l251
  1263                           
  1264                           ;fm.h: 741: {
  1265                           ;fm.h: 742: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1266  0004A0  0E00               	movlw	0
  1267  0004A2  6E0D               	movwf	butnEvent@c_622+1,c
  1268  0004A4  0E00               	movlw	0
  1269  0004A6  6E0C               	movwf	butnEvent@c_622,c
  1270  0004A8  BE0D               	btfsc	butnEvent@c_622+1,7,c
  1271  0004AA  D006               	goto	l2078
  1272  0004AC  500D               	movf	butnEvent@c_622+1,w,c
  1273  0004AE  E112               	bnz	l253
  1274  0004B0  0E0B               	movlw	11
  1275  0004B2  5C0C               	subwf	butnEvent@c_622,w,c
  1276  0004B4  B0D8               	btfsc	status,0,c
  1277  0004B6  D00E               	goto	l253
  1278  0004B8                     l2078:
  1279  0004B8  0E0D               	movlw	13
  1280  0004BA  6E03               	movwf	??_butnEvent& (0+255),c
  1281  0004BC  0EFC               	movlw	252
  1282  0004BE                     u1817:
  1283  0004BE  2EE8               	decfsz	wreg,f,c
  1284  0004C0  D7FE               	goto	u1817
  1285  0004C2  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1286  0004C4  D7FC               	goto	u1817
  1287  0004C6  4A0C               	infsnz	butnEvent@c_622,f,c
  1288  0004C8  2A0D               	incf	butnEvent@c_622+1,f,c
  1289  0004CA  BE0D               	btfsc	butnEvent@c_622+1,7,c
  1290  0004CC  D7F5               	goto	l2078
  1291  0004CE  500D               	movf	butnEvent@c_622+1,w,c
  1292  0004D0  E101               	bnz	u1570
  1293  0004D2  D7EE               	goto	L7
  1294  0004D4                     u1570:
  1295  0004D4                     l253:
  1296                           
  1297                           ;fm.h: 743: if (PORTBbits.RB0 == 0)
  1298  0004D4  B081               	btfsc	3969,0,c	;volatile
  1299  0004D6  D005               	goto	l2088
  1300                           
  1301                           ;fm.h: 744: {
  1302                           ;fm.h: 745: return 3;
  1303  0004D8  0E00               	movlw	0
  1304  0004DA  6E02               	movwf	?_butnEvent+1,c
  1305  0004DC  0E03               	movlw	3
  1306  0004DE  6E01               	movwf	?_butnEvent,c
  1307  0004E0  0012               	return	
  1308  0004E2                     l2088:
  1309                           
  1310                           ;fm.h: 747: return 0;
  1311  0004E2  0E00               	movlw	0
  1312  0004E4  6E02               	movwf	?_butnEvent+1,c
  1313  0004E6  0E00               	movlw	0
  1314  0004E8  6E01               	movwf	?_butnEvent,c
  1315  0004EA  0012               	return	
  1316  0004EC                     l251:
  1317                           
  1318                           ;fm.h: 748: }
  1319                           ;fm.h: 749: }
  1320                           ;fm.h: 751: if (PORTBbits.RB5 == 0)
  1321  0004EC  BA81               	btfsc	3969,5,c	;volatile
  1322  0004EE  D026               	goto	l256
  1323                           
  1324                           ;fm.h: 752: {
  1325                           ;fm.h: 753: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1326  0004F0  0E00               	movlw	0
  1327  0004F2  6E0F               	movwf	butnEvent@c_623+1,c
  1328  0004F4  0E00               	movlw	0
  1329  0004F6  6E0E               	movwf	butnEvent@c_623,c
  1330  0004F8  BE0F               	btfsc	butnEvent@c_623+1,7,c
  1331  0004FA  D006               	goto	l2098
  1332  0004FC  500F               	movf	butnEvent@c_623+1,w,c
  1333  0004FE  E112               	bnz	l258
  1334  000500  0E0B               	movlw	11
  1335  000502  5C0E               	subwf	butnEvent@c_623,w,c
  1336  000504  B0D8               	btfsc	status,0,c
  1337  000506  D00E               	goto	l258
  1338  000508                     l2098:
  1339  000508  0E0D               	movlw	13
  1340  00050A  6E03               	movwf	??_butnEvent& (0+255),c
  1341  00050C  0EFC               	movlw	252
  1342  00050E                     u1827:
  1343  00050E  2EE8               	decfsz	wreg,f,c
  1344  000510  D7FE               	goto	u1827
  1345  000512  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1346  000514  D7FC               	goto	u1827
  1347  000516  4A0E               	infsnz	butnEvent@c_623,f,c
  1348  000518  2A0F               	incf	butnEvent@c_623+1,f,c
  1349  00051A  BE0F               	btfsc	butnEvent@c_623+1,7,c
  1350  00051C  D7F5               	goto	l2098
  1351  00051E  500F               	movf	butnEvent@c_623+1,w,c
  1352  000520  E101               	bnz	u1610
  1353  000522  D7EE               	goto	L8
  1354  000524                     u1610:
  1355  000524                     l258:
  1356                           
  1357                           ;fm.h: 754: if (PORTBbits.RB5 == 0)
  1358  000524  BA81               	btfsc	3969,5,c	;volatile
  1359  000526  D005               	goto	l2108
  1360                           
  1361                           ;fm.h: 755: {
  1362                           ;fm.h: 756: return 4;
  1363  000528  0E00               	movlw	0
  1364  00052A  6E02               	movwf	?_butnEvent+1,c
  1365  00052C  0E04               	movlw	4
  1366  00052E  6E01               	movwf	?_butnEvent,c
  1367  000530  0012               	return	
  1368  000532                     l2108:
  1369                           
  1370                           ;fm.h: 758: return 0;
  1371  000532  0E00               	movlw	0
  1372  000534  6E02               	movwf	?_butnEvent+1,c
  1373  000536  0E00               	movlw	0
  1374  000538  6E01               	movwf	?_butnEvent,c
  1375  00053A  0012               	return	
  1376  00053C                     l256:
  1377                           
  1378                           ;fm.h: 759: }
  1379                           ;fm.h: 760: }
  1380                           ;fm.h: 762: if (PORTGbits.RG0 == 0)
  1381  00053C  B086               	btfsc	3974,0,c	;volatile
  1382  00053E  D025               	goto	l2132
  1383                           
  1384                           ;fm.h: 763: {
  1385                           ;fm.h: 764: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
  1386  000540  0E00               	movlw	0
  1387  000542  6E11               	movwf	butnEvent@c_630+1,c
  1388  000544  0E00               	movlw	0
  1389  000546  6E10               	movwf	butnEvent@c_630,c
  1390  000548  BE11               	btfsc	butnEvent@c_630+1,7,c
  1391  00054A  D006               	goto	l2118
  1392  00054C  5011               	movf	butnEvent@c_630+1,w,c
  1393  00054E  E112               	bnz	l263
  1394  000550  0E0B               	movlw	11
  1395  000552  5C10               	subwf	butnEvent@c_630,w,c
  1396  000554  B0D8               	btfsc	status,0,c
  1397  000556  D00E               	goto	l263
  1398  000558                     l2118:
  1399  000558  0E0D               	movlw	13
  1400  00055A  6E03               	movwf	??_butnEvent& (0+255),c
  1401  00055C  0EFC               	movlw	252
  1402  00055E                     u1837:
  1403  00055E  2EE8               	decfsz	wreg,f,c
  1404  000560  D7FE               	goto	u1837
  1405  000562  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1406  000564  D7FC               	goto	u1837
  1407  000566  4A10               	infsnz	butnEvent@c_630,f,c
  1408  000568  2A11               	incf	butnEvent@c_630+1,f,c
  1409  00056A  BE11               	btfsc	butnEvent@c_630+1,7,c
  1410  00056C  D7F5               	goto	l2118
  1411  00056E  5011               	movf	butnEvent@c_630+1,w,c
  1412  000570  E101               	bnz	u1650
  1413  000572  D7EE               	goto	L9
  1414  000574                     u1650:
  1415  000574                     l263:
  1416                           
  1417                           ;fm.h: 765: if (PORTGbits.RG0 == 0)
  1418  000574  B086               	btfsc	3974,0,c	;volatile
  1419  000576  D005               	goto	l2128
  1420                           
  1421                           ;fm.h: 766: {
  1422                           ;fm.h: 767: return 5;
  1423  000578  0E00               	movlw	0
  1424  00057A  6E02               	movwf	?_butnEvent+1,c
  1425  00057C  0E05               	movlw	5
  1426  00057E  6E01               	movwf	?_butnEvent,c
  1427  000580  0012               	return	
  1428  000582                     l2128:
  1429                           
  1430                           ;fm.h: 769: return 0;
  1431  000582  0E00               	movlw	0
  1432  000584  6E02               	movwf	?_butnEvent+1,c
  1433  000586  0E00               	movlw	0
  1434  000588  D7FA               	goto	L10
  1435  00058A                     l2132:
  1436                           
  1437                           ;fm.h: 770: }
  1438                           ;fm.h: 771: }
  1439                           ;fm.h: 772: return 0;
  1440  00058A  0E00               	movlw	0
  1441  00058C  6E02               	movwf	?_butnEvent+1,c
  1442  00058E  0E00               	movlw	0
  1443  000590  6E01               	movwf	?_butnEvent,c
  1444  000592  0012               	return	
  1445  000594                     __end_of_butnEvent:
  1446                           	opt stack 0
  1447                           tblptru	equ	0xFF8
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _VolumeUp *****************
  1453 ;; Defined at:
  1454 ;;		line 806 in file "fm.h"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  dir             1   41[COMRAM] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      unsigned char 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1468 ;;      Params:         0       0       0       0
  1469 ;;      Locals:         1       0       0       0
  1470 ;;      Temps:          0       0       0       0
  1471 ;;      Totals:         1       0       0       0
  1472 ;;Total ram usage:        1 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    7
  1475 ;; This function calls:
  1476 ;;		_delay_10ms
  1477 ;;		_seek
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text6
  1484  000FA6                     __ptext6:
  1485                           	opt stack 0
  1486  000FA6                     _VolumeUp:
  1487                           	opt stack 23
  1488                           
  1489                           ;fm.h: 807: char dir = 'u';
  1490                           
  1491                           ;incstack = 0
  1492  000FA6  0E75               	movlw	117
  1493  000FA8  6E2A               	movwf	VolumeUp@dir,c
  1494                           
  1495                           ;fm.h: 808: seek(dir);
  1496  000FAA  502A               	movf	VolumeUp@dir,w,c
  1497  000FAC  ECA0  F003         	call	_seek
  1498                           
  1499                           ;fm.h: 811: PORTCbits.RC6 = 1;
  1500  000FB0  8C82               	bsf	3970,6,c	;volatile
  1501                           
  1502                           ;fm.h: 812: delay_10ms(10);
  1503  000FB2  0E00               	movlw	0
  1504  000FB4  6E02               	movwf	delay_10ms@n+1,c
  1505  000FB6  0E0A               	movlw	10
  1506  000FB8  6E01               	movwf	delay_10ms@n,c
  1507  000FBA  EC95  F007         	call	_delay_10ms	;wreg free
  1508                           
  1509                           ;fm.h: 813: PORTCbits.RC6 = 0;
  1510  000FBE  9C82               	bcf	3970,6,c	;volatile
  1511  000FC0  0012               	return	
  1512  000FC2                     __end_of_VolumeUp:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _VolumeDown *****************
  1520 ;; Defined at:
  1521 ;;		line 818 in file "fm.h"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  dir             1   41[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      unsigned char 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1535 ;;      Params:         0       0       0       0
  1536 ;;      Locals:         1       0       0       0
  1537 ;;      Temps:          0       0       0       0
  1538 ;;      Totals:         1       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    7
  1542 ;; This function calls:
  1543 ;;		_delay_10ms
  1544 ;;		_seek
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text7
  1551  000FC2                     __ptext7:
  1552                           	opt stack 0
  1553  000FC2                     _VolumeDown:
  1554                           	opt stack 23
  1555                           
  1556                           ;fm.h: 819: char dir = 'd';
  1557                           
  1558                           ;incstack = 0
  1559  000FC2  0E64               	movlw	100
  1560  000FC4  6E2A               	movwf	VolumeDown@dir,c
  1561                           
  1562                           ;fm.h: 820: seek(dir);
  1563  000FC6  502A               	movf	VolumeDown@dir,w,c
  1564  000FC8  ECA0  F003         	call	_seek
  1565                           
  1566                           ;fm.h: 823: PORTCbits.RC7 = 1;
  1567  000FCC  8E82               	bsf	3970,7,c	;volatile
  1568                           
  1569                           ;fm.h: 824: delay_10ms(10);
  1570  000FCE  0E00               	movlw	0
  1571  000FD0  6E02               	movwf	delay_10ms@n+1,c
  1572  000FD2  0E0A               	movlw	10
  1573  000FD4  6E01               	movwf	delay_10ms@n,c
  1574  000FD6  EC95  F007         	call	_delay_10ms	;wreg free
  1575                           
  1576                           ;fm.h: 825: PORTCbits.RC7 = 0;
  1577  000FDA  9E82               	bcf	3970,7,c	;volatile
  1578  000FDC  0012               	return	
  1579  000FDE                     __end_of_VolumeDown:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           postinc0	equ	0xFEE
  1583                           wreg	equ	0xFE8
  1584                           status	equ	0xFD8
  1585                           
  1586 ;; *************** function _seek *****************
  1587 ;; Defined at:
  1588 ;;		line 288 in file "fm.h"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  direction       1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  direction       1   36[COMRAM] unsigned char 
  1593 ;;  status          2   39[COMRAM] unsigned int 
  1594 ;;  temp            2   37[COMRAM] unsigned short 
  1595 ;;  curChannel      2   34[COMRAM] unsigned short 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2  130[None  ] unsigned short 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1605 ;;      Params:         0       0       0       0
  1606 ;;      Locals:         7       0       0       0
  1607 ;;      Temps:          0       0       0       0
  1608 ;;      Totals:         7       0       0       0
  1609 ;;Total ram usage:        7 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    6
  1612 ;; This function calls:
  1613 ;;		_FMread
  1614 ;;		_FMwrite
  1615 ;;		_frequency
  1616 ;;		_setBitInRegister
  1617 ;;		_setHardmute
  1618 ;;		_setSeekDirection
  1619 ;;		_tuneWithAutoHiLo
  1620 ;; This function is called by:
  1621 ;;		_VolumeUp
  1622 ;;		_VolumeDown
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text8
  1627  000740                     __ptext8:
  1628                           	opt stack 0
  1629  000740                     _seek:
  1630                           	opt stack 23
  1631                           
  1632                           ;incstack = 0
  1633                           ;seek@direction stored from wreg
  1634  000740  6E25               	movwf	seek@direction,c
  1635                           
  1636                           ;fm.h: 303: unsigned short curChannel;
  1637                           ;fm.h: 304: unsigned short temp = 0;
  1638  000742  0E00               	movlw	0
  1639  000744  6E27               	movwf	seek@temp+1,c
  1640  000746  0E00               	movlw	0
  1641  000748  6E26               	movwf	seek@temp,c
  1642                           
  1643                           ;fm.h: 305: unsigned int status;
  1644                           ;fm.h: 308: setHardmute(1);
  1645  00074A  0E01               	movlw	1
  1646  00074C  EC82  F007         	call	_setHardmute
  1647                           
  1648                           ;fm.h: 310: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1649  000750  0E56               	movlw	low (_tune_bit+2)
  1650  000752  6EF6               	movwf	tblptrl,c
  1651  000754  0E03               	movlw	high (_tune_bit+2)
  1652  000756  6EF7               	movwf	tblptrh,c
  1653  000758                     	if	0	;tblptru may be non-zero
  1654  000758                     	endif
  1655  000758                     	if	0	;tblptru may be non-zero
  1656  000758                     	endif
  1657  000758  0008               	tblrd		*
  1658  00075A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1659  00075E  0E00               	movlw	0
  1660  000760  6E09               	movwf	setBitInRegister@bitState,c
  1661  000762  0E54               	movlw	low _tune_bit
  1662  000764  6EF6               	movwf	tblptrl,c
  1663  000766                     	if	1	;There is more than 1 active tblptr byte
  1664  000766  0E03               	movlw	high _tune_bit
  1665  000768  6EF7               	movwf	tblptrh,c
  1666  00076A                     	endif
  1667  00076A                     	if	0	;There are less than 3 active tblptr bytes
  1668  00076A                     	endif
  1669  00076A  0008               	tblrd		*
  1670  00076C  50F5               	movf	tablat,w,c
  1671  00076E  ECB8  F005         	call	_setBitInRegister
  1672                           
  1673                           ;fm.h: 315: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1674  000772  0E4A               	movlw	low (_seek_bit+2)
  1675  000774  6EF6               	movwf	tblptrl,c
  1676  000776  0E03               	movlw	high (_seek_bit+2)
  1677  000778  6EF7               	movwf	tblptrh,c
  1678  00077A                     	if	0	;tblptru may be non-zero
  1679  00077A                     	endif
  1680  00077A                     	if	0	;tblptru may be non-zero
  1681  00077A                     	endif
  1682  00077A  0008               	tblrd		*
  1683  00077C  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1684  000780  0E00               	movlw	0
  1685  000782  6E09               	movwf	setBitInRegister@bitState,c
  1686  000784  0E48               	movlw	low _seek_bit
  1687  000786  6EF6               	movwf	tblptrl,c
  1688  000788                     	if	1	;There is more than 1 active tblptr byte
  1689  000788  0E03               	movlw	high _seek_bit
  1690  00078A  6EF7               	movwf	tblptrh,c
  1691  00078C                     	endif
  1692  00078C                     	if	0	;There are less than 3 active tblptr bytes
  1693  00078C                     	endif
  1694  00078C  0008               	tblrd		*
  1695  00078E  50F5               	movf	tablat,w,c
  1696  000790  ECB8  F005         	call	_setBitInRegister
  1697                           
  1698                           ;fm.h: 318: setSeekDirection(direction);
  1699  000794  5025               	movf	seek@direction,w,c
  1700  000796  ECD4  F006         	call	_setSeekDirection
  1701                           
  1702                           ;fm.h: 321: setBitInRegister(seek_bit[0], seek_bit[1], 1);
  1703  00079A  0E4A               	movlw	low (_seek_bit+2)
  1704  00079C  6EF6               	movwf	tblptrl,c
  1705  00079E  0E03               	movlw	high (_seek_bit+2)
  1706  0007A0  6EF7               	movwf	tblptrh,c
  1707  0007A2                     	if	0	;tblptru may be non-zero
  1708  0007A2                     	endif
  1709  0007A2                     	if	0	;tblptru may be non-zero
  1710  0007A2                     	endif
  1711  0007A2  0008               	tblrd		*
  1712  0007A4  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1713  0007A8  0E01               	movlw	1
  1714  0007AA  6E09               	movwf	setBitInRegister@bitState,c
  1715  0007AC  0E48               	movlw	low _seek_bit
  1716  0007AE  6EF6               	movwf	tblptrl,c
  1717  0007B0                     	if	1	;There is more than 1 active tblptr byte
  1718  0007B0  0E03               	movlw	high _seek_bit
  1719  0007B2  6EF7               	movwf	tblptrh,c
  1720  0007B4                     	endif
  1721  0007B4                     	if	0	;There are less than 3 active tblptr bytes
  1722  0007B4                     	endif
  1723  0007B4  0008               	tblrd		*
  1724  0007B6  50F5               	movf	tablat,w,c
  1725  0007B8  ECB8  F005         	call	_setBitInRegister
  1726                           
  1727                           ;fm.h: 323: while (temp == 0) {
  1728  0007BC  D00E               	goto	l131
  1729  0007BE                     l1866:
  1730                           
  1731                           ;fm.h: 324: if (FMread(0x13, &status) != 0) return 1;
  1732  0007BE  0E28               	movlw	low seek@status
  1733  0007C0  6E03               	movwf	FMread@data,c
  1734  0007C2  0E00               	movlw	high seek@status
  1735  0007C4  6E04               	movwf	FMread@data+1,c
  1736  0007C6  0E13               	movlw	19
  1737  0007C8  ECF0  F004         	call	_FMread
  1738  0007CC  0900               	iorlw	0
  1739  0007CE  A4D8               	btfss	status,2,c
  1740  0007D0  0012               	return	
  1741                           
  1742                           ;fm.h: 325: temp = status & 0x0020;
  1743                           
  1744                           ;	Return value of _seek is never used
  1745  0007D2  0E20               	movlw	32
  1746  0007D4  1428               	andwf	seek@status,w,c
  1747  0007D6  6E26               	movwf	seek@temp,c
  1748  0007D8  6A27               	clrf	seek@temp+1,c
  1749  0007DA                     l131:
  1750  0007DA  5026               	movf	seek@temp,w,c
  1751  0007DC  1027               	iorwf	seek@temp+1,w,c
  1752  0007DE  B4D8               	btfsc	status,2,c
  1753  0007E0  D7EE               	goto	l1866
  1754                           
  1755                           ;fm.h: 326: }
  1756                           ;fm.h: 329: if (FMread(0x13, &status) != 0) return 1;
  1757  0007E2  0E28               	movlw	low seek@status
  1758  0007E4  6E03               	movwf	FMread@data,c
  1759  0007E6  0E00               	movlw	high seek@status
  1760  0007E8  6E04               	movwf	FMread@data+1,c
  1761  0007EA  0E13               	movlw	19
  1762  0007EC  ECF0  F004         	call	_FMread
  1763  0007F0  0900               	iorlw	0
  1764  0007F2  A4D8               	btfss	status,2,c
  1765  0007F4  0012               	return	
  1766                           
  1767                           ;fm.h: 330: temp = status & 0x0010;
  1768                           
  1769                           ;	Return value of _seek is never used
  1770  0007F6  0E10               	movlw	16
  1771  0007F8  1428               	andwf	seek@status,w,c
  1772  0007FA  6E26               	movwf	seek@temp,c
  1773  0007FC  6A27               	clrf	seek@temp+1,c
  1774                           
  1775                           ;fm.h: 333: if (temp != 0)
  1776  0007FE  5026               	movf	seek@temp,w,c
  1777  000800  1027               	iorwf	seek@temp+1,w,c
  1778  000802  A4D8               	btfss	status,2,c
  1779                           
  1780                           ;fm.h: 334: tuneWithAutoHiLo();
  1781  000804  ECCA  F002         	call	_tuneWithAutoHiLo	;wreg free
  1782                           
  1783                           ;fm.h: 337: setHardmute(0);
  1784  000808  0E00               	movlw	0
  1785  00080A  EC82  F007         	call	_setHardmute
  1786                           
  1787                           ;fm.h: 339: curChannel = frequency() - 690;
  1788  00080E  EC48  F007         	call	_frequency	;wreg free
  1789  000812  0E4E               	movlw	78
  1790  000814  240C               	addwf	?_frequency,w,c
  1791  000816  6E23               	movwf	seek@curChannel,c
  1792  000818  0EFD               	movlw	253
  1793  00081A  200D               	addwfc	?_frequency+1,w,c
  1794  00081C  6E24               	movwf	seek@curChannel+1,c
  1795                           
  1796                           ;fm.h: 340: regImg[2] = regImg[2] & 0xFE00;
  1797  00081E  0E00               	movlw	0
  1798  000820  1435               	andwf	_regImg+4,w,c
  1799  000822  6E35               	movwf	_regImg+4,c
  1800  000824  0EFE               	movlw	254
  1801  000826  1436               	andwf	_regImg+5,w,c
  1802  000828  6E36               	movwf	_regImg+5,c
  1803                           
  1804                           ;fm.h: 341: regImg[2] |= curChannel;
  1805  00082A  5023               	movf	seek@curChannel,w,c
  1806  00082C  1235               	iorwf	_regImg+4,f,c
  1807  00082E  5024               	movf	seek@curChannel+1,w,c
  1808  000830  1236               	iorwf	_regImg+5,f,c
  1809                           
  1810                           ;fm.h: 342: FMwrite(2);
  1811  000832  0E02               	movlw	2
  1812  000834  EC64  F006         	call	_FMwrite
  1813                           
  1814                           ;fm.h: 344: return frequency();
  1815                           ;	Return value of _seek is never used
  1816  000838  EC48  F007         	call	_frequency	;wreg free
  1817  00083C  0012               	return	
  1818  00083E                     __end_of_seek:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _tuneWithAutoHiLo *****************
  1829 ;; Defined at:
  1830 ;;		line 393 in file "fm.h"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  status          2   32[COMRAM] unsigned int 
  1835 ;;  temp            2   28[COMRAM] unsigned short 
  1836 ;;  curChannel      2   26[COMRAM] unsigned short 
  1837 ;;  rssi_hi         1   31[COMRAM] unsigned char 
  1838 ;;  rssi_lo         1   30[COMRAM] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1848 ;;      Params:         0       0       0       0
  1849 ;;      Locals:         8       0       0       0
  1850 ;;      Temps:          0       0       0       0
  1851 ;;      Totals:         8       0       0       0
  1852 ;;Total ram usage:        8 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    5
  1855 ;; This function calls:
  1856 ;;		_FMread
  1857 ;;		_FMwrite
  1858 ;;		_frequency
  1859 ;;		_readLOInjection
  1860 ;;		_setBitInRegister
  1861 ;;		_setHardmute
  1862 ;; This function is called by:
  1863 ;;		_seek
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text9
  1868  000594                     __ptext9:
  1869                           	opt stack 0
  1870  000594                     _tuneWithAutoHiLo:
  1871                           	opt stack 23
  1872                           
  1873                           ;fm.h: 421: unsigned char rssi_lo, rssi_hi;
  1874                           ;fm.h: 422: unsigned short curChannel, temp = 0;
  1875                           
  1876                           ;incstack = 0
  1877  000594  0E00               	movlw	0
  1878  000596  6E1E               	movwf	tuneWithAutoHiLo@temp+1,c
  1879  000598  0E00               	movlw	0
  1880  00059A  6E1D               	movwf	tuneWithAutoHiLo@temp,c
  1881                           
  1882                           ;fm.h: 423: unsigned int status;
  1883                           ;fm.h: 426: setHardmute(1);
  1884  00059C  0E01               	movlw	1
  1885  00059E  EC82  F007         	call	_setHardmute
  1886                           
  1887                           ;fm.h: 428: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1888  0005A2  0E56               	movlw	low (_tune_bit+2)
  1889  0005A4  6EF6               	movwf	tblptrl,c
  1890  0005A6  0E03               	movlw	high (_tune_bit+2)
  1891  0005A8  6EF7               	movwf	tblptrh,c
  1892  0005AA                     	if	0	;tblptru may be non-zero
  1893  0005AA                     	endif
  1894  0005AA                     	if	0	;tblptru may be non-zero
  1895  0005AA                     	endif
  1896  0005AA  0008               	tblrd		*
  1897  0005AC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1898  0005B0  0E00               	movlw	0
  1899  0005B2  6E09               	movwf	setBitInRegister@bitState,c
  1900  0005B4  0E54               	movlw	low _tune_bit
  1901  0005B6  6EF6               	movwf	tblptrl,c
  1902  0005B8                     	if	1	;There is more than 1 active tblptr byte
  1903  0005B8  0E03               	movlw	high _tune_bit
  1904  0005BA  6EF7               	movwf	tblptrh,c
  1905  0005BC                     	endif
  1906  0005BC                     	if	0	;There are less than 3 active tblptr bytes
  1907  0005BC                     	endif
  1908  0005BC  0008               	tblrd		*
  1909  0005BE  50F5               	movf	tablat,w,c
  1910  0005C0  ECB8  F005         	call	_setBitInRegister
  1911                           
  1912                           ;fm.h: 431: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1913  0005C4  0E4A               	movlw	low (_seek_bit+2)
  1914  0005C6  6EF6               	movwf	tblptrl,c
  1915  0005C8  0E03               	movlw	high (_seek_bit+2)
  1916  0005CA  6EF7               	movwf	tblptrh,c
  1917  0005CC                     	if	0	;tblptru may be non-zero
  1918  0005CC                     	endif
  1919  0005CC                     	if	0	;tblptru may be non-zero
  1920  0005CC                     	endif
  1921  0005CC  0008               	tblrd		*
  1922  0005CE  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1923  0005D2  0E00               	movlw	0
  1924  0005D4  6E09               	movwf	setBitInRegister@bitState,c
  1925  0005D6  0E48               	movlw	low _seek_bit
  1926  0005D8  6EF6               	movwf	tblptrl,c
  1927  0005DA                     	if	1	;There is more than 1 active tblptr byte
  1928  0005DA  0E03               	movlw	high _seek_bit
  1929  0005DC  6EF7               	movwf	tblptrh,c
  1930  0005DE                     	endif
  1931  0005DE                     	if	0	;There are less than 3 active tblptr bytes
  1932  0005DE                     	endif
  1933  0005DE  0008               	tblrd		*
  1934  0005E0  50F5               	movf	tablat,w,c
  1935  0005E2  ECB8  F005         	call	_setBitInRegister
  1936                           
  1937                           ;fm.h: 434: curChannel = frequency() - 690;
  1938  0005E6  EC48  F007         	call	_frequency	;wreg free
  1939  0005EA  0E4E               	movlw	78
  1940  0005EC  240C               	addwf	?_frequency,w,c
  1941  0005EE  6E1B               	movwf	tuneWithAutoHiLo@curChannel,c
  1942  0005F0  0EFD               	movlw	253
  1943  0005F2  200D               	addwfc	?_frequency+1,w,c
  1944  0005F4  6E1C               	movwf	tuneWithAutoHiLo@curChannel+1,c
  1945                           
  1946                           ;fm.h: 435: regImg[2] = regImg[2] & 0xFE00;
  1947  0005F6  0E00               	movlw	0
  1948  0005F8  1435               	andwf	_regImg+4,w,c
  1949  0005FA  6E35               	movwf	_regImg+4,c
  1950  0005FC  0EFE               	movlw	254
  1951  0005FE  1436               	andwf	_regImg+5,w,c
  1952  000600  6E36               	movwf	_regImg+5,c
  1953                           
  1954                           ;fm.h: 436: regImg[2] |= curChannel;
  1955  000602  501B               	movf	tuneWithAutoHiLo@curChannel,w,c
  1956  000604  1235               	iorwf	_regImg+4,f,c
  1957  000606  501C               	movf	tuneWithAutoHiLo@curChannel+1,w,c
  1958  000608  1236               	iorwf	_regImg+5,f,c
  1959                           
  1960                           ;fm.h: 437: FMwrite(2);
  1961  00060A  0E02               	movlw	2
  1962  00060C  EC64  F006         	call	_FMwrite
  1963                           
  1964                           ;fm.h: 440: rssi_lo = readLOInjection(0);
  1965  000610  0E00               	movlw	0
  1966  000612  EC1F  F004         	call	_readLOInjection
  1967  000616  6E1F               	movwf	tuneWithAutoHiLo@rssi_lo,c
  1968                           
  1969                           ;fm.h: 443: rssi_hi = readLOInjection(1);
  1970  000618  0E01               	movlw	1
  1971  00061A  EC1F  F004         	call	_readLOInjection
  1972  00061E  6E20               	movwf	tuneWithAutoHiLo@rssi_hi,c
  1973                           
  1974                           ;fm.h: 446: if (rssi_hi > rssi_lo) {
  1975  000620  5020               	movf	tuneWithAutoHiLo@rssi_hi,w,c
  1976  000622  5C1F               	subwf	tuneWithAutoHiLo@rssi_lo,w,c
  1977  000624  B0D8               	btfsc	status,0,c
  1978  000626  D034               	goto	l1808
  1979                           
  1980                           ;fm.h: 448: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 1);
  1981  000628  0E3E               	movlw	low (_hiloctrl1_bit+2)
  1982  00062A  6EF6               	movwf	tblptrl,c
  1983  00062C  0E03               	movlw	high (_hiloctrl1_bit+2)
  1984  00062E  6EF7               	movwf	tblptrh,c
  1985  000630                     	if	0	;tblptru may be non-zero
  1986  000630                     	endif
  1987  000630                     	if	0	;tblptru may be non-zero
  1988  000630                     	endif
  1989  000630  0008               	tblrd		*
  1990  000632  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1991  000636  0E01               	movlw	1
  1992  000638  6E09               	movwf	setBitInRegister@bitState,c
  1993  00063A  0E3C               	movlw	low _hiloctrl1_bit
  1994  00063C  6EF6               	movwf	tblptrl,c
  1995  00063E                     	if	1	;There is more than 1 active tblptr byte
  1996  00063E  0E03               	movlw	high _hiloctrl1_bit
  1997  000640  6EF7               	movwf	tblptrh,c
  1998  000642                     	endif
  1999  000642                     	if	0	;There are less than 3 active tblptr bytes
  2000  000642                     	endif
  2001  000642  0008               	tblrd		*
  2002  000644  50F5               	movf	tablat,w,c
  2003  000646  ECB8  F005         	call	_setBitInRegister
  2004                           
  2005                           ;fm.h: 449: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 1);
  2006  00064A  0E42               	movlw	low (_hiloctrl2_bit+2)
  2007  00064C  6EF6               	movwf	tblptrl,c
  2008  00064E  0E03               	movlw	high (_hiloctrl2_bit+2)
  2009  000650  6EF7               	movwf	tblptrh,c
  2010  000652                     	if	0	;tblptru may be non-zero
  2011  000652                     	endif
  2012  000652                     	if	0	;tblptru may be non-zero
  2013  000652                     	endif
  2014  000652  0008               	tblrd		*
  2015  000654  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2016  000658  0E01               	movlw	1
  2017  00065A  6E09               	movwf	setBitInRegister@bitState,c
  2018  00065C  0E40               	movlw	low _hiloctrl2_bit
  2019  00065E  6EF6               	movwf	tblptrl,c
  2020  000660                     	if	1	;There is more than 1 active tblptr byte
  2021  000660  0E03               	movlw	high _hiloctrl2_bit
  2022  000662  6EF7               	movwf	tblptrh,c
  2023  000664                     	endif
  2024  000664                     	if	0	;There are less than 3 active tblptr bytes
  2025  000664                     	endif
  2026  000664  0008               	tblrd		*
  2027  000666  50F5               	movf	tablat,w,c
  2028  000668  ECB8  F005         	call	_setBitInRegister
  2029                           
  2030                           ;fm.h: 450: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 0);
  2031  00066C  0E46               	movlw	low (_hiloside_bit+2)
  2032  00066E  6EF6               	movwf	tblptrl,c
  2033  000670  0E03               	movlw	high (_hiloside_bit+2)
  2034  000672  6EF7               	movwf	tblptrh,c
  2035  000674                     	if	0	;tblptru may be non-zero
  2036  000674                     	endif
  2037  000674                     	if	0	;tblptru may be non-zero
  2038  000674                     	endif
  2039  000674  0008               	tblrd		*
  2040  000676  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2041  00067A  0E00               	movlw	0
  2042  00067C  6E09               	movwf	setBitInRegister@bitState,c
  2043  00067E  0E44               	movlw	low _hiloside_bit
  2044  000680  6EF6               	movwf	tblptrl,c
  2045  000682                     	if	1	;There is more than 1 active tblptr byte
  2046  000682  0E03               	movlw	high _hiloside_bit
  2047  000684  6EF7               	movwf	tblptrh,c
  2048  000686                     	endif
  2049  000686                     	if	0	;There are less than 3 active tblptr bytes
  2050  000686                     	endif
  2051  000686  0008               	tblrd		*
  2052  000688  50F5               	movf	tablat,w,c
  2053  00068A  ECB8  F005         	call	_setBitInRegister
  2054                           
  2055                           ;fm.h: 451: } else {
  2056  00068E  D033               	goto	l151
  2057  000690                     l1808:
  2058                           
  2059                           ;fm.h: 453: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 0);
  2060  000690  0E3E               	movlw	low (_hiloctrl1_bit+2)
  2061  000692  6EF6               	movwf	tblptrl,c
  2062  000694  0E03               	movlw	high (_hiloctrl1_bit+2)
  2063  000696  6EF7               	movwf	tblptrh,c
  2064  000698                     	if	0	;tblptru may be non-zero
  2065  000698                     	endif
  2066  000698                     	if	0	;tblptru may be non-zero
  2067  000698                     	endif
  2068  000698  0008               	tblrd		*
  2069  00069A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2070  00069E  0E00               	movlw	0
  2071  0006A0  6E09               	movwf	setBitInRegister@bitState,c
  2072  0006A2  0E3C               	movlw	low _hiloctrl1_bit
  2073  0006A4  6EF6               	movwf	tblptrl,c
  2074  0006A6                     	if	1	;There is more than 1 active tblptr byte
  2075  0006A6  0E03               	movlw	high _hiloctrl1_bit
  2076  0006A8  6EF7               	movwf	tblptrh,c
  2077  0006AA                     	endif
  2078  0006AA                     	if	0	;There are less than 3 active tblptr bytes
  2079  0006AA                     	endif
  2080  0006AA  0008               	tblrd		*
  2081  0006AC  50F5               	movf	tablat,w,c
  2082  0006AE  ECB8  F005         	call	_setBitInRegister
  2083                           
  2084                           ;fm.h: 454: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 0);
  2085  0006B2  0E42               	movlw	low (_hiloctrl2_bit+2)
  2086  0006B4  6EF6               	movwf	tblptrl,c
  2087  0006B6  0E03               	movlw	high (_hiloctrl2_bit+2)
  2088  0006B8  6EF7               	movwf	tblptrh,c
  2089  0006BA                     	if	0	;tblptru may be non-zero
  2090  0006BA                     	endif
  2091  0006BA                     	if	0	;tblptru may be non-zero
  2092  0006BA                     	endif
  2093  0006BA  0008               	tblrd		*
  2094  0006BC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2095  0006C0  0E00               	movlw	0
  2096  0006C2  6E09               	movwf	setBitInRegister@bitState,c
  2097  0006C4  0E40               	movlw	low _hiloctrl2_bit
  2098  0006C6  6EF6               	movwf	tblptrl,c
  2099  0006C8                     	if	1	;There is more than 1 active tblptr byte
  2100  0006C8  0E03               	movlw	high _hiloctrl2_bit
  2101  0006CA  6EF7               	movwf	tblptrh,c
  2102  0006CC                     	endif
  2103  0006CC                     	if	0	;There are less than 3 active tblptr bytes
  2104  0006CC                     	endif
  2105  0006CC  0008               	tblrd		*
  2106  0006CE  50F5               	movf	tablat,w,c
  2107  0006D0  ECB8  F005         	call	_setBitInRegister
  2108                           
  2109                           ;fm.h: 455: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 1);
  2110  0006D4  0E46               	movlw	low (_hiloside_bit+2)
  2111  0006D6  6EF6               	movwf	tblptrl,c
  2112  0006D8  0E03               	movlw	high (_hiloside_bit+2)
  2113  0006DA  6EF7               	movwf	tblptrh,c
  2114  0006DC                     	if	0	;tblptru may be non-zero
  2115  0006DC                     	endif
  2116  0006DC                     	if	0	;tblptru may be non-zero
  2117  0006DC                     	endif
  2118  0006DC  0008               	tblrd		*
  2119  0006DE  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2120  0006E2  0E01               	movlw	1
  2121  0006E4  6E09               	movwf	setBitInRegister@bitState,c
  2122  0006E6  0E44               	movlw	low _hiloside_bit
  2123  0006E8  6EF6               	movwf	tblptrl,c
  2124  0006EA                     	if	1	;There is more than 1 active tblptr byte
  2125  0006EA  0E03               	movlw	high _hiloside_bit
  2126  0006EC  6EF7               	movwf	tblptrh,c
  2127  0006EE                     	endif
  2128  0006EE                     	if	0	;There are less than 3 active tblptr bytes
  2129  0006EE                     	endif
  2130  0006EE  0008               	tblrd		*
  2131  0006F0  50F5               	movf	tablat,w,c
  2132  0006F2  ECB8  F005         	call	_setBitInRegister
  2133  0006F6                     l151:
  2134                           
  2135                           ;fm.h: 456: }
  2136                           ;fm.h: 459: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2137  0006F6  0E56               	movlw	low (_tune_bit+2)
  2138  0006F8  6EF6               	movwf	tblptrl,c
  2139  0006FA  0E03               	movlw	high (_tune_bit+2)
  2140  0006FC  6EF7               	movwf	tblptrh,c
  2141  0006FE                     	if	0	;tblptru may be non-zero
  2142  0006FE                     	endif
  2143  0006FE                     	if	0	;tblptru may be non-zero
  2144  0006FE                     	endif
  2145  0006FE  0008               	tblrd		*
  2146  000700  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2147  000704  0E01               	movlw	1
  2148  000706  6E09               	movwf	setBitInRegister@bitState,c
  2149  000708  0E54               	movlw	low _tune_bit
  2150  00070A  6EF6               	movwf	tblptrl,c
  2151  00070C                     	if	1	;There is more than 1 active tblptr byte
  2152  00070C  0E03               	movlw	high _tune_bit
  2153  00070E  6EF7               	movwf	tblptrh,c
  2154  000710                     	endif
  2155  000710                     	if	0	;There are less than 3 active tblptr bytes
  2156  000710                     	endif
  2157  000710  0008               	tblrd		*
  2158  000712  50F5               	movf	tablat,w,c
  2159  000714  ECB8  F005         	call	_setBitInRegister
  2160                           
  2161                           ;fm.h: 462: while (temp == 0) {
  2162  000718  D00B               	goto	l152
  2163  00071A                     l1810:
  2164                           
  2165                           ;fm.h: 463: if (FMread(0x13, &status) == 0);
  2166  00071A  0E21               	movlw	low tuneWithAutoHiLo@status
  2167  00071C  6E03               	movwf	FMread@data,c
  2168  00071E  0E00               	movlw	high tuneWithAutoHiLo@status
  2169  000720  6E04               	movwf	FMread@data+1,c
  2170  000722  0E13               	movlw	19
  2171  000724  ECF0  F004         	call	_FMread
  2172                           
  2173                           ;fm.h: 464: temp = status & 0x0020;
  2174  000728  0E20               	movlw	32
  2175  00072A  1421               	andwf	tuneWithAutoHiLo@status,w,c
  2176  00072C  6E1D               	movwf	tuneWithAutoHiLo@temp,c
  2177  00072E  6A1E               	clrf	tuneWithAutoHiLo@temp+1,c
  2178  000730                     l152:
  2179  000730  501D               	movf	tuneWithAutoHiLo@temp,w,c
  2180  000732  101E               	iorwf	tuneWithAutoHiLo@temp+1,w,c
  2181  000734  B4D8               	btfsc	status,2,c
  2182  000736  D7F1               	goto	l1810
  2183                           
  2184                           ;fm.h: 465: }
  2185                           ;fm.h: 467: setHardmute(0);
  2186  000738  0E00               	movlw	0
  2187  00073A  EC82  F007         	call	_setHardmute
  2188  00073E  0012               	return		;funcret
  2189  000740                     __end_of_tuneWithAutoHiLo:
  2190                           	opt stack 0
  2191                           tblptru	equ	0xFF8
  2192                           tblptrh	equ	0xFF7
  2193                           tblptrl	equ	0xFF6
  2194                           tablat	equ	0xFF5
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _setHardmute *****************
  2200 ;; Defined at:
  2201 ;;		line 282 in file "fm.h"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  bitState        1    wreg     unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  bitState        1   17[COMRAM] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2215 ;;      Params:         0       0       0       0
  2216 ;;      Locals:         1       0       0       0
  2217 ;;      Temps:          0       0       0       0
  2218 ;;      Totals:         1       0       0       0
  2219 ;;Total ram usage:        1 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    4
  2222 ;; This function calls:
  2223 ;;		_setBitInRegister
  2224 ;; This function is called by:
  2225 ;;		_seek
  2226 ;;		_tuneWithAutoHiLo
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text10
  2231  000F04                     __ptext10:
  2232                           	opt stack 0
  2233  000F04                     _setHardmute:
  2234                           	opt stack 23
  2235                           
  2236                           ;incstack = 0
  2237                           ;setHardmute@bitState stored from wreg
  2238  000F04  6E12               	movwf	setHardmute@bitState,c
  2239                           
  2240                           ;fm.h: 283: setBitInRegister(hardmute_bit[0], hardmute_bit[1], bitState);
  2241  000F06  0E3A               	movlw	low (_hardmute_bit+2)
  2242  000F08  6EF6               	movwf	tblptrl,c
  2243  000F0A  0E03               	movlw	high (_hardmute_bit+2)
  2244  000F0C  6EF7               	movwf	tblptrh,c
  2245  000F0E                     	if	0	;tblptru may be non-zero
  2246  000F0E                     	endif
  2247  000F0E                     	if	0	;tblptru may be non-zero
  2248  000F0E                     	endif
  2249  000F0E  0008               	tblrd		*
  2250  000F10  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2251  000F14  C012  F009         	movff	setHardmute@bitState,setBitInRegister@bitState
  2252  000F18  0E38               	movlw	low _hardmute_bit
  2253  000F1A  6EF6               	movwf	tblptrl,c
  2254  000F1C                     	if	1	;There is more than 1 active tblptr byte
  2255  000F1C  0E03               	movlw	high _hardmute_bit
  2256  000F1E  6EF7               	movwf	tblptrh,c
  2257  000F20                     	endif
  2258  000F20                     	if	0	;There are less than 3 active tblptr bytes
  2259  000F20                     	endif
  2260  000F20  0008               	tblrd		*
  2261  000F22  50F5               	movf	tablat,w,c
  2262  000F24  ECB8  F005         	call	_setBitInRegister
  2263  000F28  0012               	return		;funcret
  2264  000F2A                     __end_of_setHardmute:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _readLOInjection *****************
  2275 ;; Defined at:
  2276 ;;		line 349 in file "fm.h"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  loHi            1    wreg     unsigned char 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  loHi            1   20[COMRAM] unsigned char 
  2281 ;;  status          2   24[COMRAM] unsigned int 
  2282 ;;  temp            2   21[COMRAM] unsigned short 
  2283 ;;  rssi_val        1   23[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2293 ;;      Params:         0       0       0       0
  2294 ;;      Locals:         6       0       0       0
  2295 ;;      Temps:          3       0       0       0
  2296 ;;      Totals:         9       0       0       0
  2297 ;;Total ram usage:        9 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    4
  2300 ;; This function calls:
  2301 ;;		_FMread
  2302 ;;		_FMwrite
  2303 ;;		_setBitInRegister
  2304 ;; This function is called by:
  2305 ;;		_tuneWithAutoHiLo
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text11
  2310  00083E                     __ptext11:
  2311                           	opt stack 0
  2312  00083E                     _readLOInjection:
  2313                           	opt stack 23
  2314                           
  2315                           ;incstack = 0
  2316                           ;readLOInjection@loHi stored from wreg
  2317  00083E  6E15               	movwf	readLOInjection@loHi,c
  2318                           
  2319                           ;fm.h: 359: unsigned char rssi_val = 0;
  2320  000840  0E00               	movlw	0
  2321  000842  6E18               	movwf	readLOInjection@rssi_val,c
  2322                           
  2323                           ;fm.h: 360: unsigned short temp = 0;
  2324  000844  0E00               	movlw	0
  2325  000846  6E17               	movwf	readLOInjection@temp+1,c
  2326  000848  0E00               	movlw	0
  2327  00084A  6E16               	movwf	readLOInjection@temp,c
  2328                           
  2329                           ;fm.h: 361: unsigned int status;
  2330                           ;fm.h: 363: if (loHi == 1)
  2331  00084C  0415               	decf	readLOInjection@loHi,w,c
  2332  00084E  A4D8               	btfss	status,2,c
  2333  000850  D006               	goto	l1748
  2334                           
  2335                           ;fm.h: 364: regImg[11] = regImg[11] | ~(0x7FFA);
  2336  000852  0E05               	movlw	5
  2337  000854  1047               	iorwf	_regImg+22,w,c
  2338  000856  6E47               	movwf	_regImg+22,c
  2339  000858  0E80               	movlw	128
  2340  00085A  1048               	iorwf	_regImg+23,w,c
  2341  00085C  D005               	goto	L11
  2342  00085E                     l1748:
  2343                           
  2344                           ;fm.h: 365: else
  2345                           ;fm.h: 366: regImg[11] = regImg[11] & 0x7FFA;
  2346  00085E  0EFA               	movlw	250
  2347  000860  1447               	andwf	_regImg+22,w,c
  2348  000862  6E47               	movwf	_regImg+22,c
  2349  000864  0E7F               	movlw	127
  2350  000866  1448               	andwf	_regImg+23,w,c
  2351  000868                     L11:
  2352  000868  6E48               	movwf	_regImg+23,c
  2353                           
  2354                           ;fm.h: 368: FMwrite(11);
  2355  00086A  0E0B               	movlw	11
  2356  00086C  EC64  F006         	call	_FMwrite
  2357                           
  2358                           ;fm.h: 371: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2359  000870  0E56               	movlw	low (_tune_bit+2)
  2360  000872  6EF6               	movwf	tblptrl,c
  2361  000874  0E03               	movlw	high (_tune_bit+2)
  2362  000876  6EF7               	movwf	tblptrh,c
  2363  000878                     	if	0	;tblptru may be non-zero
  2364  000878                     	endif
  2365  000878                     	if	0	;tblptru may be non-zero
  2366  000878                     	endif
  2367  000878  0008               	tblrd		*
  2368  00087A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2369  00087E  0E01               	movlw	1
  2370  000880  6E09               	movwf	setBitInRegister@bitState,c
  2371  000882  0E54               	movlw	low _tune_bit
  2372  000884  6EF6               	movwf	tblptrl,c
  2373  000886                     	if	1	;There is more than 1 active tblptr byte
  2374  000886  0E03               	movlw	high _tune_bit
  2375  000888  6EF7               	movwf	tblptrh,c
  2376  00088A                     	endif
  2377  00088A                     	if	0	;There are less than 3 active tblptr bytes
  2378  00088A                     	endif
  2379  00088A  0008               	tblrd		*
  2380  00088C  50F5               	movf	tablat,w,c
  2381  00088E  ECB8  F005         	call	_setBitInRegister
  2382                           
  2383                           ;fm.h: 375: while (temp == 0) {
  2384  000892  D010               	goto	l142
  2385  000894                     l1754:
  2386                           
  2387                           ;fm.h: 376: if (FMread(0x13, &status) != 0) return 1;
  2388  000894  0E19               	movlw	low readLOInjection@status
  2389  000896  6E03               	movwf	FMread@data,c
  2390  000898  0E00               	movlw	high readLOInjection@status
  2391  00089A  6E04               	movwf	FMread@data+1,c
  2392  00089C  0E13               	movlw	19
  2393  00089E  ECF0  F004         	call	_FMread
  2394  0008A2  0900               	iorlw	0
  2395  0008A4  B4D8               	btfsc	status,2,c
  2396  0008A6  D002               	goto	l1760
  2397  0008A8  0E01               	movlw	1
  2398  0008AA  0012               	return	
  2399  0008AC                     l1760:
  2400                           
  2401                           ;fm.h: 377: temp = status & 0x0020;
  2402  0008AC  0E20               	movlw	32
  2403  0008AE  1419               	andwf	readLOInjection@status,w,c
  2404  0008B0  6E16               	movwf	readLOInjection@temp,c
  2405  0008B2  6A17               	clrf	readLOInjection@temp+1,c
  2406  0008B4                     l142:
  2407  0008B4  5016               	movf	readLOInjection@temp,w,c
  2408  0008B6  1017               	iorwf	readLOInjection@temp+1,w,c
  2409  0008B8  B4D8               	btfsc	status,2,c
  2410  0008BA  D7EC               	goto	l1754
  2411                           
  2412                           ;fm.h: 378: }
  2413                           ;fm.h: 382: if (FMread(0x13, &status) != 0) return 1;
  2414  0008BC  0E19               	movlw	low readLOInjection@status
  2415  0008BE  6E03               	movwf	FMread@data,c
  2416  0008C0  0E00               	movlw	high readLOInjection@status
  2417  0008C2  6E04               	movwf	FMread@data+1,c
  2418  0008C4  0E13               	movlw	19
  2419  0008C6  ECF0  F004         	call	_FMread
  2420  0008CA  0900               	iorlw	0
  2421  0008CC  B4D8               	btfsc	status,2,c
  2422  0008CE  D002               	goto	l1768
  2423  0008D0  0E01               	movlw	1
  2424  0008D2  0012               	return	
  2425  0008D4                     l1768:
  2426                           
  2427                           ;fm.h: 383: rssi_val = (status & 0xFE00) >> 9;
  2428  0008D4  C019  F012         	movff	readLOInjection@status,??_readLOInjection
  2429  0008D8  C01A  F013         	movff	readLOInjection@status+1,??_readLOInjection+1
  2430  0008DC  0E09               	movlw	9
  2431  0008DE  6E14               	movwf	(??_readLOInjection+2)& (0+255),c
  2432  0008E0                     u1125:
  2433  0008E0  90D8               	bcf	status,0,c
  2434  0008E2  3213               	rrcf	??_readLOInjection+1,f,c
  2435  0008E4  3212               	rrcf	??_readLOInjection,f,c
  2436  0008E6  2E14               	decfsz	(??_readLOInjection+2)& (0+255),f,c
  2437  0008E8  D7FB               	goto	u1125
  2438  0008EA  5012               	movf	??_readLOInjection,w,c
  2439  0008EC  0B7F               	andlw	127
  2440  0008EE  6E18               	movwf	readLOInjection@rssi_val,c
  2441                           
  2442                           ;fm.h: 386: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  2443  0008F0  0E56               	movlw	low (_tune_bit+2)
  2444  0008F2  6EF6               	movwf	tblptrl,c
  2445  0008F4  0E03               	movlw	high (_tune_bit+2)
  2446  0008F6  6EF7               	movwf	tblptrh,c
  2447  0008F8                     	if	0	;tblptru may be non-zero
  2448  0008F8                     	endif
  2449  0008F8                     	if	0	;tblptru may be non-zero
  2450  0008F8                     	endif
  2451  0008F8  0008               	tblrd		*
  2452  0008FA  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2453  0008FE  0E00               	movlw	0
  2454  000900  6E09               	movwf	setBitInRegister@bitState,c
  2455  000902  0E54               	movlw	low _tune_bit
  2456  000904  6EF6               	movwf	tblptrl,c
  2457  000906                     	if	1	;There is more than 1 active tblptr byte
  2458  000906  0E03               	movlw	high _tune_bit
  2459  000908  6EF7               	movwf	tblptrh,c
  2460  00090A                     	endif
  2461  00090A                     	if	0	;There are less than 3 active tblptr bytes
  2462  00090A                     	endif
  2463  00090A  0008               	tblrd		*
  2464  00090C  50F5               	movf	tablat,w,c
  2465  00090E  ECB8  F005         	call	_setBitInRegister
  2466                           
  2467                           ;fm.h: 388: return rssi_val;
  2468  000912  5018               	movf	readLOInjection@rssi_val,w,c
  2469  000914  0012               	return	
  2470  000916                     __end_of_readLOInjection:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _frequency *****************
  2481 ;; Defined at:
  2482 ;;		line 470 in file "fm.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  data            2   18[COMRAM] unsigned int 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2   11[COMRAM] unsigned short 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2496 ;;      Params:         2       0       0       0
  2497 ;;      Locals:         2       0       0       0
  2498 ;;      Temps:          5       0       0       0
  2499 ;;      Totals:         9       0       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		_FMread
  2505 ;; This function is called by:
  2506 ;;		_seek
  2507 ;;		_tuneWithAutoHiLo
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text12
  2512  000E90                     __ptext12:
  2513                           	opt stack 0
  2514  000E90                     _frequency:
  2515                           	opt stack 24
  2516                           
  2517                           ;fm.h: 471: unsigned int data;
  2518                           ;fm.h: 472: FMread(0x13, &data);
  2519                           
  2520                           ;incstack = 0
  2521  000E90  0E13               	movlw	low frequency@data
  2522  000E92  6E03               	movwf	FMread@data,c
  2523  000E94  0E00               	movlw	high frequency@data
  2524  000E96  6E04               	movwf	FMread@data+1,c
  2525  000E98  0E13               	movlw	19
  2526  000E9A  ECF0  F004         	call	_FMread
  2527                           
  2528                           ;fm.h: 473: return (((data & 0xFF80) >> 7) + 690);
  2529  000E9E  0EFF               	movlw	255
  2530  000EA0  6E0E               	movwf	??_frequency& (0+255),c
  2531  000EA2  0E01               	movlw	1
  2532  000EA4  6E0F               	movwf	(??_frequency+1)& (0+255),c
  2533  000EA6  C013  F010         	movff	frequency@data,??_frequency+2
  2534  000EAA  C014  F011         	movff	frequency@data+1,??_frequency+3
  2535  000EAE  0E07               	movlw	7
  2536  000EB0  6E12               	movwf	(??_frequency+4)& (0+255),c
  2537  000EB2                     u1075:
  2538  000EB2  90D8               	bcf	status,0,c
  2539  000EB4  3211               	rrcf	??_frequency+3,f,c
  2540  000EB6  3210               	rrcf	??_frequency+2,f,c
  2541  000EB8  2E12               	decfsz	(??_frequency+4)& (0+255),f,c
  2542  000EBA  D7FB               	goto	u1075
  2543  000EBC  500E               	movf	??_frequency,w,c
  2544  000EBE  1610               	andwf	??_frequency+2,f,c
  2545  000EC0  500F               	movf	??_frequency+1,w,c
  2546  000EC2  1611               	andwf	??_frequency+3,f,c
  2547  000EC4  0EB2               	movlw	178
  2548  000EC6  2410               	addwf	??_frequency+2,w,c
  2549  000EC8  6E0C               	movwf	?_frequency,c
  2550  000ECA  0E02               	movlw	2
  2551  000ECC  2011               	addwfc	??_frequency+3,w,c
  2552  000ECE  6E0D               	movwf	?_frequency+1,c
  2553  000ED0  0012               	return	
  2554  000ED2                     __end_of_frequency:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _setSeekDirection *****************
  2565 ;; Defined at:
  2566 ;;		line 274 in file "fm.h"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  direction       1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  direction       1   17[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2580 ;;      Params:         0       0       0       0
  2581 ;;      Locals:         1       0       0       0
  2582 ;;      Temps:          0       0       0       0
  2583 ;;      Totals:         1       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    4
  2587 ;; This function calls:
  2588 ;;		_setBitInRegister
  2589 ;; This function is called by:
  2590 ;;		_seek
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text13
  2595  000DA8                     __ptext13:
  2596                           	opt stack 0
  2597  000DA8                     _setSeekDirection:
  2598                           	opt stack 24
  2599                           
  2600                           ;incstack = 0
  2601                           ;setSeekDirection@direction stored from wreg
  2602  000DA8  6E12               	movwf	setSeekDirection@direction,c
  2603                           
  2604                           ;fm.h: 276: if (direction == 'd')
  2605  000DAA  0E64               	movlw	100
  2606  000DAC  1812               	xorwf	setSeekDirection@direction,w,c
  2607  000DAE  A4D8               	btfss	status,2,c
  2608  000DB0  D012               	goto	l1780
  2609                           
  2610                           ;fm.h: 277: setBitInRegister(seekup_bit[0], seekup_bit[1], 0);
  2611  000DB2  0E4E               	movlw	low (_seekup_bit+2)
  2612  000DB4  6EF6               	movwf	tblptrl,c
  2613  000DB6  0E03               	movlw	high (_seekup_bit+2)
  2614  000DB8  6EF7               	movwf	tblptrh,c
  2615  000DBA                     	if	0	;tblptru may be non-zero
  2616  000DBA                     	endif
  2617  000DBA                     	if	0	;tblptru may be non-zero
  2618  000DBA                     	endif
  2619  000DBA  0008               	tblrd		*
  2620  000DBC  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2621  000DC0  0E00               	movlw	0
  2622  000DC2  6E09               	movwf	setBitInRegister@bitState,c
  2623  000DC4  0E4C               	movlw	low _seekup_bit
  2624  000DC6  6EF6               	movwf	tblptrl,c
  2625  000DC8                     	if	1	;There is more than 1 active tblptr byte
  2626  000DC8  0E03               	movlw	high _seekup_bit
  2627  000DCA  6EF7               	movwf	tblptrh,c
  2628  000DCC                     	endif
  2629  000DCC                     	if	0	;There are less than 3 active tblptr bytes
  2630  000DCC                     	endif
  2631  000DCC  0008               	tblrd		*
  2632  000DCE  50F5               	movf	tablat,w,c
  2633  000DD0  ECB8  F005         	call	_setBitInRegister
  2634  000DD4  0012               	return	
  2635  000DD6                     l1780:
  2636                           
  2637                           ;fm.h: 278: else if (direction == 'u')
  2638  000DD6  0E75               	movlw	117
  2639  000DD8  1812               	xorwf	setSeekDirection@direction,w,c
  2640  000DDA  A4D8               	btfss	status,2,c
  2641  000DDC  0012               	return	
  2642                           
  2643                           ;fm.h: 279: setBitInRegister(seekup_bit[0], seekup_bit[1], 1);
  2644  000DDE  0E4E               	movlw	low (_seekup_bit+2)
  2645  000DE0  6EF6               	movwf	tblptrl,c
  2646  000DE2  0E03               	movlw	high (_seekup_bit+2)
  2647  000DE4  6EF7               	movwf	tblptrh,c
  2648  000DE6                     	if	0	;tblptru may be non-zero
  2649  000DE6                     	endif
  2650  000DE6                     	if	0	;tblptru may be non-zero
  2651  000DE6                     	endif
  2652  000DE6  0008               	tblrd		*
  2653  000DE8  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2654  000DEC  0E01               	movlw	1
  2655  000DEE  6E09               	movwf	setBitInRegister@bitState,c
  2656  000DF0  0E4C               	movlw	low _seekup_bit
  2657  000DF2  6EF6               	movwf	tblptrl,c
  2658  000DF4                     	if	1	;There is more than 1 active tblptr byte
  2659  000DF4  0E03               	movlw	high _seekup_bit
  2660  000DF6  6EF7               	movwf	tblptrh,c
  2661  000DF8                     	endif
  2662  000DF8                     	if	0	;There are less than 3 active tblptr bytes
  2663  000DF8                     	endif
  2664  000DF8  0008               	tblrd		*
  2665  000DFA  50F5               	movf	tablat,w,c
  2666  000DFC  ECB8  F005         	call	_setBitInRegister
  2667  000E00  0012               	return	
  2668  000E02                     __end_of_setSeekDirection:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _setBitInRegister *****************
  2679 ;; Defined at:
  2680 ;;		line 258 in file "fm.h"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  address         1    wreg     unsigned char 
  2683 ;;  bitRegister     1    7[COMRAM] unsigned char 
  2684 ;;  bitState        1    8[COMRAM] unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  address         1   16[COMRAM] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2696 ;;      Params:         2       0       0       0
  2697 ;;      Locals:         1       0       0       0
  2698 ;;      Temps:          7       0       0       0
  2699 ;;      Totals:        10       0       0       0
  2700 ;;Total ram usage:       10 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    3
  2703 ;; This function calls:
  2704 ;;		_FMwrite
  2705 ;; This function is called by:
  2706 ;;		_setSeekDirection
  2707 ;;		_setHardmute
  2708 ;;		_seek
  2709 ;;		_readLOInjection
  2710 ;;		_tuneWithAutoHiLo
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text14
  2715  000B70                     __ptext14:
  2716                           	opt stack 0
  2717  000B70                     _setBitInRegister:
  2718                           	opt stack 23
  2719                           
  2720                           ;incstack = 0
  2721                           ;setBitInRegister@address stored from wreg
  2722  000B70  6E11               	movwf	setBitInRegister@address,c
  2723                           
  2724                           ;fm.h: 260: if (bitState == 1)
  2725  000B72  0409               	decf	setBitInRegister@bitState,w,c
  2726  000B74  A4D8               	btfss	status,2,c
  2727  000B76  D02A               	goto	l1730
  2728                           
  2729                           ;fm.h: 261: regImg[address] = regImg[address] | (1 << bitRegister);
  2730  000B78  5011               	movf	setBitInRegister@address,w,c
  2731  000B7A  0D02               	mullw	2
  2732  000B7C  0E31               	movlw	low _regImg
  2733  000B7E  24F3               	addwf	prodl,w,c
  2734  000B80  6ED9               	movwf	fsr2l,c
  2735  000B82  0E00               	movlw	high _regImg
  2736  000B84  20F4               	addwfc	prodh,w,c
  2737  000B86  6EDA               	movwf	fsr2h,c
  2738  000B88  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2739  000B8C  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2740  000B90  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2741  000B94  0E01               	movlw	1
  2742  000B96  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2743  000B98  0E00               	movlw	0
  2744  000B9A  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2745  000B9C  2A0C               	incf	??_setBitInRegister+2,f,c
  2746  000B9E  D003               	goto	u1054
  2747  000BA0                     u1055:
  2748  000BA0  90D8               	bcf	status,0,c
  2749  000BA2  360D               	rlcf	??_setBitInRegister+3,f,c
  2750  000BA4  360E               	rlcf	??_setBitInRegister+4,f,c
  2751  000BA6                     u1054:
  2752  000BA6  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2753  000BA8  D7FB               	goto	u1055
  2754  000BAA  500A               	movf	??_setBitInRegister,w,c
  2755  000BAC  120D               	iorwf	??_setBitInRegister+3,f,c
  2756  000BAE  500B               	movf	??_setBitInRegister+1,w,c
  2757  000BB0  120E               	iorwf	??_setBitInRegister+4,f,c
  2758  000BB2  5011               	movf	setBitInRegister@address,w,c
  2759  000BB4  0D02               	mullw	2
  2760  000BB6  0E31               	movlw	low _regImg
  2761  000BB8  24F3               	addwf	prodl,w,c
  2762  000BBA  6ED9               	movwf	fsr2l,c
  2763  000BBC  0E00               	movlw	high _regImg
  2764  000BBE  20F4               	addwfc	prodh,w,c
  2765  000BC0  6EDA               	movwf	fsr2h,c
  2766  000BC2  C00D  FFDE         	movff	??_setBitInRegister+3,postinc2
  2767  000BC6  C00E  FFDD         	movff	??_setBitInRegister+4,postdec2
  2768  000BCA  D02D               	goto	l1732
  2769  000BCC                     l1730:
  2770                           
  2771                           ;fm.h: 262: else
  2772                           ;fm.h: 263: regImg[address] = regImg[address] & ~(1 << bitRegister);
  2773  000BCC  5011               	movf	setBitInRegister@address,w,c
  2774  000BCE  0D02               	mullw	2
  2775  000BD0  0E31               	movlw	low _regImg
  2776  000BD2  24F3               	addwf	prodl,w,c
  2777  000BD4  6ED9               	movwf	fsr2l,c
  2778  000BD6  0E00               	movlw	high _regImg
  2779  000BD8  20F4               	addwfc	prodh,w,c
  2780  000BDA  6EDA               	movwf	fsr2h,c
  2781  000BDC  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2782  000BE0  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2783  000BE4  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2784  000BE8  0E01               	movlw	1
  2785  000BEA  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2786  000BEC  0E00               	movlw	0
  2787  000BEE  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2788  000BF0  2A0C               	incf	??_setBitInRegister+2,f,c
  2789  000BF2  D003               	goto	u1064
  2790  000BF4                     u1065:
  2791  000BF4  90D8               	bcf	status,0,c
  2792  000BF6  360D               	rlcf	??_setBitInRegister+3,f,c
  2793  000BF8  360E               	rlcf	??_setBitInRegister+4,f,c
  2794  000BFA                     u1064:
  2795  000BFA  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2796  000BFC  D7FB               	goto	u1065
  2797  000BFE  1C0D               	comf	??_setBitInRegister+3,w,c
  2798  000C00  6E0F               	movwf	(??_setBitInRegister+5)& (0+255),c
  2799  000C02  1C0E               	comf	??_setBitInRegister+4,w,c
  2800  000C04  6E10               	movwf	(??_setBitInRegister+6)& (0+255),c
  2801  000C06  500A               	movf	??_setBitInRegister,w,c
  2802  000C08  160F               	andwf	??_setBitInRegister+5,f,c
  2803  000C0A  500B               	movf	??_setBitInRegister+1,w,c
  2804  000C0C  1610               	andwf	??_setBitInRegister+6,f,c
  2805  000C0E  5011               	movf	setBitInRegister@address,w,c
  2806  000C10  0D02               	mullw	2
  2807  000C12  0E31               	movlw	low _regImg
  2808  000C14  24F3               	addwf	prodl,w,c
  2809  000C16  6ED9               	movwf	fsr2l,c
  2810  000C18  0E00               	movlw	high _regImg
  2811  000C1A  20F4               	addwfc	prodh,w,c
  2812  000C1C  6EDA               	movwf	fsr2h,c
  2813  000C1E  C00F  FFDE         	movff	??_setBitInRegister+5,postinc2
  2814  000C22  C010  FFDD         	movff	??_setBitInRegister+6,postdec2
  2815  000C26                     l1732:
  2816                           
  2817                           ;fm.h: 265: FMwrite(address);
  2818  000C26  5011               	movf	setBitInRegister@address,w,c
  2819  000C28  EC64  F006         	call	_FMwrite
  2820  000C2C  0012               	return		;funcret
  2821  000C2E                     __end_of_setBitInRegister:
  2822                           	opt stack 0
  2823                           tblptru	equ	0xFF8
  2824                           tblptrh	equ	0xFF7
  2825                           tblptrl	equ	0xFF6
  2826                           tablat	equ	0xFF5
  2827                           prodh	equ	0xFF4
  2828                           prodl	equ	0xFF3
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _SeekUP *****************
  2838 ;; Defined at:
  2839 ;;		line 836 in file "fm.h"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2853 ;;      Params:         0       0       0       0
  2854 ;;      Locals:         0       0       0       0
  2855 ;;      Temps:          0       0       0       0
  2856 ;;      Totals:         0       0       0       0
  2857 ;;Total ram usage:        0 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    1
  2860 ;; This function calls:
  2861 ;;		_delay_10ms
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text15
  2868  001010                     __ptext15:
  2869                           	opt stack 0
  2870  001010                     _SeekUP:
  2871                           	opt stack 29
  2872                           
  2873                           ;fm.h: 838: PORTCbits.RC7 = 1;
  2874                           
  2875                           ;incstack = 0
  2876  001010  8E82               	bsf	3970,7,c	;volatile
  2877                           
  2878                           ;fm.h: 839: delay_10ms(10);
  2879  001012  0E00               	movlw	0
  2880  001014  6E02               	movwf	delay_10ms@n+1,c
  2881  001016  0E0A               	movlw	10
  2882  001018  6E01               	movwf	delay_10ms@n,c
  2883  00101A  EC95  F007         	call	_delay_10ms	;wreg free
  2884                           
  2885                           ;fm.h: 840: PORTCbits.RC7 = 0;
  2886  00101E  9E82               	bcf	3970,7,c	;volatile
  2887  001020  0012               	return	
  2888  001022                     __end_of_SeekUP:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           tblptrh	equ	0xFF7
  2892                           tblptrl	equ	0xFF6
  2893                           tablat	equ	0xFF5
  2894                           prodh	equ	0xFF4
  2895                           prodl	equ	0xFF3
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postinc2	equ	0xFDE
  2899                           postdec2	equ	0xFDD
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _SeekDOWN *****************
  2905 ;; Defined at:
  2906 ;;		line 845 in file "fm.h"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      unsigned char 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2920 ;;      Params:         0       0       0       0
  2921 ;;      Locals:         0       0       0       0
  2922 ;;      Temps:          0       0       0       0
  2923 ;;      Totals:         0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		_delay_10ms
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text16
  2935  001022                     __ptext16:
  2936                           	opt stack 0
  2937  001022                     _SeekDOWN:
  2938                           	opt stack 29
  2939                           
  2940                           ;fm.h: 847: PORTCbits.RC7 = 1;
  2941                           
  2942                           ;incstack = 0
  2943  001022  8E82               	bsf	3970,7,c	;volatile
  2944                           
  2945                           ;fm.h: 848: delay_10ms(10);
  2946  001024  0E00               	movlw	0
  2947  001026  6E02               	movwf	delay_10ms@n+1,c
  2948  001028  0E0A               	movlw	10
  2949  00102A  6E01               	movwf	delay_10ms@n,c
  2950  00102C  EC95  F007         	call	_delay_10ms	;wreg free
  2951                           
  2952                           ;fm.h: 849: PORTCbits.RC7 = 0;
  2953  001030  9E82               	bcf	3970,7,c	;volatile
  2954  001032  0012               	return	
  2955  001034                     __end_of_SeekDOWN:
  2956                           	opt stack 0
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postinc2	equ	0xFDE
  2966                           postdec2	equ	0xFDD
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _delay_10ms *****************
  2972 ;; Defined at:
  2973 ;;		line 686 in file "fm.h"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  n               2    0[COMRAM] unsigned int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2987 ;;      Params:         2       0       0       0
  2988 ;;      Locals:         0       0       0       0
  2989 ;;      Temps:          1       0       0       0
  2990 ;;      Totals:         3       0       0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_nextChannel
  2997 ;;		_previousChannel
  2998 ;;		_VolumeUp
  2999 ;;		_VolumeDown
  3000 ;;		_SeekUP
  3001 ;;		_SeekDOWN
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text17
  3006  000F2A                     __ptext17:
  3007                           	opt stack 0
  3008  000F2A                     _delay_10ms:
  3009                           	opt stack 29
  3010                           
  3011                           ;fm.h: 687: while (n-- != 0) {
  3012                           
  3013                           ;incstack = 0
  3014  000F2A  D007               	goto	l1924
  3015  000F2C                     l1922:
  3016                           
  3017                           ;fm.h: 688: _delay((unsigned long)((12)*(8000000/4000.0)));
  3018  000F2C  0E20               	movlw	32
  3019  000F2E  6E03               	movwf	??_delay_10ms& (0+255),c
  3020  000F30  0E2A               	movlw	42
  3021  000F32                     u1847:
  3022  000F32  2EE8               	decfsz	wreg,f,c
  3023  000F34  D7FE               	goto	u1847
  3024  000F36  2E03               	decfsz	??_delay_10ms& (0+255),f,c
  3025  000F38  D7FC               	goto	u1847
  3026  000F3A                     l1924:
  3027  000F3A  0601               	decf	delay_10ms@n,f,c
  3028  000F3C  A0D8               	btfss	status,0,c
  3029  000F3E  0602               	decf	delay_10ms@n+1,f,c
  3030  000F40  2801               	incf	delay_10ms@n,w,c
  3031  000F42  E1F4               	bnz	l1922
  3032  000F44  2802               	incf	delay_10ms@n+1,w,c
  3033  000F46  B4D8               	btfsc	status,2,c
  3034  000F48  0012               	return	
  3035  000F4A  D7F0               	goto	l1922
  3036  000F4C                     __end_of_delay_10ms:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           postinc2	equ	0xFDE
  3047                           postdec2	equ	0xFDD
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _MuteHard *****************
  3053 ;; Defined at:
  3054 ;;		line 830 in file "fm.h"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  down            1    wreg     unsigned char 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  down            1    0[COMRAM] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      unsigned char 
  3061 ;; Registers used:
  3062 ;;		wreg
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3068 ;;      Params:         0       0       0       0
  3069 ;;      Locals:         0       0       0       0
  3070 ;;      Temps:          0       0       0       0
  3071 ;;      Totals:         0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text18
  3082  001058                     __ptext18:
  3083                           	opt stack 0
  3084  001058                     _MuteHard:
  3085                           	opt stack 30
  3086                           
  3087                           ;fm.h: 833: return 0;
  3088                           ;	Return value of _MuteHard is never used
  3089                           
  3090                           ;incstack = 0
  3091  001058  0012               	return		;funcret
  3092  00105A                     __end_of_MuteHard:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           postinc2	equ	0xFDE
  3103                           postdec2	equ	0xFDD
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _Init *****************
  3109 ;; Defined at:
  3110 ;;		line 129 in file "fm.h"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  i               2    0        int 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3124 ;;      Params:         0       0       0       0
  3125 ;;      Locals:         0       0       0       0
  3126 ;;      Temps:          0       0       0       0
  3127 ;;      Totals:         0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    1
  3131 ;; This function calls:
  3132 ;;		_OpenI2C
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text19
  3139  000E02                     __ptext19:
  3140                           	opt stack 0
  3141  000E02                     _Init:
  3142                           	opt stack 29
  3143                           
  3144                           ;fm.h: 130: int i;
  3145                           ;fm.h: 132: OSCCON = 0b01110010;
  3146                           
  3147                           ;incstack = 0
  3148  000E02  0E72               	movlw	114
  3149  000E04  6ED3               	movwf	4051,c	;volatile
  3150                           
  3151                           ;fm.h: 133: LCDPS = 0b00110110;
  3152  000E06  0E36               	movlw	54
  3153  000E08  010F               	movlb	15	; () banked
  3154  000E0A  6F58               	movwf	88,b	;volatile
  3155                           
  3156                           ;fm.h: 134: ADCON1 = 0b00111111;
  3157  000E0C  0E3F               	movlw	63
  3158  000E0E  6EC1               	movwf	4033,c	;volatile
  3159                           
  3160                           ;fm.h: 135: TRISA = 0b00000011;
  3161  000E10  0E03               	movlw	3
  3162  000E12  6E92               	movwf	3986,c	;volatile
  3163                           
  3164                           ;fm.h: 136: TRISB = 0b00100001;
  3165  000E14  0E21               	movlw	33
  3166  000E16  6E93               	movwf	3987,c	;volatile
  3167                           
  3168                           ;fm.h: 137: TRISC = 0b00011000;
  3169  000E18  0E18               	movlw	24
  3170  000E1A  6E94               	movwf	3988,c	;volatile
  3171                           
  3172                           ; BSR set to: 15
  3173                           ;fm.h: 138: TRISG = 0b11111111;
  3174  000E1C  6898               	setf	3992,c	;volatile
  3175                           
  3176                           ;fm.h: 139: PORTA = 0;
  3177  000E1E  0E00               	movlw	0
  3178  000E20  6E80               	movwf	3968,c	;volatile
  3179                           
  3180                           ;fm.h: 140: PORTB = 0;
  3181  000E22  0E00               	movlw	0
  3182  000E24  6E81               	movwf	3969,c	;volatile
  3183                           
  3184                           ;fm.h: 141: PORTC = 0;
  3185  000E26  0E00               	movlw	0
  3186  000E28  6E82               	movwf	3970,c	;volatile
  3187                           
  3188                           ; BSR set to: 15
  3189                           ;fm.h: 142: INTCONbits.TMR0IF = 0;
  3190  000E2A  94F2               	bcf	intcon,2,c	;volatile
  3191                           
  3192                           ;fm.h: 144: T0CON = 0b00001000;
  3193  000E2C  0E08               	movlw	8
  3194  000E2E  6ED5               	movwf	4053,c	;volatile
  3195                           
  3196                           ;fm.h: 145: TMR0H = 0;
  3197  000E30  0E00               	movlw	0
  3198  000E32  6ED7               	movwf	4055,c	;volatile
  3199                           
  3200                           ;fm.h: 146: TMR0L = 0;
  3201  000E34  0E00               	movlw	0
  3202  000E36  6ED6               	movwf	4054,c	;volatile
  3203                           
  3204                           ; BSR set to: 15
  3205                           ;fm.h: 147: T0CONbits.TMR0ON = 1;
  3206  000E38  8ED5               	bsf	4053,7,c	;volatile
  3207                           
  3208                           ; BSR set to: 15
  3209                           ;fm.h: 148: OpenI2C(0b00001000, 0b10000000);
  3210  000E3A  0E80               	movlw	128
  3211  000E3C  6E01               	movwf	OpenI2C@slew,c
  3212  000E3E  0E08               	movlw	8
  3213  000E40  ECC4  F007         	call	_OpenI2C
  3214                           
  3215                           ;fm.h: 149: SSPADD = 0x3F;
  3216  000E44  0E3F               	movlw	63
  3217  000E46  6EC8               	movwf	4040,c	;volatile
  3218  000E48  0012               	return	
  3219  000E4A                     __end_of_Init:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           prodh	equ	0xFF4
  3226                           prodl	equ	0xFF3
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postinc2	equ	0xFDE
  3231                           postdec2	equ	0xFDD
  3232                           fsr2h	equ	0xFDA
  3233                           fsr2l	equ	0xFD9
  3234                           status	equ	0xFD8
  3235                           
  3236 ;; *************** function _OpenI2C *****************
  3237 ;; Defined at:
  3238 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_open.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  sync_mode       1    wreg     unsigned char 
  3241 ;;  slew            1    0[COMRAM] unsigned char 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3253 ;;      Params:         1       0       0       0
  3254 ;;      Locals:         1       0       0       0
  3255 ;;      Temps:          0       0       0       0
  3256 ;;      Totals:         2       0       0       0
  3257 ;;Total ram usage:        2 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_Init
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text20
  3267  000F88                     __ptext20:
  3268                           	opt stack 0
  3269  000F88                     _OpenI2C:
  3270                           	opt stack 29
  3271                           
  3272                           ;incstack = 0
  3273                           ;OpenI2C@sync_mode stored from wreg
  3274  000F88  6E02               	movwf	OpenI2C@sync_mode,c
  3275  000F8A  0E3F               	movlw	63
  3276  000F8C  16C7               	andwf	4039,f,c	;volatile
  3277  000F8E  0E00               	movlw	0
  3278  000F90  6EC6               	movwf	4038,c	;volatile
  3279  000F92  0E00               	movlw	0
  3280  000F94  6EC5               	movwf	4037,c	;volatile
  3281  000F96  5002               	movf	OpenI2C@sync_mode,w,c
  3282  000F98  12C6               	iorwf	4038,f,c	;volatile
  3283  000F9A  5001               	movf	OpenI2C@slew,w,c
  3284  000F9C  12C7               	iorwf	4039,f,c	;volatile
  3285  000F9E  8694               	bsf	3988,3,c	;volatile
  3286  000FA0  8894               	bsf	3988,4,c	;volatile
  3287  000FA2  8AC6               	bsf	4038,5,c	;volatile
  3288  000FA4  0012               	return		;funcret
  3289  000FA6                     __end_of_OpenI2C:
  3290                           	opt stack 0
  3291                           tblptru	equ	0xFF8
  3292                           tblptrh	equ	0xFF7
  3293                           tblptrl	equ	0xFF6
  3294                           tablat	equ	0xFF5
  3295                           prodh	equ	0xFF4
  3296                           prodl	equ	0xFF3
  3297                           intcon	equ	0xFF2
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _FMvers *****************
  3307 ;; Defined at:
  3308 ;;		line 619 in file "fm.h"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  3311 ;;		 -> main@ui(2), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3323 ;;      Params:         2       0       0       0
  3324 ;;      Locals:         0       0       0       0
  3325 ;;      Temps:          0       0       0       0
  3326 ;;      Totals:         2       0       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    3
  3330 ;; This function calls:
  3331 ;;		_FMread
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text21
  3338  001046                     __ptext21:
  3339                           	opt stack 0
  3340  001046                     _FMvers:
  3341                           	opt stack 27
  3342                           
  3343                           ;fm.h: 620: if (FMread(0x1C, vsn) != 0) return 1;
  3344                           
  3345                           ;incstack = 0
  3346  001046  C00C  F003         	movff	FMvers@vsn,FMread@data
  3347  00104A  C00D  F004         	movff	FMvers@vsn+1,FMread@data+1
  3348  00104E  0E1C               	movlw	28
  3349  001050  ECF0  F004         	call	_FMread
  3350                           
  3351                           ;	Return value of _FMvers is never used
  3352  001054  0012               	return	
  3353  001056                     __end_of_FMvers:
  3354                           	opt stack 0
  3355                           tblptru	equ	0xFF8
  3356                           tblptrh	equ	0xFF7
  3357                           tblptrl	equ	0xFF6
  3358                           tablat	equ	0xFF5
  3359                           prodh	equ	0xFF4
  3360                           prodl	equ	0xFF3
  3361                           intcon	equ	0xFF2
  3362                           postinc0	equ	0xFEE
  3363                           wreg	equ	0xFE8
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _FMinit *****************
  3371 ;; Defined at:
  3372 ;;		line 554 in file "fm.h"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  dat             2   17[COMRAM] unsigned int 
  3377 ;;  ad              1   19[COMRAM] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3387 ;;      Params:         0       0       0       0
  3388 ;;      Locals:         3       0       0       0
  3389 ;;      Temps:          0       0       0       0
  3390 ;;      Totals:         3       0       0       0
  3391 ;;Total ram usage:        3 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    4
  3394 ;; This function calls:
  3395 ;;		_FMready
  3396 ;;		_FMwrite
  3397 ;;		_dly
  3398 ;;		_showFreq
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text22
  3405  000AAA                     __ptext22:
  3406                           	opt stack 0
  3407  000AAA                     _FMinit:
  3408                           	opt stack 26
  3409                           
  3410                           ;fm.h: 556: unsigned char ad;
  3411                           ;fm.h: 557: unsigned int dat;
  3412                           ;fm.h: 560: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  3413                           
  3414                           ;incstack = 0
  3415  000AAA  0E00               	movlw	0
  3416  000AAC  6E14               	movwf	FMinit@ad,c
  3417  000AAE                     l1942:
  3418  000AAE  0E11               	movlw	17
  3419  000AB0  6414               	cpfsgt	FMinit@ad,c
  3420  000AB2  D001               	goto	l1946
  3421  000AB4  D018               	goto	l180
  3422  000AB6                     l1946:
  3423  000AB6  5014               	movf	FMinit@ad,w,c
  3424  000AB8  0D02               	mullw	2
  3425  000ABA  0E01               	movlw	low _regDflt
  3426  000ABC  24F3               	addwf	prodl,w,c
  3427  000ABE  6EF6               	movwf	tblptrl,c
  3428  000AC0  0E03               	movlw	high _regDflt
  3429  000AC2  20F4               	addwfc	prodh,w,c
  3430  000AC4  6EF7               	movwf	tblptrh,c
  3431  000AC6                     	if	0	;There are less than 3 active tblptr bytes
  3432  000AC6                     	endif
  3433  000AC6  5014               	movf	FMinit@ad,w,c
  3434  000AC8  0D02               	mullw	2
  3435  000ACA  0E31               	movlw	low _regImg
  3436  000ACC  24F3               	addwf	prodl,w,c
  3437  000ACE  6ED9               	movwf	fsr2l,c
  3438  000AD0  0E00               	movlw	high _regImg
  3439  000AD2  20F4               	addwfc	prodh,w,c
  3440  000AD4  6EDA               	movwf	fsr2h,c
  3441  000AD6  0009               	tblrd		*+
  3442  000AD8  CFF5 FFDE          	movff	tablat,postinc2
  3443  000ADC  0008               	tblrd		*
  3444  000ADE  CFF5 FFDD          	movff	tablat,postdec2
  3445  000AE2  2A14               	incf	FMinit@ad,f,c
  3446  000AE4  D7E4               	goto	l1942
  3447  000AE6                     l180:
  3448                           
  3449                           ;fm.h: 562: dat = regImg[0];
  3450  000AE6  C031  F012         	movff	_regImg,FMinit@dat
  3451  000AEA  C032  F013         	movff	_regImg+1,FMinit@dat+1
  3452                           
  3453                           ;fm.h: 563: regImg[0] &= ~1;
  3454  000AEE  9031               	bcf	_regImg,0,c
  3455                           
  3456                           ;fm.h: 564: if (FMwrite(0) != 0) return 1;
  3457  000AF0  0E00               	movlw	0
  3458  000AF2  EC64  F006         	call	_FMwrite
  3459  000AF6  0900               	iorlw	0
  3460  000AF8  B4D8               	btfsc	status,2,c
  3461  000AFA  D002               	goto	l1960
  3462  000AFC  0E01               	movlw	1
  3463  000AFE  0012               	return	
  3464  000B00                     l1960:
  3465                           
  3466                           ;fm.h: 565: for (ad = 1; ad < 18; ad++) {
  3467  000B00  0E01               	movlw	1
  3468  000B02  6E14               	movwf	FMinit@ad,c
  3469  000B04                     l1962:
  3470  000B04  0E11               	movlw	17
  3471  000B06  6414               	cpfsgt	FMinit@ad,c
  3472  000B08  D001               	goto	l1966
  3473  000B0A  D00A               	goto	l1976
  3474  000B0C                     l1966:
  3475                           
  3476                           ;fm.h: 566: if (FMwrite(ad) != 0)return 1;
  3477  000B0C  5014               	movf	FMinit@ad,w,c
  3478  000B0E  EC64  F006         	call	_FMwrite
  3479  000B12  0900               	iorlw	0
  3480  000B14  B4D8               	btfsc	status,2,c
  3481  000B16  D002               	goto	l1972
  3482  000B18  0E01               	movlw	1
  3483  000B1A  0012               	return	
  3484  000B1C                     l1972:
  3485  000B1C  2A14               	incf	FMinit@ad,f,c
  3486  000B1E  D7F2               	goto	l1962
  3487  000B20                     l1976:
  3488                           
  3489                           ;fm.h: 567: }
  3490                           ;fm.h: 569: regImg[0] = dat | 1;
  3491  000B20  0E01               	movlw	1
  3492  000B22  1012               	iorwf	FMinit@dat,w,c
  3493  000B24  6E31               	movwf	_regImg,c
  3494  000B26  5013               	movf	FMinit@dat+1,w,c
  3495  000B28  6E32               	movwf	_regImg+1,c
  3496                           
  3497                           ;fm.h: 570: if (FMwrite(0) != 0) return 1;
  3498  000B2A  0E00               	movlw	0
  3499  000B2C  EC64  F006         	call	_FMwrite
  3500  000B30  0900               	iorlw	0
  3501  000B32  B4D8               	btfsc	status,2,c
  3502  000B34  D002               	goto	l1984
  3503  000B36  0E01               	movlw	1
  3504  000B38  0012               	return	
  3505  000B3A                     l1984:
  3506                           
  3507                           ;fm.h: 571: dly(20);
  3508  000B3A  0E00               	movlw	0
  3509  000B3C  6E02               	movwf	dly@d+1,c
  3510  000B3E  0E14               	movlw	20
  3511  000B40  6E01               	movwf	dly@d,c
  3512  000B42  EC69  F007         	call	_dly	;wreg free
  3513                           
  3514                           ;fm.h: 572: while (FMready(&dat), !dat) dly(2);
  3515  000B46  D006               	goto	l1988
  3516  000B48                     l1986:
  3517  000B48  0E00               	movlw	0
  3518  000B4A  6E02               	movwf	dly@d+1,c
  3519  000B4C  0E02               	movlw	2
  3520  000B4E  6E01               	movwf	dly@d,c
  3521  000B50  EC69  F007         	call	_dly	;wreg free
  3522  000B54                     l1988:
  3523  000B54  0E12               	movlw	low FMinit@dat
  3524  000B56  6E0C               	movwf	FMready@rdy,c
  3525  000B58  0E00               	movlw	high FMinit@dat
  3526  000B5A  6E0D               	movwf	FMready@rdy+1,c
  3527  000B5C  EC25  F007         	call	_FMready	;wreg free
  3528  000B60  5012               	movf	FMinit@dat,w,c
  3529  000B62  1013               	iorwf	FMinit@dat+1,w,c
  3530  000B64  B4D8               	btfsc	status,2,c
  3531  000B66  D7F0               	goto	l1986
  3532                           
  3533                           ;fm.h: 573: showFreq();
  3534  000B68  EC2D  F008         	call	_showFreq	;wreg free
  3535                           
  3536                           ;fm.h: 574: return 0;
  3537  000B6C  0E00               	movlw	0
  3538  000B6E  0012               	return	
  3539  000B70                     __end_of_FMinit:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _showFreq *****************
  3557 ;; Defined at:
  3558 ;;		line 666 in file "fm.h"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		None
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3572 ;;      Params:         0       0       0       0
  3573 ;;      Locals:         0       0       0       0
  3574 ;;      Temps:          0       0       0       0
  3575 ;;      Totals:         0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_FMinit
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text23
  3586  00105A                     __ptext23:
  3587                           	opt stack 0
  3588  00105A                     _showFreq:
  3589                           	opt stack 29
  3590                           
  3591                           ;fm.h: 668: ;
  3592                           ;fm.h: 669: return 0;
  3593                           ;	Return value of _showFreq is never used
  3594                           
  3595                           ;incstack = 0
  3596  00105A  0012               	return		;funcret
  3597  00105C                     __end_of_showFreq:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postinc2	equ	0xFDE
  3609                           postdec2	equ	0xFDD
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           
  3614 ;; *************** function _dly *****************
  3615 ;; Defined at:
  3616 ;;		line 675 in file "fm.h"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  d               2    0[COMRAM] int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  i               2    2[COMRAM] int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3630 ;;      Params:         2       0       0       0
  3631 ;;      Locals:         2       0       0       0
  3632 ;;      Temps:          0       0       0       0
  3633 ;;      Totals:         4       0       0       0
  3634 ;;Total ram usage:        4 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_FMinit
  3640 ;;		_FMfrequenc
  3641 ;;		_main
  3642 ;;		_setVolume
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text24
  3647  000ED2                     __ptext24:
  3648                           	opt stack 0
  3649  000ED2                     _dly:
  3650                           	opt stack 28
  3651                           
  3652                           ;fm.h: 677: int i = 0;
  3653                           
  3654                           ;incstack = 0
  3655  000ED2  0E00               	movlw	0
  3656  000ED4  6E04               	movwf	dly@i+1,c
  3657  000ED6  0E00               	movlw	0
  3658  000ED8  6E03               	movwf	dly@i,c
  3659                           
  3660                           ;fm.h: 679: for (; d; --d)
  3661  000EDA  D00F               	goto	l1826
  3662  000EDC                     l1818:
  3663                           
  3664                           ;fm.h: 680: for (i = 100; i; --i);
  3665  000EDC  0E00               	movlw	0
  3666  000EDE  6E04               	movwf	dly@i+1,c
  3667  000EE0  0E64               	movlw	100
  3668  000EE2  6E03               	movwf	dly@i,c
  3669  000EE4  D003               	goto	l1822
  3670  000EE6                     l1820:
  3671  000EE6  0603               	decf	dly@i,f,c
  3672  000EE8  A0D8               	btfss	status,0,c
  3673  000EEA  0604               	decf	dly@i+1,f,c
  3674  000EEC                     l1822:
  3675  000EEC  5003               	movf	dly@i,w,c
  3676  000EEE  1004               	iorwf	dly@i+1,w,c
  3677  000EF0  A4D8               	btfss	status,2,c
  3678  000EF2  D7F9               	goto	l1820
  3679  000EF4  0601               	decf	dly@d,f,c
  3680  000EF6  A0D8               	btfss	status,0,c
  3681  000EF8  0602               	decf	dly@d+1,f,c
  3682  000EFA                     l1826:
  3683  000EFA  5001               	movf	dly@d,w,c
  3684  000EFC  1002               	iorwf	dly@d+1,w,c
  3685  000EFE  B4D8               	btfsc	status,2,c
  3686  000F00  0012               	return	
  3687  000F02  D7EC               	goto	l1818
  3688  000F04                     __end_of_dly:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           intcon	equ	0xFF2
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _FMwrite *****************
  3706 ;; Defined at:
  3707 ;;		line 168 in file "fm.h"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  adr             1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  adr             1    6[COMRAM] unsigned char 
  3712 ;;  regstr          2    0        unsigned int 
  3713 ;;  secndByt        1    5[COMRAM] unsigned char 
  3714 ;;  firstByt        1    4[COMRAM] unsigned char 
  3715 ;;  rpy             1    0        unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3725 ;;      Params:         0       0       0       0
  3726 ;;      Locals:         3       0       0       0
  3727 ;;      Temps:          2       0       0       0
  3728 ;;      Totals:         5       0       0       0
  3729 ;;Total ram usage:        5 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		_IdleI2C
  3734 ;;		_WriteI2C
  3735 ;; This function is called by:
  3736 ;;		_setBitInRegister
  3737 ;;		_seek
  3738 ;;		_readLOInjection
  3739 ;;		_tuneWithAutoHiLo
  3740 ;;		_FMinit
  3741 ;;		_FMfrequenc
  3742 ;;		_setVolume
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text25
  3747  000CC8                     __ptext25:
  3748                           	opt stack 0
  3749  000CC8                     _FMwrite:
  3750                           	opt stack 26
  3751                           
  3752                           ;incstack = 0
  3753                           ;FMwrite@adr stored from wreg
  3754  000CC8  6E07               	movwf	FMwrite@adr,c
  3755                           
  3756                           ;fm.h: 170: unsigned int regstr;
  3757                           ;fm.h: 171: unsigned char firstByt;
  3758                           ;fm.h: 172: unsigned char secndByt;
  3759                           ;fm.h: 173: unsigned char rpy;
  3760                           ;fm.h: 175: firstByt = regImg[adr] >> 8;
  3761  000CCA  5007               	movf	FMwrite@adr,w,c
  3762  000CCC  0D02               	mullw	2
  3763  000CCE  0E31               	movlw	low _regImg
  3764  000CD0  24F3               	addwf	prodl,w,c
  3765  000CD2  6ED9               	movwf	fsr2l,c
  3766  000CD4  0E00               	movlw	high _regImg
  3767  000CD6  20F4               	addwfc	prodh,w,c
  3768  000CD8  6EDA               	movwf	fsr2h,c
  3769  000CDA  CFDE F003          	movff	postinc2,??_FMwrite
  3770  000CDE  CFDD F004          	movff	postdec2,??_FMwrite+1
  3771  000CE2  C004  F003         	movff	??_FMwrite+1,??_FMwrite
  3772  000CE6  6A04               	clrf	??_FMwrite+1,c
  3773  000CE8  5003               	movf	??_FMwrite,w,c
  3774  000CEA  6E05               	movwf	FMwrite@firstByt,c
  3775                           
  3776                           ;fm.h: 176: secndByt = regImg[adr];
  3777  000CEC  5007               	movf	FMwrite@adr,w,c
  3778  000CEE  0D02               	mullw	2
  3779  000CF0  0E31               	movlw	low _regImg
  3780  000CF2  24F3               	addwf	prodl,w,c
  3781  000CF4  6ED9               	movwf	fsr2l,c
  3782  000CF6  0E00               	movlw	high _regImg
  3783  000CF8  20F4               	addwfc	prodh,w,c
  3784  000CFA  6EDA               	movwf	fsr2h,c
  3785  000CFC  50DF               	movf	indf2,w,c
  3786  000CFE  6E06               	movwf	FMwrite@secndByt,c
  3787                           
  3788                           ;fm.h: 178: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3789  000D00  80C5               	bsf	4037,0,c	;volatile
  3790  000D02                     l88:
  3791  000D02  B0C5               	btfsc	4037,0,c	;volatile
  3792  000D04  D7FE               	goto	l88
  3793                           
  3794                           ;fm.h: 179: IdleI2C();
  3795  000D06  EC1A  F008         	call	_IdleI2C	;wreg free
  3796                           
  3797                           ;fm.h: 182: if (WriteI2C(0x20)) return 1;
  3798  000D0A  0E20               	movlw	32
  3799  000D0C  ECA5  F006         	call	_WriteI2C
  3800  000D10  0900               	iorlw	0
  3801  000D12  B4D8               	btfsc	status,2,c
  3802  000D14  D002               	goto	l1052
  3803  000D16  0E01               	movlw	1
  3804  000D18  0012               	return	
  3805  000D1A                     l1052:
  3806                           
  3807                           ;fm.h: 183: IdleI2C();
  3808  000D1A  EC1A  F008         	call	_IdleI2C	;wreg free
  3809                           
  3810                           ;fm.h: 184: WriteI2C(adr);
  3811  000D1E  5007               	movf	FMwrite@adr,w,c
  3812  000D20  ECA5  F006         	call	_WriteI2C
  3813                           
  3814                           ;fm.h: 185: IdleI2C();
  3815  000D24  EC1A  F008         	call	_IdleI2C	;wreg free
  3816                           
  3817                           ;fm.h: 186: WriteI2C(firstByt);
  3818  000D28  5005               	movf	FMwrite@firstByt,w,c
  3819  000D2A  ECA5  F006         	call	_WriteI2C
  3820                           
  3821                           ;fm.h: 187: IdleI2C();
  3822  000D2E  EC1A  F008         	call	_IdleI2C	;wreg free
  3823                           
  3824                           ;fm.h: 188: WriteI2C(secndByt);
  3825  000D32  5006               	movf	FMwrite@secndByt,w,c
  3826  000D34  ECA5  F006         	call	_WriteI2C
  3827                           
  3828                           ;fm.h: 189: IdleI2C();
  3829  000D38  EC1A  F008         	call	_IdleI2C	;wreg free
  3830                           
  3831                           ;fm.h: 190: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3832  000D3C  84C5               	bsf	4037,2,c	;volatile
  3833  000D3E                     l93:
  3834  000D3E  B4C5               	btfsc	4037,2,c	;volatile
  3835  000D40  D7FE               	goto	l93
  3836                           
  3837                           ;fm.h: 191: IdleI2C();
  3838  000D42  EC1A  F008         	call	_IdleI2C	;wreg free
  3839                           
  3840                           ;fm.h: 192: return 0;
  3841  000D46  0E00               	movlw	0
  3842  000D48  0012               	return	
  3843  000D4A                     __end_of_FMwrite:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon	equ	0xFF2
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           indf2	equ	0xFDF
  3855                           postinc2	equ	0xFDE
  3856                           postdec2	equ	0xFDD
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function _FMready *****************
  3862 ;; Defined at:
  3863 ;;		line 534 in file "fm.h"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  3866 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), setVolume@dat(2), 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  sts             2   15[COMRAM] unsigned int 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      unsigned char 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3878 ;;      Params:         2       0       0       0
  3879 ;;      Locals:         2       0       0       0
  3880 ;;      Temps:          2       0       0       0
  3881 ;;      Totals:         6       0       0       0
  3882 ;;Total ram usage:        6 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    3
  3885 ;; This function calls:
  3886 ;;		_FMread
  3887 ;; This function is called by:
  3888 ;;		_FMinit
  3889 ;;		_FMfrequenc
  3890 ;;		_setVolume
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text26
  3895  000E4A                     __ptext26:
  3896                           	opt stack 0
  3897  000E4A                     _FMready:
  3898                           	opt stack 25
  3899                           
  3900                           ;fm.h: 536: unsigned int sts;
  3901                           ;fm.h: 538: if (FMread(0x13, &sts) != 0) return 1;
  3902                           
  3903                           ;incstack = 0
  3904  000E4A  0E10               	movlw	low FMready@sts
  3905  000E4C  6E03               	movwf	FMread@data,c
  3906  000E4E  0E00               	movlw	high FMready@sts
  3907  000E50  6E04               	movwf	FMread@data+1,c
  3908  000E52  0E13               	movlw	19
  3909  000E54  ECF0  F004         	call	_FMread
  3910  000E58  0900               	iorlw	0
  3911  000E5A  B4D8               	btfsc	status,2,c
  3912  000E5C  D002               	goto	l1834
  3913  000E5E  0E01               	movlw	1
  3914  000E60  0012               	return	
  3915  000E62                     l1834:
  3916                           
  3917                           ;fm.h: 539: sts &= 0x0020;
  3918  000E62  0E20               	movlw	32
  3919  000E64  1610               	andwf	FMready@sts,f,c
  3920  000E66  0E00               	movlw	0
  3921  000E68  1611               	andwf	FMready@sts+1,f,c
  3922                           
  3923                           ;fm.h: 540: *rdy = sts ? 1 : 0;
  3924  000E6A  5010               	movf	FMready@sts,w,c
  3925  000E6C  1011               	iorwf	FMready@sts+1,w,c
  3926  000E6E  B4D8               	btfsc	status,2,c
  3927  000E70  D002               	goto	u1200
  3928  000E72  0E01               	movlw	1
  3929  000E74  D001               	goto	u1210
  3930  000E76                     u1200:
  3931  000E76  0E00               	movlw	0
  3932  000E78                     u1210:
  3933  000E78  6E0E               	movwf	??_FMready& (0+255),c
  3934  000E7A  6A0F               	clrf	(??_FMready+1)& (0+255),c
  3935  000E7C  C00C  FFD9         	movff	FMready@rdy,fsr2l
  3936  000E80  C00D  FFDA         	movff	FMready@rdy+1,fsr2h
  3937  000E84  C00E  FFDE         	movff	??_FMready,postinc2
  3938  000E88  C00F  FFDD         	movff	??_FMready+1,postdec2
  3939                           
  3940                           ;fm.h: 541: return 0;
  3941  000E8C  0E00               	movlw	0
  3942  000E8E  0012               	return	
  3943  000E90                     __end_of_FMready:
  3944                           	opt stack 0
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           prodh	equ	0xFF4
  3950                           prodl	equ	0xFF3
  3951                           intcon	equ	0xFF2
  3952                           postinc0	equ	0xFEE
  3953                           wreg	equ	0xFE8
  3954                           indf2	equ	0xFDF
  3955                           postinc2	equ	0xFDE
  3956                           postdec2	equ	0xFDD
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function _FMread *****************
  3962 ;; Defined at:
  3963 ;;		line 210 in file "fm.h"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  regAddr         1    wreg     unsigned char 
  3966 ;;  data            2    2[COMRAM] PTR unsigned int 
  3967 ;;		 -> main@ui(2), FMready@sts(2), frequency@data(2), tuneWithAutoHiLo@status(2), 
  3968 ;;		 -> readLOInjection@status(2), seek@status(2), 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  regAddr         1    8[COMRAM] unsigned char 
  3971 ;;  secndByt        1   10[COMRAM] unsigned char 
  3972 ;;  firstByt        1    9[COMRAM] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      unsigned char 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3982 ;;      Params:         2       0       0       0
  3983 ;;      Locals:         3       0       0       0
  3984 ;;      Temps:          4       0       0       0
  3985 ;;      Totals:         9       0       0       0
  3986 ;;Total ram usage:        9 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    2
  3989 ;; This function calls:
  3990 ;;		_IdleI2C
  3991 ;;		_ReadI2C
  3992 ;;		_WriteI2C
  3993 ;; This function is called by:
  3994 ;;		_seek
  3995 ;;		_readLOInjection
  3996 ;;		_tuneWithAutoHiLo
  3997 ;;		_frequency
  3998 ;;		_FMready
  3999 ;;		_FMvers
  4000 ;;		_FMid
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text27
  4005  0009E0                     __ptext27:
  4006                           	opt stack 0
  4007  0009E0                     _FMread:
  4008                           	opt stack 25
  4009                           
  4010                           ;incstack = 0
  4011                           ;FMread@regAddr stored from wreg
  4012  0009E0  6E09               	movwf	FMread@regAddr,c
  4013                           
  4014                           ;fm.h: 212: unsigned char firstByt;
  4015                           ;fm.h: 213: unsigned char secndByt;
  4016                           ;fm.h: 215: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4017  0009E2  80C5               	bsf	4037,0,c	;volatile
  4018  0009E4                     l98:
  4019  0009E4  B0C5               	btfsc	4037,0,c	;volatile
  4020  0009E6  D7FE               	goto	l98
  4021                           
  4022                           ;fm.h: 216: IdleI2C();
  4023  0009E8  EC1A  F008         	call	_IdleI2C	;wreg free
  4024                           
  4025                           ;fm.h: 219: if (WriteI2C(0x20)) return 1;
  4026  0009EC  0E20               	movlw	32
  4027  0009EE  ECA5  F006         	call	_WriteI2C
  4028  0009F2  0900               	iorlw	0
  4029  0009F4  B4D8               	btfsc	status,2,c
  4030  0009F6  D002               	goto	l1694
  4031  0009F8  0E01               	movlw	1
  4032  0009FA  0012               	return	
  4033  0009FC                     l1694:
  4034                           
  4035                           ;fm.h: 220: IdleI2C();
  4036  0009FC  EC1A  F008         	call	_IdleI2C	;wreg free
  4037                           
  4038                           ;fm.h: 221: WriteI2C(regAddr);
  4039  000A00  5009               	movf	FMread@regAddr,w,c
  4040  000A02  ECA5  F006         	call	_WriteI2C
  4041                           
  4042                           ;fm.h: 222: IdleI2C();
  4043  000A06  EC1A  F008         	call	_IdleI2C	;wreg free
  4044                           
  4045                           ;fm.h: 223: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  4046  000A0A  82C5               	bsf	4037,1,c	;volatile
  4047  000A0C                     l103:
  4048  000A0C  B2C5               	btfsc	4037,1,c	;volatile
  4049  000A0E  D7FE               	goto	l103
  4050                           
  4051                           ;fm.h: 224: IdleI2C();
  4052  000A10  EC1A  F008         	call	_IdleI2C	;wreg free
  4053                           
  4054                           ;fm.h: 225: WriteI2C(0x20 + 0x01);
  4055  000A14  0E21               	movlw	33
  4056  000A16  ECA5  F006         	call	_WriteI2C
  4057                           
  4058                           ;fm.h: 226: IdleI2C();
  4059  000A1A  EC1A  F008         	call	_IdleI2C	;wreg free
  4060                           
  4061                           ;fm.h: 227: firstByt = ReadI2C();
  4062  000A1E  ECEF  F007         	call	_ReadI2C	;wreg free
  4063  000A22  6E0A               	movwf	FMread@firstByt,c
  4064                           
  4065                           ;fm.h: 228: IdleI2C();
  4066  000A24  EC1A  F008         	call	_IdleI2C	;wreg free
  4067                           
  4068                           ;fm.h: 229: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4069  000A28  9AC5               	bcf	4037,5,c	;volatile
  4070  000A2A  88C5               	bsf	4037,4,c	;volatile
  4071  000A2C                     l106:
  4072  000A2C  B8C5               	btfsc	4037,4,c	;volatile
  4073  000A2E  D7FE               	goto	l106
  4074                           
  4075                           ;fm.h: 230: IdleI2C();
  4076  000A30  EC1A  F008         	call	_IdleI2C	;wreg free
  4077                           
  4078                           ;fm.h: 231: secndByt = ReadI2C();
  4079  000A34  ECEF  F007         	call	_ReadI2C	;wreg free
  4080  000A38  6E0B               	movwf	FMread@secndByt,c
  4081                           
  4082                           ;fm.h: 232: IdleI2C();
  4083  000A3A  EC1A  F008         	call	_IdleI2C	;wreg free
  4084                           
  4085                           ;fm.h: 233: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4086  000A3E  8AC5               	bsf	4037,5,c	;volatile
  4087  000A40  88C5               	bsf	4037,4,c	;volatile
  4088  000A42                     l109:
  4089  000A42  B8C5               	btfsc	4037,4,c	;volatile
  4090  000A44  D7FE               	goto	l109
  4091                           
  4092                           ;fm.h: 234: IdleI2C();
  4093  000A46  EC1A  F008         	call	_IdleI2C	;wreg free
  4094                           
  4095                           ;fm.h: 235: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4096  000A4A  84C5               	bsf	4037,2,c	;volatile
  4097  000A4C                     l112:
  4098  000A4C  B4C5               	btfsc	4037,2,c	;volatile
  4099  000A4E  D7FE               	goto	l112
  4100                           
  4101                           ;fm.h: 236: IdleI2C();
  4102  000A50  EC1A  F008         	call	_IdleI2C	;wreg free
  4103                           
  4104                           ;fm.h: 237: *data = firstByt;
  4105  000A54  500A               	movf	FMread@firstByt,w,c
  4106  000A56  6E05               	movwf	??_FMread& (0+255),c
  4107  000A58  6A06               	clrf	(??_FMread+1)& (0+255),c
  4108  000A5A  C003  FFD9         	movff	FMread@data,fsr2l
  4109  000A5E  C004  FFDA         	movff	FMread@data+1,fsr2h
  4110  000A62  C005  FFDE         	movff	??_FMread,postinc2
  4111  000A66  C006  FFDD         	movff	??_FMread+1,postdec2
  4112                           
  4113                           ;fm.h: 238: *data <<= 8;
  4114  000A6A  C003  FFD9         	movff	FMread@data,fsr2l
  4115  000A6E  C004  FFDA         	movff	FMread@data+1,fsr2h
  4116  000A72  50DE               	movf	postinc2,w,c
  4117  000A74  6EDD               	movwf	postdec2,c
  4118  000A76  6ADF               	clrf	indf2,c
  4119                           
  4120                           ;fm.h: 239: *data = *data | secndByt;
  4121  000A78  C003  FFD9         	movff	FMread@data,fsr2l
  4122  000A7C  C004  FFDA         	movff	FMread@data+1,fsr2h
  4123  000A80  CFDE F005          	movff	postinc2,??_FMread
  4124  000A84  CFDD F006          	movff	postdec2,??_FMread+1
  4125  000A88  500B               	movf	FMread@secndByt,w,c
  4126  000A8A  6E07               	movwf	(??_FMread+2)& (0+255),c
  4127  000A8C  6A08               	clrf	(??_FMread+3)& (0+255),c
  4128  000A8E  5005               	movf	??_FMread,w,c
  4129  000A90  1207               	iorwf	??_FMread+2,f,c
  4130  000A92  5006               	movf	??_FMread+1,w,c
  4131  000A94  1208               	iorwf	??_FMread+3,f,c
  4132  000A96  C003  FFD9         	movff	FMread@data,fsr2l
  4133  000A9A  C004  FFDA         	movff	FMread@data+1,fsr2h
  4134  000A9E  C007  FFDE         	movff	??_FMread+2,postinc2
  4135  000AA2  C008  FFDD         	movff	??_FMread+3,postdec2
  4136                           
  4137                           ;fm.h: 241: return 0;
  4138  000AA6  0E00               	movlw	0
  4139  000AA8  0012               	return	
  4140  000AAA                     __end_of_FMread:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           intcon	equ	0xFF2
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           indf2	equ	0xFDF
  4152                           postinc2	equ	0xFDE
  4153                           postdec2	equ	0xFDD
  4154                           fsr2h	equ	0xFDA
  4155                           fsr2l	equ	0xFD9
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _WriteI2C *****************
  4159 ;; Defined at:
  4160 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_writ.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  data_out        1    wreg     unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  data_out        1    1[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      char 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4174 ;;      Params:         0       0       0       0
  4175 ;;      Locals:         1       0       0       0
  4176 ;;      Temps:          0       0       0       0
  4177 ;;      Totals:         1       0       0       0
  4178 ;;Total ram usage:        1 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    1
  4181 ;; This function calls:
  4182 ;;		_IdleI2C
  4183 ;; This function is called by:
  4184 ;;		_FMwrite
  4185 ;;		_FMread
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text28
  4190  000D4A                     __ptext28:
  4191                           	opt stack 0
  4192  000D4A                     _WriteI2C:
  4193                           	opt stack 26
  4194                           
  4195                           ;incstack = 0
  4196                           ;WriteI2C@data_out stored from wreg
  4197  000D4A  6E02               	movwf	WriteI2C@data_out,c
  4198  000D4C  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  4199  000D50  AEC6               	btfss	4038,7,c	;volatile
  4200  000D52  D002               	goto	l1006
  4201  000D54  0EFF               	movlw	255
  4202  000D56  0012               	return	
  4203  000D58                     l1006:
  4204  000D58  50C6               	movf	4038,w,c	;volatile
  4205  000D5A  0B0F               	andlw	15
  4206  000D5C  0A08               	xorlw	8
  4207  000D5E  B4D8               	btfsc	status,2,c
  4208  000D60  D00F               	goto	l1024
  4209  000D62  50C6               	movf	4038,w,c	;volatile
  4210  000D64  0B0F               	andlw	15
  4211  000D66  0A0B               	xorlw	11
  4212  000D68  B4D8               	btfsc	status,2,c
  4213  000D6A  D00A               	goto	l1024
  4214  000D6C  88C6               	bsf	4038,4,c	;volatile
  4215  000D6E                     l363:
  4216  000D6E  A69E               	btfss	3998,3,c	;volatile
  4217  000D70  D7FE               	goto	l363
  4218  000D72  A4C7               	btfss	4039,2,c	;volatile
  4219  000D74  B0C7               	btfsc	4039,0,c	;volatile
  4220  000D76  D002               	goto	l1020
  4221  000D78  0EFE               	movlw	254
  4222  000D7A  0012               	return	
  4223  000D7C                     l1020:
  4224  000D7C  0E00               	movlw	0
  4225  000D7E  0012               	return	
  4226  000D80                     l1024:
  4227  000D80  50C6               	movf	4038,w,c	;volatile
  4228  000D82  0B0F               	andlw	15
  4229  000D84  0A08               	xorlw	8
  4230  000D86  B4D8               	btfsc	status,2,c
  4231  000D88  D005               	goto	l372
  4232  000D8A  50C6               	movf	4038,w,c	;volatile
  4233  000D8C  0B0F               	andlw	15
  4234  000D8E  0A0B               	xorlw	11
  4235  000D90  A4D8               	btfss	status,2,c
  4236  000D92  0012               	return	
  4237  000D94                     l372:
  4238  000D94  B0C7               	btfsc	4039,0,c	;volatile
  4239  000D96  D7FE               	goto	l372
  4240  000D98  EC1A  F008         	call	_IdleI2C	;wreg free
  4241  000D9C  ACC5               	btfss	4037,6,c	;volatile
  4242  000D9E  D002               	goto	l1038
  4243  000DA0  0EFE               	movlw	254
  4244  000DA2  0012               	return	
  4245  000DA4                     l1038:
  4246  000DA4  0E00               	movlw	0
  4247  000DA6  0012               	return	
  4248  000DA8                     __end_of_WriteI2C:
  4249                           	opt stack 0
  4250                           tblptru	equ	0xFF8
  4251                           tblptrh	equ	0xFF7
  4252                           tblptrl	equ	0xFF6
  4253                           tablat	equ	0xFF5
  4254                           prodh	equ	0xFF4
  4255                           prodl	equ	0xFF3
  4256                           intcon	equ	0xFF2
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           postdec2	equ	0xFDD
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _IdleI2C *****************
  4267 ;; Defined at:
  4268 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_idle.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4282 ;;      Params:         0       0       0       0
  4283 ;;      Locals:         0       0       0       0
  4284 ;;      Temps:          1       0       0       0
  4285 ;;      Totals:         1       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_FMwrite
  4292 ;;		_FMread
  4293 ;;		_WriteI2C
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text29
  4298  001034                     __ptext29:
  4299                           	opt stack 0
  4300  001034                     _IdleI2C:
  4301                           	opt stack 26
  4302  001034                     l992:
  4303  001034  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  4304  001038  0E1F               	movlw	31
  4305  00103A  1601               	andwf	??_IdleI2C,f,c
  4306  00103C  A4D8               	btfss	status,2,c
  4307  00103E  D7FA               	goto	l992
  4308  001040  A4C7               	btfss	4039,2,c	;volatile
  4309  001042  0012               	return	
  4310  001044  D7F7               	goto	l992
  4311  001046                     __end_of_IdleI2C:
  4312                           	opt stack 0
  4313                           tblptru	equ	0xFF8
  4314                           tblptrh	equ	0xFF7
  4315                           tblptrl	equ	0xFF6
  4316                           tablat	equ	0xFF5
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           indf2	equ	0xFDF
  4323                           postinc2	equ	0xFDE
  4324                           postdec2	equ	0xFDD
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function _ReadI2C *****************
  4330 ;; Defined at:
  4331 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_read.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4345 ;;      Params:         0       0       0       0
  4346 ;;      Locals:         0       0       0       0
  4347 ;;      Temps:          0       0       0       0
  4348 ;;      Totals:         0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_FMread
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text30
  4359  000FDE                     __ptext30:
  4360                           	opt stack 0
  4361  000FDE                     _ReadI2C:
  4362                           	opt stack 26
  4363                           
  4364                           ;incstack = 0
  4365  000FDE  50C6               	movf	4038,w,c	;volatile
  4366  000FE0  0B0F               	andlw	15
  4367  000FE2  0A08               	xorlw	8
  4368  000FE4  B4D8               	btfsc	status,2,c
  4369  000FE6  D004               	goto	l338
  4370  000FE8  50C6               	movf	4038,w,c	;volatile
  4371  000FEA  0B0F               	andlw	15
  4372  000FEC  0A0B               	xorlw	11
  4373  000FEE  B4D8               	btfsc	status,2,c
  4374  000FF0                     l338:
  4375  000FF0  86C5               	bsf	4037,3,c	;volatile
  4376  000FF2                     l339:
  4377  000FF2  A0C7               	btfss	4039,0,c	;volatile
  4378  000FF4  D7FE               	goto	l339
  4379  000FF6  50C9               	movf	4041,w,c	;volatile
  4380  000FF8  0012               	return	
  4381  000FFA                     __end_of_ReadI2C:
  4382                           	opt stack 0
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           indf2	equ	0xFDF
  4393                           postinc2	equ	0xFDE
  4394                           postdec2	equ	0xFDD
  4395                           fsr2h	equ	0xFDA
  4396                           fsr2l	equ	0xFD9
  4397                           status	equ	0xFD8
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           indf2	equ	0xFDF
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414                           	psect	rparam
  4415  0000                     tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf2	equ	0xFDF
  4425                           postinc2	equ	0xFDE
  4426                           postdec2	equ	0xFDD
  4427                           fsr2h	equ	0xFDA
  4428                           fsr2l	equ	0xFD9
  4429                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    87
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      84
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), setVolume@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), frequency@data(COMRAM[2]), tuneWithAutoHiLo@status(COMRAM[2]), 
		 -> readLOInjection@status(COMRAM[2]), seek@status(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_VolumeDown
    _main->_VolumeUp
    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _VolumeUp->_seek
    _VolumeDown->_seek
    _seek->_tuneWithAutoHiLo
    _tuneWithAutoHiLo->_readLOInjection
    _setHardmute->_setBitInRegister
    _readLOInjection->_setBitInRegister
    _frequency->_FMread
    _setSeekDirection->_setBitInRegister
    _setBitInRegister->_FMwrite
    _SeekUP->_delay_10ms
    _SeekDOWN->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   50065
                                             42 COMRAM     6     6      0
                         _FMfrequenc
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                           _SeekDOWN
                             _SeekUP
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    2206
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    2206
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1800
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           19    17      2     416
                                              0 COMRAM    19    17      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0   19772
                                             41 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0   19772
                                             41 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (2) _seek                                                 7     7      0   19343
                                             34 COMRAM     7     7      0
                             _FMread
                            _FMwrite
                          _frequency
                   _setBitInRegister
                        _setHardmute
                   _setSeekDirection
                   _tuneWithAutoHiLo
 ---------------------------------------------------------------------------------
 (3) _tuneWithAutoHiLo                                     8     8      0   10129
                                             26 COMRAM     8     8      0
                             _FMread
                            _FMwrite
                          _frequency
                    _readLOInjection
                   _setBitInRegister
                        _setHardmute
 ---------------------------------------------------------------------------------
 (4) _setHardmute                                          1     1      0    2464
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _readLOInjection                                      9     9      0    3444
                                             17 COMRAM     9     9      0
                             _FMread
                            _FMwrite
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _frequency                                            9     7      2     798
                                             11 COMRAM     9     7      2
                             _FMread
 ---------------------------------------------------------------------------------
 (3) _setSeekDirection                                     1     1      0    2486
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (5) _setBitInRegister                                    10     8      2    2442
                                              7 COMRAM    10     8      2
                            _FMwrite
 ---------------------------------------------------------------------------------
 (1) _SeekUP                                               0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _SeekDOWN                                             0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     406
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     833
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1698
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     368
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2    1013
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     747
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMfrequenc
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _SeekDOWN
     _delay_10ms
   _SeekUP
     _delay_10ms
   _VolumeDown
     _delay_10ms
     _seek
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _VolumeUp
     _delay_10ms
     _seek
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _butnEvent
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      54       1       88.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       8        0.0%
DATA                 0      0      54      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Feb 19 18:39:55 2017

    readLOInjection@rssi_val 0018                  __CFG_CP$OFF 000000                  _SSPSTATbits 000FC7  
                         l93 0D3E                           l88 0D02                           l98 09E4  
                __CFG_BORV$3 000000                          l103 0A0C                          l112 0A4C  
                        l106 0A2C                          l131 07DA                          l211 1056  
                        l109 0A42                          l142 08B4                          l151 06F6  
                        l152 0730                          l234 03FC                          l251 04EC  
                        l243 049C                          l180 0AE6                          l236 0392  
                        l253 04D4                          l245 0434                          l263 0574  
                        l239 03D4                          l256 053C                          l248 0474  
                        l338 0FF0                          l258 0524                          l339 0FF2  
                        l363 0D6E                          l372 0D94                          l992 1034  
                        _dly 0ED2                 _softmute_bit 0350                          prod 000FF3  
                        wreg 000FE8                 __CFG_WDT$OFF 000000                         l1020 0D7C  
                       l1006 0D58                         l1024 0D80                         l2010 0376  
                       l1052 0D1A                         l2020 03B6                         l1038 0DA4  
                       l2032 03EA                         l2026 03E0                         l2132 058A  
                       l2108 0532                         l2060 0480                         l2044 0418  
                       l2118 0558                         l2054 0458                         l2128 0582  
                       l2066 048A                         l2260 097C                         l2252 095C  
                       l2078 04B8                         l2262 0982                         l2254 096A  
                       l2088 04E2                         l2264 098A                         l2256 0970  
                       l2272 099C                         l1730 0BCC                         l1810 071A  
                       l2098 0508                         l2266 0990                         l2258 0976  
                       l1820 0EE6                         l1732 0C26                         l1900 0C62  
                       l2268 0996                         l1822 0EEC                         l1760 08AC  
                       l1808 0690                         l1834 0E62                         l1818 0EDC  
                       l1826 0EFA                         l1922 0F2C                         l1754 0894  
                       l1924 0F3A                         l1780 0DD6                         l1748 085E  
                       l1694 09FC                         l1942 0AAE                         l1960 0B00  
                       l1768 08D4                         ?_dly 0001                         l1962 0B04  
                       l1946 0AB6                         l1866 07BE                         l1972 0B1C  
                       l1966 0B0C                         l1984 0B3A                         l1976 0B20  
                       l1896 0C4E                         l1986 0B48                         l1988 0B54  
                       u1200 0E76                         u1210 0E78                         u1125 08E0  
                       u1054 0BA6                         u1055 0BA0                         u1064 0BFA  
                       u1065 0BF4                         u1075 0EB2                         u1500 0434  
                       u1430 0392                         u1610 0524                         u1530 0474  
                       u1460 03D4                         u1650 0574                         u1570 04D4  
                       u1750 0940                         u1807 045E                         u1817 04BE  
                       u1827 050E                         u1837 055E                         u1847 0F32  
                       u1777 037C                         u1787 03BC                         u1797 041E  
                       _Init 0E02              __end_of_FMready 0E90                         _main 0916  
                       _seek 0740                         dly@d 0001                         dly@i 0003  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
            __end_of_FMwrite 0D4A                         prodh 000FF4                         prodl 000FF3  
              seek@direction 0025                         start 0000                __CFG_IESO$OFF 000000  
            __end_of_IdleI2C 1046                __CFG_MCLRE$ON 000000                 ___param_bank 000010  
            __end_of_ReadI2C 0FFA      tuneWithAutoHiLo@rssi_hi 0020              __end_of_OpenI2C 0FA6  
    tuneWithAutoHiLo@rssi_lo 001F                        ??_dly 0003                        ?_Init 0001  
                      ?_main 0001                        ?_seek 0001                        _T0CON 000FD5  
                      _LCDPS 000F58                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISG 000F98                __CFG_PWRT$OFF 000000               __CFG_FCMEN$OFF 000000  
            __end_of_regDflt 0325                        _errfm 1056                  ?_FMfrequenc 0012  
              _hiloctrl1_bit 033C                _hiloctrl2_bit 0340               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        status 000FD8               seek@curChannel 0023  
               ?_nextChannel 0001              __initialization 0FFA                 __end_of_Init 0E4A  
               __end_of_main 09E0                 __end_of_seek 083E                 ?_setHardmute 0001  
           __end_of_SeekDOWN 1034                       ??_Init 0003                       ??_main 002B  
setBitInRegister@bitRegister 0008                       ??_seek 0023                __activetblptr 000002  
           __end_of_MuteHard 105A                       _ADCON1 000FC1                    ??_FMready 000E  
                     ?_errfm 0001            ?_setSeekDirection 0001             __end_of_WriteI2C 0DA8  
                  ??_FMwrite 0003             __end_of_VolumeUp 0FC2                  OpenI2C@slew 0001  
                  ??_IdleI2C 0001                       _OSCCON 000FD3           ??_setSeekDirection 0012  
        readLOInjection@loHi 0015                       _FMinit 0AAA                       _FMread 09E0  
                     _SSPADD 000FC8          readLOInjection@temp 0016                       _SSPBUF 000FC9  
                     _FMvers 1046                    ??_ReadI2C 0001                    ??_OpenI2C 0002  
                     _SeekUP 1010               __CFG_XINST$OFF 000000            ?_tuneWithAutoHiLo 0001  
         ??_tuneWithAutoHiLo 001B   tuneWithAutoHiLo@curChannel 001B          __size_of_FMfrequenc 009A  
                     _regImg 0031                       clear_0 1000         __end_of_hardmute_bit 033C  
           __end_of_seek_bit 034C                       main@ui 002F             __end_of_showFreq 105C  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8          butnEvent@timereturn 0012             __end_of_tune_bit 0358  
          ?_setBitInRegister 0008                   __accesstop 0060      __end_of__initialization 1006  
         ??_setBitInRegister 000A                ___rparam_used 000001                   _VolumeDown 0FC2  
             __pcstackCOMRAM 0001                __end_of_errfm 1058               setVolume@F6671 0325  
   __size_of_readLOInjection 00D8              __CFG_OSC$INTIO7 000000                      ??_errfm 0001  
   __size_of_previousChannel 001E           __size_of_butnEvent 023A                   _delay_10ms 0F2A  
                    ?_FMinit 0001                      ?_FMread 0003                    ?_SeekDOWN 0001  
                    ?_FMvers 000C           __size_of_frequency 0042                      ?_SeekUP 0001  
                  ?_MuteHard 0001         __end_of_hiloside_bit 0348       __end_ofsetVolume@F6671 0338  
       __size_of_nextChannel 001E                    ?_WriteI2C 0001                    ?_VolumeUp 0001  
       __size_of_setHardmute 0026                    FMinit@dat 0012                      _FMready 0E4A  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                 ??_FMfrequenc 0014  
                    _SSPSTAT 000FC7                      _FMwrite 0CC8                      _IdleI2C 1034  
                 ??_SeekDOWN 0004              __size_of_FMinit 00C6              __size_of_FMread 00CA  
                  FMvers@vsn 000C                      _ReadI2C 0FDE              __size_of_FMvers 0010  
                    _OpenI2C 0F88                      __Hparam 0000                      __Lparam 0000  
                ?_VolumeDown 0001                   ??_MuteHard 0001              __size_of_SeekUP 0012  
                  ?_showFreq 0001                 __psmallconst 0300              __CFG_STVREN$OFF 000000  
                    __pcinit 0FFA                   ??_WriteI2C 0002            __end_of_butnEvent 0594  
         __end_of_FMfrequenc 0CC8                   ??_VolumeUp 002A                      __ramtop 0300  
                    __ptext0 0916                      __ptext1 0F4C                      __ptext2 0F6A  
                    __ptext3 0C2E                      __ptext4 1056                      __ptext5 035A  
                    __ptext6 0FA6                      __ptext7 0FC2                      __ptext8 0740  
                    __ptext9 0594                    _T0CONbits 000FD5            __end_of_frequency 0ED2  
                    _regDflt 0301                 __size_of_dly 0032                      main@evt 002D  
          ??_readLOInjection 0012         end_of_initialization 1006                  ?_delay_10ms 0001  
               _hardmute_bit 0338                __Lmediumconst 0000                   _seekup_bit 034C  
          ??_previousChannel 001C                  FMfrequenc@f 0012                   ??_showFreq 0001  
                    postdec2 000FDD    __size_of_setSeekDirection 005A                      postinc0 000FEE  
                    postinc2 000FDE                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTGbits 000F86    __size_of_tuneWithAutoHiLo 01AC  
                  _TRISCbits 000F94          __size_of_VolumeDown 001C                VolumeDown@dir 002A  
             __end_of_FMinit 0B70               __end_of_FMread 0AAA               __end_of_FMvers 1056  
     tuneWithAutoHiLo@status 0021               __end_of_SeekUP 1022    __size_of_setBitInRegister 00BE  
        setHardmute@bitState 0012          __size_of_delay_10ms 0022                   butnEvent@c 0004  
        start_initialization 0FFA                  __end_of_dly 0F04             WriteI2C@data_out 0002  
               _hiloside_bit 0344                     ??_FMinit 0012                     ??_FMread 0005  
                   ??_FMvers 000E            __size_of_SeekDOWN 0012                     ??_SeekUP 0004  
          __size_of_MuteHard 0002            __size_of_WriteI2C 005E            __size_of_VolumeUp 001C  
                __pbssCOMRAM 0031                  VolumeUp@dir 002A                     ?_FMready 000C  
      __end_of_hiloctrl1_bit 0340        __end_of_hiloctrl2_bit 0344                   seek@status 0028  
                   ?_FMwrite 0001                     ?_IdleI2C 0001                     ?_ReadI2C 0001  
                   ?_OpenI2C 0001                ??_nextChannel 001C                 ??_VolumeDown 002A  
           _setSeekDirection 0DA8                ??_setHardmute 0012            __size_of_showFreq 0002  
                   FMinit@ad 0014              _readLOInjection 083E                  __smallconst 0300  
                  _butnEvent 035A              FMwrite@firstByt 0005             _tuneWithAutoHiLo 0594  
            _previousChannel 0F4C                    _frequency 0E90           __end_of_VolumeDown 0FDE  
            FMwrite@secndByt 0006               __size_of_errfm 0002                 ??_delay_10ms 0003  
               MuteHard@down 0001                frequency@data 0013               FMread@firstByt 000A  
                 FMread@data 0003                     _PIR1bits 000F9E             _setBitInRegister 0B70  
             FMread@secndByt 000B                   FMready@rdy 000C                   FMready@sts 0010  
        __end_of_nextChannel 0F88        readLOInjection@status 0019           __end_of_delay_10ms 0F4C  
                 ?_butnEvent 0001          __end_of_setHardmute 0F2A                   ?_frequency 000C  
           __size_of_FMready 0046             __size_of_FMwrite 0082             OpenI2C@sync_mode 0002  
                   _SeekDOWN 1022             __size_of_IdleI2C 0012         __end_of_softmute_bit 0354  
           __size_of_ReadI2C 001C                     __Hrparam 0000             __size_of_OpenI2C 001E  
                   _MuteHard 1058                     __Lrparam 0000      __end_of_readLOInjection 0916  
                 FMwrite@adr 0007                     _WriteI2C 0D4A                     _VolumeUp 0FA6  
    __end_of_previousChannel 0F6A    setSeekDirection@direction 0012     setBitInRegister@bitState 0009  
                   __ptext10 0F04                     __ptext11 083E                     __ptext20 0F88  
                   __ptext12 0E90                     __ptext21 1046                     __ptext13 0DA8  
                   __ptext30 0FDE                     __ptext22 0AAA                     __ptext14 0B70  
                   __ptext23 105A                     __ptext15 1010                     __ptext24 0ED2  
                   __ptext16 1022                     __ptext25 0CC8                     __ptext17 0F2A  
                   __ptext26 0E4A                     __ptext18 1058                     __ptext27 09E0  
                   __ptext19 0E02                     __ptext28 0D4A                     __ptext29 1034  
                delay_10ms@n 0001                __size_of_Init 0048                __size_of_main 00CA  
              __size_of_seek 00FE                     _seek_bit 0348                FMread@regAddr 0009  
                _nextChannel 0F6A                     _showFreq 105A                FMfrequenc@dat 0018  
                _setHardmute 0F04                     _tune_bit 0354         tuneWithAutoHiLo@temp 001D  
                ??_butnEvent 0003                   _INTCONbits 000FF2           __end_of_seekup_bit 0350  
                ??_frequency 000E     __end_of_setSeekDirection 0E02                     seek@temp 0026  
    setBitInRegister@address 0011     __end_of_tuneWithAutoHiLo 0740                 FMfrequenc@cn 001A  
           ?_readLOInjection 0001             ?_previousChannel 0001                  _SSPCON1bits 000FC6  
                _SSPCON2bits 000FC5     __end_of_setBitInRegister 0C2E                   _FMfrequenc 0C2E  
             butnEvent@c_611 0006               butnEvent@c_612 0008               butnEvent@c_613 000A  
             butnEvent@c_630 0010               butnEvent@c_622 000C               butnEvent@c_623 000E  
