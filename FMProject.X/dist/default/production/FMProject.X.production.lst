

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Feb 17 19:19:06 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	smallconst
    36  000300                     __psmallconst:
    37                           	opt stack 0
    38  000300  00                 	db	0
    39  000301                     _regDflt:
    40                           	opt stack 0
    41  000301  FFFF               	dw	65535
    42  000303  5B15               	dw	23317
    43  000305  D0B9               	dw	53433
    44  000307  A010               	dw	40976
    45  000309  0780               	dw	1920
    46  00030B  28AB               	dw	10411
    47  00030D  6400               	dw	25600
    48  00030F  1EE7               	dw	7911
    49  000311  7141               	dw	28993
    50  000313  007D               	dw	125
    51  000315  82C6               	dw	33478
    52  000317  4F55               	dw	20309
    53  000319  970C               	dw	38668
    54  00031B  B845               	dw	47173
    55  00031D  FC2D               	dw	64557
    56  00031F  8097               	dw	32919
    57  000321  04A1               	dw	1185
    58  000323  DF6A               	dw	57194
    59  000325                     __end_of_regDflt:
    60                           	opt stack 0
    61  000325                     setVolume@F6676:
    62                           	opt stack 0
    63  000325  0F                 	db	15
    64  000326  CF                 	db	207
    65  000327  DF                 	db	223
    66  000328  FF                 	db	255
    67  000329  CB                 	db	203
    68  00032A  DB                 	db	219
    69  00032B  FB                 	db	251
    70  00032C  FA                 	db	250
    71  00032D  F9                 	db	249
    72  00032E  F8                 	db	248
    73  00032F  F7                 	db	247
    74  000330  D6                 	db	214
    75  000331  E6                 	db	230
    76  000332  F6                 	db	246
    77  000333  E3                 	db	227
    78  000334  F3                 	db	243
    79  000335  F2                 	db	242
    80  000336  F1                 	db	241
    81  000337  F0                 	db	240
    82  000338                     __end_ofsetVolume@F6676:
    83                           	opt stack 0
    84  0000                     _LCDCON	set	3929
    85  0000                     _LCDPS	set	3928
    86  0000                     _LCDSE0	set	3930
    87  0000                     _LCDSE1	set	3931
    88  0000                     _LCDSE2	set	3932
    89  0000                     _LCDSE3	set	3933
    90  0000                     _ADCON1	set	4033
    91  0000                     _INTCONbits	set	4082
    92  0000                     _OSCCON	set	4051
    93  0000                     _PIR1bits	set	3998
    94  0000                     _PORTA	set	3968
    95  0000                     _PORTAbits	set	3968
    96  0000                     _PORTB	set	3969
    97  0000                     _PORTBbits	set	3969
    98  0000                     _PORTC	set	3970
    99  0000                     _PORTCbits	set	3970
   100  0000                     _PORTGbits	set	3974
   101  0000                     _SSPADD	set	4040
   102  0000                     _SSPBUF	set	4041
   103  0000                     _SSPCON1	set	4038
   104  0000                     _SSPCON1bits	set	4038
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPCON2bits	set	4037
   107  0000                     _SSPSTAT	set	4039
   108  0000                     _SSPSTATbits	set	4039
   109  0000                     _T0CON	set	4053
   110  0000                     _T0CONbits	set	4053
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TRISG	set	3992
   118  0000                     _LCDDATA0	set	3936
   119                           
   120                           ; #config settings
   121  000338  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  000AC8                     __pcinit:
   125                           	opt stack 0
   126  000AC8                     start_initialization:
   127                           	opt stack 0
   128  000AC8                     __initialization:
   129                           	opt stack 0
   130                           
   131                           ; Clear objects allocated to COMRAM (36 bytes)
   132  000AC8  EE00  F034         	lfsr	0,__pbssCOMRAM
   133  000ACC  0E24               	movlw	36
   134  000ACE                     clear_0:
   135  000ACE  6AEE               	clrf	postinc0,c
   136  000AD0  06E8               	decf	wreg,f,c
   137  000AD2  E1FD               	bnz	clear_0
   138  000AD4                     end_of_initialization:
   139                           	opt stack 0
   140  000AD4                     __end_of__initialization:
   141                           	opt stack 0
   142  000AD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143  000AD6  6EF8               	movwf	tblptru,c
   144  000AD8  0100               	movlb	0
   145  000ADA  EF91  F003         	goto	_main	;jump to C main() function
   146                           tblptru	equ	0xFF8
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	bssCOMRAM
   151  000034                     __pbssCOMRAM:
   152                           	opt stack 0
   153  000034                     _regImg:
   154                           	opt stack 0
   155  000034                     	ds	36
   156                           tblptru	equ	0xFF8
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           
   160                           	psect	cstackCOMRAM
   161  000001                     __pcstackCOMRAM:
   162                           	opt stack 0
   163  000001                     ??_IdleI2C:
   164  000001                     OpenI2C@slew:
   165                           	opt stack 0
   166  000001                     dly@d:
   167                           	opt stack 0
   168  000001                     delay_10ms@n:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x0
   172  000001                     	ds	1
   173  000002                     OpenI2C@sync_mode:
   174                           	opt stack 0
   175  000002                     WriteI2C@data_out:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x1
   179  000002                     	ds	1
   180  000003                     ??_delay_10ms:
   181  000003                     ??_FMwrite:
   182  000003                     dly@i:
   183                           	opt stack 0
   184  000003                     FMread@data:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x2
   188  000003                     	ds	1
   189  000004                     ?_butnEvent:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x3
   193  000004                     	ds	1
   194  000005                     ??_FMread:
   195  000005                     FMwrite@firstByt:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x4
   199  000005                     	ds	1
   200  000006                     ??_butnEvent:
   201  000006                     FMwrite@secndByt:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x5
   205  000006                     	ds	1
   206  000007                     FMwrite@adr:
   207                           	opt stack 0
   208  000007                     butnEvent@c:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x6
   212  000007                     	ds	2
   213  000009                     FMread@regAddr:
   214                           	opt stack 0
   215  000009                     butnEvent@c_507:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x8
   219  000009                     	ds	1
   220  00000A                     FMread@firstByt:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x9
   224  00000A                     	ds	1
   225  00000B                     FMread@secndByt:
   226                           	opt stack 0
   227  00000B                     butnEvent@c_516:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xA
   231  00000B                     	ds	1
   232  00000C                     FMready@rdy:
   233                           	opt stack 0
   234  00000C                     FMvers@vsn:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0xB
   238  00000C                     	ds	1
   239  00000D                     butnEvent@c_517:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0xC
   243  00000D                     	ds	1
   244  00000E                     _FMready$575:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0xD
   248  00000E                     	ds	1
   249  00000F                     butnEvent@c_524:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0xE
   253  00000F                     	ds	1
   254  000010                     FMready@sts:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0xF
   258  000010                     	ds	2
   259  000012                     FMinit@dat:
   260                           	opt stack 0
   261  000012                     setVolume@volume:
   262                           	opt stack 0
   263  000012                     FMfrequenc@f:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x11
   267  000012                     	ds	2
   268  000014                     ??_setVolume:
   269  000014                     ??_FMfrequenc:
   270  000014                     FMinit@ad:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x13
   274  000014                     	ds	3
   275  000017                     setVolume@volume_map:
   276                           	opt stack 0
   277                           
   278                           ; 19 bytes @ 0x16
   279  000017                     	ds	1
   280  000018                     FMfrequenc@cn:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x17
   284  000018                     	ds	2
   285  00001A                     FMfrequenc@dat:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x19
   289  00001A                     	ds	2
   290  00001C                     
   291                           ; 1 bytes @ 0x1B
   292  00001C                     	ds	14
   293  00002A                     setVolume@dat:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x29
   297  00002A                     	ds	2
   298  00002C                     setVolume@volume_setting:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x2B
   302  00002C                     	ds	1
   303  00002D                     setVolume@temp_vol:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x2C
   307  00002D                     	ds	1
   308  00002E                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x2D
   311  00002E                     	ds	2
   312  000030                     main@evt:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x2F
   316  000030                     	ds	2
   317  000032                     main@ui:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x31
   321  000032                     	ds	2
   322                           tblptru	equ	0xFF8
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 572 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  ui              2   49[COMRAM] unsigned int 
   336 ;;  evt             2   47[COMRAM] int 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   346 ;;      Params:         0       0       0       0
   347 ;;      Locals:         4       0       0       0
   348 ;;      Temps:          2       0       0       0
   349 ;;      Totals:         6       0       0       0
   350 ;;Total ram usage:        6 bytes
   351 ;; Hardware stack levels required when called:    6
   352 ;; This function calls:
   353 ;;		_FMinit
   354 ;;		_FMvers
   355 ;;		_Init
   356 ;;		_MuteHard
   357 ;;		_VolumeDown
   358 ;;		_VolumeUp
   359 ;;		_butnEvent
   360 ;;		_dly
   361 ;;		_errfm
   362 ;;		_nextChannel
   363 ;;		_previousChannel
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370  000722                     __ptext0:
   371                           	opt stack 0
   372  000722                     _main:
   373                           	opt stack 25
   374                           
   375                           ;main.c: 573: int evt;
   376                           ;main.c: 574: unsigned int ui;
   377                           ;main.c: 575: dly(20);
   378                           
   379                           ;incstack = 0
   380  000722  0E00               	movlw	0
   381  000724  6E02               	movwf	dly@d+1,c
   382  000726  0E14               	movlw	20
   383  000728  6E01               	movwf	dly@d,c
   384  00072A  ECE1  F004         	call	_dly	;wreg free
   385                           
   386                           ;main.c: 576: Init();
   387  00072E  EC5D  F004         	call	_Init	;wreg free
   388                           
   389                           ;main.c: 579: FMvers(&ui);
   390  000732  0E32               	movlw	low main@ui
   391  000734  6E0C               	movwf	FMvers@vsn,c
   392  000736  0E00               	movlw	high main@ui
   393  000738  6E0D               	movwf	FMvers@vsn+1,c
   394  00073A  EC78  F005         	call	_FMvers	;wreg free
   395                           
   396                           ;main.c: 580: if (ui != 0x1010) errfm();
   397  00073E  0E10               	movlw	16
   398  000740  1832               	xorwf	main@ui,w,c
   399  000742  E103               	bnz	u1440
   400  000744  0E10               	movlw	16
   401  000746  1833               	xorwf	main@ui+1,w,c
   402  000748  A4D8               	btfss	status,2,c
   403  00074A                     u1440:
   404  00074A  EC80  F005         	call	_errfm	;wreg free
   405                           
   406                           ;main.c: 581: if (FMinit() != 0) errfm();
   407  00074E  ECD2  F002         	call	_FMinit	;wreg free
   408  000752  0900               	iorlw	0
   409  000754  A4D8               	btfss	status,2,c
   410  000756  EC80  F005         	call	_errfm	;wreg free
   411  00075A                     l1943:
   412                           
   413                           ;main.c: 584: evt = butnEvent();
   414  00075A  EC9D  F001         	call	_butnEvent	;wreg free
   415  00075E  C004  F030         	movff	?_butnEvent,main@evt
   416  000762  C005  F031         	movff	?_butnEvent+1,main@evt+1
   417                           
   418                           ;main.c: 585: switch (evt) {
   419  000766  D013               	goto	l1959
   420  000768                     l1945:
   421  000768  EC1A  F005         	call	_nextChannel	;wreg free
   422                           
   423                           ;main.c: 587: break;
   424  00076C  D7F6               	goto	l1943
   425  00076E                     l1947:
   426  00076E  EC0B  F005         	call	_previousChannel	;wreg free
   427                           
   428                           ;main.c: 589: break;
   429  000772  D7F3               	goto	l1943
   430  000774                     l1949:
   431  000774  EC29  F005         	call	_VolumeUp	;wreg free
   432                           
   433                           ;main.c: 591: break;
   434  000778  D7F0               	goto	l1943
   435  00077A                     l1951:
   436  00077A  EC38  F005         	call	_VolumeDown	;wreg free
   437                           
   438                           ;main.c: 593: break;
   439  00077E  D7ED               	goto	l1943
   440  000780                     l1953:
   441  000780  0E00               	movlw	0
   442  000782  EC81  F005         	call	_MuteHard
   443                           
   444                           ;main.c: 595: break;
   445  000786  D7E9               	goto	l1943
   446  000788                     l1955:
   447  000788  EC80  F005         	call	_errfm	;wreg free
   448                           
   449                           ;main.c: 601: }
   450                           
   451                           ;main.c: 600: default: break;
   452                           
   453                           ;main.c: 598: break;
   454  00078C  D7E6               	goto	l1943
   455  00078E                     l1959:
   456  00078E  C030  F02E         	movff	main@evt,??_main
   457  000792  C031  F02F         	movff	main@evt+1,??_main+1
   458                           
   459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   460                           ; Switch size 1, requested type "space"
   461                           ; Number of cases is 1, Range of values is 0 to 0
   462                           ; switch strategies available:
   463                           ; Name         Instructions Cycles
   464                           ; simple_byte            4     3 (average)
   465                           ;	Chosen strategy is simple_byte
   466  000796  502F               	movf	??_main+1,w,c
   467  000798  0A00               	xorlw	0	; case 0
   468  00079A  A4D8               	btfss	status,2,c
   469  00079C  D7DE               	goto	l1943
   470                           
   471                           ; Switch size 1, requested type "space"
   472                           ; Number of cases is 6, Range of values is 1 to 8
   473                           ; switch strategies available:
   474                           ; Name         Instructions Cycles
   475                           ; simple_byte           19    10 (average)
   476                           ;	Chosen strategy is simple_byte
   477  00079E  502E               	movf	??_main,w,c
   478  0007A0  0A01               	xorlw	1	; case 1
   479  0007A2  B4D8               	btfsc	status,2,c
   480  0007A4  D7E1               	goto	l1945
   481  0007A6  0A03               	xorlw	3	; case 2
   482  0007A8  B4D8               	btfsc	status,2,c
   483  0007AA  D7E1               	goto	l1947
   484  0007AC  0A01               	xorlw	1	; case 3
   485  0007AE  B4D8               	btfsc	status,2,c
   486  0007B0  D7E1               	goto	l1949
   487  0007B2  0A07               	xorlw	7	; case 4
   488  0007B4  B4D8               	btfsc	status,2,c
   489  0007B6  D7E1               	goto	l1951
   490  0007B8  0A01               	xorlw	1	; case 5
   491  0007BA  B4D8               	btfsc	status,2,c
   492  0007BC  D7E1               	goto	l1953
   493  0007BE  0A0D               	xorlw	13	; case 8
   494  0007C0  B4D8               	btfsc	status,2,c
   495  0007C2  D7E2               	goto	l1955
   496                           
   497                           ;main.c: 602: }
   498  0007C4  D7CA               	goto	l1943
   499  0007C6                     __end_of_main:
   500                           	opt stack 0
   501                           tblptru	equ	0xFF8
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           status	equ	0xFD8
   505                           
   506 ;; *************** function _previousChannel *****************
   507 ;; Defined at:
   508 ;;		line 503 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      unsigned char 
   515 ;; Registers used:
   516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   522 ;;      Params:         0       0       0       0
   523 ;;      Locals:         0       0       0       0
   524 ;;      Temps:          0       0       0       0
   525 ;;      Totals:         0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used:    1
   528 ;; Hardware stack levels required when called:    5
   529 ;; This function calls:
   530 ;;		_FMfrequenc
   531 ;;		_delay_10ms
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text1
   538  000A16                     __ptext1:
   539                           	opt stack 0
   540  000A16                     _previousChannel:
   541                           	opt stack 25
   542                           
   543                           ;main.c: 504: FMfrequenc(1046);
   544                           
   545                           ;incstack = 0
   546  000A16  0E04               	movlw	4
   547  000A18  6E13               	movwf	FMfrequenc@f+1,c
   548  000A1A  0E16               	movlw	22
   549  000A1C  6E12               	movwf	FMfrequenc@f,c
   550  000A1E  EC24  F004         	call	_FMfrequenc	;wreg free
   551                           
   552                           ;main.c: 505: PORTCbits.RC7 = 1;
   553  000A22  8E82               	bsf	3970,7,c	;volatile
   554                           
   555                           ;main.c: 506: delay_10ms(10);
   556  000A24  0E00               	movlw	0
   557  000A26  6E02               	movwf	delay_10ms@n+1,c
   558  000A28  0E0A               	movlw	10
   559  000A2A  6E01               	movwf	delay_10ms@n,c
   560  000A2C  ECFA  F004         	call	_delay_10ms	;wreg free
   561                           
   562                           ;main.c: 507: PORTCbits.RC7 = 0;
   563  000A30  9E82               	bcf	3970,7,c	;volatile
   564  000A32  0012               	return	
   565  000A34                     __end_of_previousChannel:
   566                           	opt stack 0
   567                           tblptru	equ	0xFF8
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           status	equ	0xFD8
   571                           
   572 ;; *************** function _nextChannel *****************
   573 ;; Defined at:
   574 ;;		line 493 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      unsigned char 
   581 ;; Registers used:
   582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   588 ;;      Params:         0       0       0       0
   589 ;;      Locals:         0       0       0       0
   590 ;;      Temps:          0       0       0       0
   591 ;;      Totals:         0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    5
   595 ;; This function calls:
   596 ;;		_FMfrequenc
   597 ;;		_delay_10ms
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text2
   604  000A34                     __ptext2:
   605                           	opt stack 0
   606  000A34                     _nextChannel:
   607                           	opt stack 25
   608                           
   609                           ;main.c: 494: FMfrequenc(964);
   610                           
   611                           ;incstack = 0
   612  000A34  0E03               	movlw	3
   613  000A36  6E13               	movwf	FMfrequenc@f+1,c
   614  000A38  0EC4               	movlw	196
   615  000A3A  6E12               	movwf	FMfrequenc@f,c
   616  000A3C  EC24  F004         	call	_FMfrequenc	;wreg free
   617                           
   618                           ;main.c: 495: PORTCbits.RC6 = 1;
   619  000A40  8C82               	bsf	3970,6,c	;volatile
   620                           
   621                           ;main.c: 496: delay_10ms(10);
   622  000A42  0E00               	movlw	0
   623  000A44  6E02               	movwf	delay_10ms@n+1,c
   624  000A46  0E0A               	movlw	10
   625  000A48  6E01               	movwf	delay_10ms@n,c
   626  000A4A  ECFA  F004         	call	_delay_10ms	;wreg free
   627                           
   628                           ;main.c: 497: PORTCbits.RC6 = 0;
   629  000A4E  9C82               	bcf	3970,6,c	;volatile
   630  000A50  0012               	return	
   631  000A52                     __end_of_nextChannel:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _FMfrequenc *****************
   639 ;; Defined at:
   640 ;;		line 428 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  f               2   17[COMRAM] unsigned int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  dat             2   25[COMRAM] unsigned int 
   645 ;;  cn              2   23[COMRAM] unsigned int 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      unsigned char 
   648 ;; Registers used:
   649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   655 ;;      Params:         2       0       0       0
   656 ;;      Locals:         4       0       0       0
   657 ;;      Temps:          4       0       0       0
   658 ;;      Totals:        10       0       0       0
   659 ;;Total ram usage:       10 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    4
   662 ;; This function calls:
   663 ;;		_FMready
   664 ;;		_FMwrite
   665 ;;		_dly
   666 ;; This function is called by:
   667 ;;		_nextChannel
   668 ;;		_previousChannel
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text3
   673  000848                     __ptext3:
   674                           	opt stack 0
   675  000848                     _FMfrequenc:
   676                           	opt stack 25
   677                           
   678                           ;main.c: 430: unsigned int dat;
   679                           ;main.c: 431: unsigned int cn;
   680                           ;main.c: 433: cn = f - 690;
   681                           
   682                           ;incstack = 0
   683  000848  0E4E               	movlw	78
   684  00084A  2412               	addwf	FMfrequenc@f,w,c
   685  00084C  6E18               	movwf	FMfrequenc@cn,c
   686  00084E  0EFD               	movlw	253
   687  000850  2013               	addwfc	FMfrequenc@f+1,w,c
   688  000852  6E19               	movwf	FMfrequenc@cn+1,c
   689                           
   690                           ;main.c: 436: regImg[2] &= ~0x0200;
   691  000854  9239               	bcf	_regImg+5,1,c
   692                           
   693                           ;main.c: 437: if (FMwrite(2) != 0) return 1;
   694  000856  0E02               	movlw	2
   695  000858  ECE3  F003         	call	_FMwrite
   696  00085C  0900               	iorlw	0
   697  00085E  A4D8               	btfss	status,2,c
   698  000860  0012               	return	
   699                           
   700                           ;main.c: 438: regImg[2] &= 0xfe00;
   701                           
   702                           ;	Return value of _FMfrequenc is never used
   703  000862  0E00               	movlw	0
   704  000864  1638               	andwf	_regImg+4,f,c
   705  000866  0EFE               	movlw	254
   706  000868  1639               	andwf	_regImg+5,f,c
   707                           
   708                           ;main.c: 439: regImg[2] |= (cn | 0x0200);
   709  00086A  0E00               	movlw	0
   710  00086C  6E14               	movwf	??_FMfrequenc& (0+255),c
   711  00086E  0E02               	movlw	2
   712  000870  6E15               	movwf	(??_FMfrequenc+1)& (0+255),c
   713  000872  C018  F016         	movff	FMfrequenc@cn,??_FMfrequenc+2
   714  000876  C019  F017         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   715  00087A  5014               	movf	??_FMfrequenc,w,c
   716  00087C  1216               	iorwf	??_FMfrequenc+2,f,c
   717  00087E  5015               	movf	??_FMfrequenc+1,w,c
   718  000880  1217               	iorwf	??_FMfrequenc+3,f,c
   719  000882  5016               	movf	??_FMfrequenc+2,w,c
   720  000884  1238               	iorwf	_regImg+4,f,c
   721  000886  5017               	movf	??_FMfrequenc+3,w,c
   722  000888  1239               	iorwf	_regImg+5,f,c
   723                           
   724                           ;main.c: 440: if (FMwrite(2) != 0) return 1;
   725  00088A  0E02               	movlw	2
   726  00088C  ECE3  F003         	call	_FMwrite
   727  000890  0900               	iorlw	0
   728  000892  A4D8               	btfss	status,2,c
   729  000894  0012               	return	
   730                           
   731                           ;main.c: 442: dly(2);
   732                           
   733                           ;main.c: 441: do {
   734                           
   735                           ;	Return value of _FMfrequenc is never used
   736  000896  0E00               	movlw	0
   737  000898  6E02               	movwf	dly@d+1,c
   738  00089A  0E02               	movlw	2
   739  00089C  6E01               	movwf	dly@d,c
   740  00089E  ECE1  F004         	call	_dly	;wreg free
   741                           
   742                           ;main.c: 443: if (FMready(&dat) != 0) return 1;
   743  0008A2  0E1A               	movlw	low FMfrequenc@dat
   744  0008A4  6E0C               	movwf	FMready@rdy,c
   745  0008A6  0E00               	movlw	high FMfrequenc@dat
   746  0008A8  6E0D               	movwf	FMready@rdy+1,c
   747  0008AA  ECBC  F004         	call	_FMready	;wreg free
   748  0008AE  0900               	iorlw	0
   749  0008B0  A4D8               	btfss	status,2,c
   750  0008B2  0012               	return	
   751                           
   752                           ;main.c: 444: } while (!dat);
   753                           
   754                           ;	Return value of _FMfrequenc is never used
   755  0008B4  501A               	movf	FMfrequenc@dat,w,c
   756  0008B6  101B               	iorwf	FMfrequenc@dat+1,w,c
   757  0008B8  D7EC               	goto	L1
   758  0008BA                     __end_of_FMfrequenc:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _errfm *****************
   766 ;; Defined at:
   767 ;;		line 547 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		None
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   781 ;;      Params:         0       0       0       0
   782 ;;      Locals:         0       0       0       0
   783 ;;      Temps:          0       0       0       0
   784 ;;      Totals:         0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795  000B00                     __ptext4:
   796                           	opt stack 0
   797  000B00                     _errfm:
   798                           	opt stack 30
   799  000B00                     l220:
   800  000B00  D7FF               	goto	l220
   801  000B02                     __end_of_errfm:
   802                           	opt stack 0
   803                           tblptru	equ	0xFF8
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           status	equ	0xFD8
   807                           
   808 ;; *************** function _butnEvent *****************
   809 ;; Defined at:
   810 ;;		line 79 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  c               2   14[COMRAM] int 
   815 ;;  c               2   12[COMRAM] int 
   816 ;;  c               2   10[COMRAM] int 
   817 ;;  c               2    8[COMRAM] int 
   818 ;;  c               2    6[COMRAM] int 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2    3[COMRAM] int 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   828 ;;      Params:         2       0       0       0
   829 ;;      Locals:        10       0       0       0
   830 ;;      Temps:          1       0       0       0
   831 ;;      Totals:        13       0       0       0
   832 ;;Total ram usage:       13 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    1
   835 ;; This function calls:
   836 ;;		_delay_10ms
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text5
   843  00033A                     __ptext5:
   844                           	opt stack 0
   845  00033A                     _butnEvent:
   846                           	opt stack 29
   847                           
   848                           ;main.c: 81: if (PORTAbits.RA0 == 0)
   849                           
   850                           ;incstack = 0
   851  00033A  B080               	btfsc	3968,0,c	;volatile
   852  00033C  D02E               	goto	l75
   853                           
   854                           ;main.c: 82: {
   855                           ;main.c: 83: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   856  00033E  0E00               	movlw	0
   857  000340  6E08               	movwf	butnEvent@c+1,c
   858  000342  0E00               	movlw	0
   859  000344  6E07               	movwf	butnEvent@c,c
   860  000346  BE08               	btfsc	butnEvent@c+1,7,c
   861  000348  D006               	goto	l1705
   862  00034A  5008               	movf	butnEvent@c+1,w,c
   863  00034C  E112               	bnz	l77
   864  00034E  0E0B               	movlw	11
   865  000350  5C07               	subwf	butnEvent@c,w,c
   866  000352  B0D8               	btfsc	status,0,c
   867  000354  D00E               	goto	l77
   868  000356                     l1705:
   869  000356  0E0D               	movlw	13
   870  000358  6E06               	movwf	??_butnEvent& (0+255),c
   871  00035A  0EFC               	movlw	252
   872  00035C                     u1467:
   873  00035C  2EE8               	decfsz	wreg,f,c
   874  00035E  D7FE               	goto	u1467
   875  000360  2E06               	decfsz	??_butnEvent& (0+255),f,c
   876  000362  D7FC               	goto	u1467
   877  000364  4A07               	infsnz	butnEvent@c,f,c
   878  000366  2A08               	incf	butnEvent@c+1,f,c
   879  000368  BE08               	btfsc	butnEvent@c+1,7,c
   880  00036A  D7F5               	goto	l1705
   881  00036C  5008               	movf	butnEvent@c+1,w,c
   882  00036E  E101               	bnz	u1180
   883  000370  D7EE               	goto	L2
   884  000372                     u1180:
   885  000372                     l77:
   886                           
   887                           ;main.c: 84: if (PORTAbits.RA0 == 0)
   888  000372  B080               	btfsc	3968,0,c	;volatile
   889  000374  D00D               	goto	l1721
   890                           
   891                           ;main.c: 85: {
   892                           ;main.c: 86: PORTCbits.RC6 = 1;
   893  000376  8C82               	bsf	3970,6,c	;volatile
   894                           
   895                           ;main.c: 87: delay_10ms(10);
   896  000378  0E00               	movlw	0
   897  00037A  6E02               	movwf	delay_10ms@n+1,c
   898  00037C  0E0A               	movlw	10
   899  00037E  6E01               	movwf	delay_10ms@n,c
   900  000380  ECFA  F004         	call	_delay_10ms	;wreg free
   901                           
   902                           ;main.c: 88: PORTCbits.RC6 = 0;
   903  000384  9C82               	bcf	3970,6,c	;volatile
   904                           
   905                           ;main.c: 89: return 1;
   906  000386  0E00               	movlw	0
   907  000388  6E05               	movwf	?_butnEvent+1,c
   908  00038A  0E01               	movlw	1
   909  00038C  6E04               	movwf	?_butnEvent,c
   910  00038E  0012               	return	
   911  000390                     l1721:
   912                           
   913                           ;main.c: 92: return 0;
   914  000390  0E00               	movlw	0
   915  000392  6E05               	movwf	?_butnEvent+1,c
   916  000394  0E00               	movlw	0
   917  000396  6E04               	movwf	?_butnEvent,c
   918  000398  0012               	return	
   919  00039A                     l75:
   920                           
   921                           ;main.c: 93: }
   922                           ;main.c: 94: }
   923                           ;main.c: 96: if (PORTAbits.RA1 == 0)
   924  00039A  B280               	btfsc	3968,1,c	;volatile
   925  00039C  D026               	goto	l81
   926                           
   927                           ;main.c: 97: {
   928                           ;main.c: 98: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   929  00039E  0E00               	movlw	0
   930  0003A0  6E0A               	movwf	butnEvent@c_507+1,c
   931  0003A2  0E00               	movlw	0
   932  0003A4  6E09               	movwf	butnEvent@c_507,c
   933  0003A6  BE0A               	btfsc	butnEvent@c_507+1,7,c
   934  0003A8  D006               	goto	l1731
   935  0003AA  500A               	movf	butnEvent@c_507+1,w,c
   936  0003AC  E112               	bnz	l83
   937  0003AE  0E0B               	movlw	11
   938  0003B0  5C09               	subwf	butnEvent@c_507,w,c
   939  0003B2  B0D8               	btfsc	status,0,c
   940  0003B4  D00E               	goto	l83
   941  0003B6                     l1731:
   942  0003B6  0E0D               	movlw	13
   943  0003B8  6E06               	movwf	??_butnEvent& (0+255),c
   944  0003BA  0EFC               	movlw	252
   945  0003BC                     u1477:
   946  0003BC  2EE8               	decfsz	wreg,f,c
   947  0003BE  D7FE               	goto	u1477
   948  0003C0  2E06               	decfsz	??_butnEvent& (0+255),f,c
   949  0003C2  D7FC               	goto	u1477
   950  0003C4  4A09               	infsnz	butnEvent@c_507,f,c
   951  0003C6  2A0A               	incf	butnEvent@c_507+1,f,c
   952  0003C8  BE0A               	btfsc	butnEvent@c_507+1,7,c
   953  0003CA  D7F5               	goto	l1731
   954  0003CC  500A               	movf	butnEvent@c_507+1,w,c
   955  0003CE  E101               	bnz	u1220
   956  0003D0  D7EE               	goto	L3
   957  0003D2                     u1220:
   958  0003D2                     l83:
   959                           
   960                           ;main.c: 99: if (PORTAbits.RA1 == 0)
   961  0003D2  B280               	btfsc	3968,1,c	;volatile
   962  0003D4  D005               	goto	l1741
   963                           
   964                           ;main.c: 100: {
   965                           ;main.c: 101: return 2;
   966  0003D6  0E00               	movlw	0
   967  0003D8  6E05               	movwf	?_butnEvent+1,c
   968  0003DA  0E02               	movlw	2
   969  0003DC  6E04               	movwf	?_butnEvent,c
   970  0003DE  0012               	return	
   971  0003E0                     l1741:
   972                           
   973                           ;main.c: 103: return 0;
   974  0003E0  0E00               	movlw	0
   975  0003E2  6E05               	movwf	?_butnEvent+1,c
   976  0003E4  0E00               	movlw	0
   977  0003E6  6E04               	movwf	?_butnEvent,c
   978  0003E8  0012               	return	
   979  0003EA                     l81:
   980                           
   981                           ;main.c: 104: }
   982                           ;main.c: 105: }
   983                           ;main.c: 107: if (PORTBbits.RB0 == 0)
   984  0003EA  B081               	btfsc	3969,0,c	;volatile
   985  0003EC  D026               	goto	l86
   986                           
   987                           ;main.c: 108: {
   988                           ;main.c: 109: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   989  0003EE  0E00               	movlw	0
   990  0003F0  6E0C               	movwf	butnEvent@c_516+1,c
   991  0003F2  0E00               	movlw	0
   992  0003F4  6E0B               	movwf	butnEvent@c_516,c
   993  0003F6  BE0C               	btfsc	butnEvent@c_516+1,7,c
   994  0003F8  D006               	goto	l1751
   995  0003FA  500C               	movf	butnEvent@c_516+1,w,c
   996  0003FC  E112               	bnz	l88
   997  0003FE  0E0B               	movlw	11
   998  000400  5C0B               	subwf	butnEvent@c_516,w,c
   999  000402  B0D8               	btfsc	status,0,c
  1000  000404  D00E               	goto	l88
  1001  000406                     l1751:
  1002  000406  0E0D               	movlw	13
  1003  000408  6E06               	movwf	??_butnEvent& (0+255),c
  1004  00040A  0EFC               	movlw	252
  1005  00040C                     u1487:
  1006  00040C  2EE8               	decfsz	wreg,f,c
  1007  00040E  D7FE               	goto	u1487
  1008  000410  2E06               	decfsz	??_butnEvent& (0+255),f,c
  1009  000412  D7FC               	goto	u1487
  1010  000414  4A0B               	infsnz	butnEvent@c_516,f,c
  1011  000416  2A0C               	incf	butnEvent@c_516+1,f,c
  1012  000418  BE0C               	btfsc	butnEvent@c_516+1,7,c
  1013  00041A  D7F5               	goto	l1751
  1014  00041C  500C               	movf	butnEvent@c_516+1,w,c
  1015  00041E  E101               	bnz	u1260
  1016  000420  D7EE               	goto	L4
  1017  000422                     u1260:
  1018  000422                     l88:
  1019                           
  1020                           ;main.c: 110: if (PORTBbits.RB0 == 0)
  1021  000422  B081               	btfsc	3969,0,c	;volatile
  1022  000424  D005               	goto	l1761
  1023                           
  1024                           ;main.c: 111: {
  1025                           ;main.c: 112: return 3;
  1026  000426  0E00               	movlw	0
  1027  000428  6E05               	movwf	?_butnEvent+1,c
  1028  00042A  0E03               	movlw	3
  1029  00042C  6E04               	movwf	?_butnEvent,c
  1030  00042E  0012               	return	
  1031  000430                     l1761:
  1032                           
  1033                           ;main.c: 114: return 0;
  1034  000430  0E00               	movlw	0
  1035  000432  6E05               	movwf	?_butnEvent+1,c
  1036  000434  0E00               	movlw	0
  1037  000436  6E04               	movwf	?_butnEvent,c
  1038  000438  0012               	return	
  1039  00043A                     l86:
  1040                           
  1041                           ;main.c: 115: }
  1042                           ;main.c: 116: }
  1043                           ;main.c: 118: if (PORTBbits.RB5 == 0)
  1044  00043A  BA81               	btfsc	3969,5,c	;volatile
  1045  00043C  D026               	goto	l91
  1046                           
  1047                           ;main.c: 119: {
  1048                           ;main.c: 120: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1049  00043E  0E00               	movlw	0
  1050  000440  6E0E               	movwf	butnEvent@c_517+1,c
  1051  000442  0E00               	movlw	0
  1052  000444  6E0D               	movwf	butnEvent@c_517,c
  1053  000446  BE0E               	btfsc	butnEvent@c_517+1,7,c
  1054  000448  D006               	goto	l1771
  1055  00044A  500E               	movf	butnEvent@c_517+1,w,c
  1056  00044C  E112               	bnz	l93
  1057  00044E  0E0B               	movlw	11
  1058  000450  5C0D               	subwf	butnEvent@c_517,w,c
  1059  000452  B0D8               	btfsc	status,0,c
  1060  000454  D00E               	goto	l93
  1061  000456                     l1771:
  1062  000456  0E0D               	movlw	13
  1063  000458  6E06               	movwf	??_butnEvent& (0+255),c
  1064  00045A  0EFC               	movlw	252
  1065  00045C                     u1497:
  1066  00045C  2EE8               	decfsz	wreg,f,c
  1067  00045E  D7FE               	goto	u1497
  1068  000460  2E06               	decfsz	??_butnEvent& (0+255),f,c
  1069  000462  D7FC               	goto	u1497
  1070  000464  4A0D               	infsnz	butnEvent@c_517,f,c
  1071  000466  2A0E               	incf	butnEvent@c_517+1,f,c
  1072  000468  BE0E               	btfsc	butnEvent@c_517+1,7,c
  1073  00046A  D7F5               	goto	l1771
  1074  00046C  500E               	movf	butnEvent@c_517+1,w,c
  1075  00046E  E101               	bnz	u1300
  1076  000470  D7EE               	goto	L5
  1077  000472                     u1300:
  1078  000472                     l93:
  1079                           
  1080                           ;main.c: 121: if (PORTBbits.RB5 == 0)
  1081  000472  BA81               	btfsc	3969,5,c	;volatile
  1082  000474  D005               	goto	l1781
  1083                           
  1084                           ;main.c: 122: {
  1085                           ;main.c: 123: return 4;
  1086  000476  0E00               	movlw	0
  1087  000478  6E05               	movwf	?_butnEvent+1,c
  1088  00047A  0E04               	movlw	4
  1089  00047C  6E04               	movwf	?_butnEvent,c
  1090  00047E  0012               	return	
  1091  000480                     l1781:
  1092                           
  1093                           ;main.c: 125: return 0;
  1094  000480  0E00               	movlw	0
  1095  000482  6E05               	movwf	?_butnEvent+1,c
  1096  000484  0E00               	movlw	0
  1097  000486  6E04               	movwf	?_butnEvent,c
  1098  000488  0012               	return	
  1099  00048A                     l91:
  1100                           
  1101                           ;main.c: 126: }
  1102                           ;main.c: 127: }
  1103                           ;main.c: 129: if (PORTGbits.RG0 == 0)
  1104  00048A  B086               	btfsc	3974,0,c	;volatile
  1105  00048C  0012               	return	
  1106                           
  1107                           ;main.c: 130: {
  1108                           ;main.c: 131: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1109  00048E  0E00               	movlw	0
  1110  000490  6E10               	movwf	butnEvent@c_524+1,c
  1111  000492  0E00               	movlw	0
  1112  000494  6E0F               	movwf	butnEvent@c_524,c
  1113  000496  BE10               	btfsc	butnEvent@c_524+1,7,c
  1114  000498  D006               	goto	l1791
  1115  00049A  5010               	movf	butnEvent@c_524+1,w,c
  1116  00049C  E112               	bnz	l98
  1117  00049E  0E0B               	movlw	11
  1118  0004A0  5C0F               	subwf	butnEvent@c_524,w,c
  1119  0004A2  B0D8               	btfsc	status,0,c
  1120  0004A4  D00E               	goto	l98
  1121  0004A6                     l1791:
  1122  0004A6  0E0D               	movlw	13
  1123  0004A8  6E06               	movwf	??_butnEvent& (0+255),c
  1124  0004AA  0EFC               	movlw	252
  1125  0004AC                     u1507:
  1126  0004AC  2EE8               	decfsz	wreg,f,c
  1127  0004AE  D7FE               	goto	u1507
  1128  0004B0  2E06               	decfsz	??_butnEvent& (0+255),f,c
  1129  0004B2  D7FC               	goto	u1507
  1130  0004B4  4A0F               	infsnz	butnEvent@c_524,f,c
  1131  0004B6  2A10               	incf	butnEvent@c_524+1,f,c
  1132  0004B8  BE10               	btfsc	butnEvent@c_524+1,7,c
  1133  0004BA  D7F5               	goto	l1791
  1134  0004BC  5010               	movf	butnEvent@c_524+1,w,c
  1135  0004BE  E101               	bnz	u1340
  1136  0004C0  D7EE               	goto	L6
  1137  0004C2                     u1340:
  1138  0004C2                     l98:
  1139                           
  1140                           ;main.c: 132: if (PORTGbits.RG0 == 0)
  1141  0004C2  B086               	btfsc	3974,0,c	;volatile
  1142  0004C4  D005               	goto	l1801
  1143                           
  1144                           ;main.c: 133: {
  1145                           ;main.c: 134: return 5;
  1146  0004C6  0E00               	movlw	0
  1147  0004C8  6E05               	movwf	?_butnEvent+1,c
  1148  0004CA  0E05               	movlw	5
  1149  0004CC  6E04               	movwf	?_butnEvent,c
  1150                           
  1151                           ;main.c: 135: } else {
  1152  0004CE  0012               	return	
  1153  0004D0                     l1801:
  1154                           
  1155                           ;main.c: 136: return 0;
  1156  0004D0  0E00               	movlw	0
  1157  0004D2  6E05               	movwf	?_butnEvent+1,c
  1158  0004D4  0E00               	movlw	0
  1159  0004D6  6E04               	movwf	?_butnEvent,c
  1160  0004D8  0012               	return	
  1161  0004DA                     __end_of_butnEvent:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _VolumeUp *****************
  1169 ;; Defined at:
  1170 ;;		line 512 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1184 ;;      Params:         0       0       0       0
  1185 ;;      Locals:         0       0       0       0
  1186 ;;      Temps:          0       0       0       0
  1187 ;;      Totals:         0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    5
  1191 ;; This function calls:
  1192 ;;		_delay_10ms
  1193 ;;		_setVolume
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text6
  1200  000A52                     __ptext6:
  1201                           	opt stack 0
  1202  000A52                     _VolumeUp:
  1203                           	opt stack 25
  1204                           
  1205                           ;main.c: 513: setVolume(18);
  1206                           
  1207                           ;incstack = 0
  1208  000A52  0E00               	movlw	0
  1209  000A54  6E13               	movwf	setVolume@volume+1,c
  1210  000A56  0E12               	movlw	18
  1211  000A58  6E12               	movwf	setVolume@volume,c
  1212  000A5A  EC35  F003         	call	_setVolume	;wreg free
  1213                           
  1214                           ;main.c: 514: PORTCbits.RC6 = 1;
  1215  000A5E  8C82               	bsf	3970,6,c	;volatile
  1216                           
  1217                           ;main.c: 515: delay_10ms(10);
  1218  000A60  0E00               	movlw	0
  1219  000A62  6E02               	movwf	delay_10ms@n+1,c
  1220  000A64  0E0A               	movlw	10
  1221  000A66  6E01               	movwf	delay_10ms@n,c
  1222  000A68  ECFA  F004         	call	_delay_10ms	;wreg free
  1223                           
  1224                           ;main.c: 516: PORTCbits.RC6 = 0;
  1225  000A6C  9C82               	bcf	3970,6,c	;volatile
  1226  000A6E  0012               	return	
  1227  000A70                     __end_of_VolumeUp:
  1228                           	opt stack 0
  1229                           tblptru	equ	0xFF8
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _VolumeDown *****************
  1235 ;; Defined at:
  1236 ;;		line 521 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      unsigned char 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1250 ;;      Params:         0       0       0       0
  1251 ;;      Locals:         0       0       0       0
  1252 ;;      Temps:          0       0       0       0
  1253 ;;      Totals:         0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    5
  1257 ;; This function calls:
  1258 ;;		_delay_10ms
  1259 ;;		_setVolume
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text7
  1266  000A70                     __ptext7:
  1267                           	opt stack 0
  1268  000A70                     _VolumeDown:
  1269                           	opt stack 25
  1270                           
  1271                           ;main.c: 522: setVolume(10);
  1272                           
  1273                           ;incstack = 0
  1274  000A70  0E00               	movlw	0
  1275  000A72  6E13               	movwf	setVolume@volume+1,c
  1276  000A74  0E0A               	movlw	10
  1277  000A76  6E12               	movwf	setVolume@volume,c
  1278  000A78  EC35  F003         	call	_setVolume	;wreg free
  1279                           
  1280                           ;main.c: 523: PORTCbits.RC7 = 1;
  1281  000A7C  8E82               	bsf	3970,7,c	;volatile
  1282                           
  1283                           ;main.c: 524: delay_10ms(10);
  1284  000A7E  0E00               	movlw	0
  1285  000A80  6E02               	movwf	delay_10ms@n+1,c
  1286  000A82  0E0A               	movlw	10
  1287  000A84  6E01               	movwf	delay_10ms@n,c
  1288  000A86  ECFA  F004         	call	_delay_10ms	;wreg free
  1289                           
  1290                           ;main.c: 525: PORTCbits.RC7 = 0;
  1291  000A8A  9E82               	bcf	3970,7,c	;volatile
  1292  000A8C  0012               	return	
  1293  000A8E                     __end_of_VolumeDown:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           status	equ	0xFD8
  1299                           
  1300 ;; *************** function _setVolume *****************
  1301 ;; Defined at:
  1302 ;;		line 390 in file "main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  volume          2   17[COMRAM] int 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  volume_map     19   22[COMRAM] const unsigned char [19]
  1307 ;;  dat             2   41[COMRAM] unsigned int 
  1308 ;;  cn              2    0        unsigned int 
  1309 ;;  temp_vol        1   44[COMRAM] unsigned char 
  1310 ;;  volume_setti    1   43[COMRAM] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      unsigned char 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1320 ;;      Params:         2       0       0       0
  1321 ;;      Locals:        23       0       0       0
  1322 ;;      Temps:          3       0       0       0
  1323 ;;      Totals:        28       0       0       0
  1324 ;;Total ram usage:       28 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    4
  1327 ;; This function calls:
  1328 ;;		_FMready
  1329 ;;		_FMwrite
  1330 ;;		_dly
  1331 ;; This function is called by:
  1332 ;;		_VolumeUp
  1333 ;;		_VolumeDown
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text8
  1338  00066A                     __ptext8:
  1339                           	opt stack 0
  1340  00066A                     _setVolume:
  1341                           	opt stack 25
  1342                           
  1343                           ;main.c: 391: unsigned int dat;
  1344                           ;main.c: 392: unsigned int cn;
  1345                           ;main.c: 395: unsigned char temp_vol = volume;
  1346                           
  1347                           ;incstack = 0
  1348  00066A  C012  F02D         	movff	setVolume@volume,setVolume@temp_vol
  1349                           
  1350                           ;main.c: 399: else if(temp_vol > 18)
  1351                           
  1352                           ;main.c: 398: temp_vol = 0;
  1353                           
  1354                           ;main.c: 397: if(temp_vol < 0)
  1355  00066E  0E12               	movlw	18
  1356  000670  642D               	cpfsgt	setVolume@temp_vol,c
  1357  000672  D002               	goto	l1649
  1358                           
  1359                           ;main.c: 400: temp_vol = 18;
  1360  000674  0E12               	movlw	18
  1361  000676  6E2D               	movwf	setVolume@temp_vol,c
  1362  000678                     l1649:
  1363                           
  1364                           ;main.c: 403: const unsigned char volume_map[19] = {
  1365                           ;main.c: 404: 0x0F, 0xCF, 0xDF, 0xFF, 0xCB,
  1366                           ;main.c: 405: 0xDB, 0xFB, 0xFA, 0xF9, 0xF8,
  1367                           ;main.c: 406: 0xF7, 0xD6, 0xE6, 0xF6, 0xE3,
  1368                           ;main.c: 407: 0xF3, 0xF2, 0xF1, 0xF0
  1369                           ;main.c: 408: };
  1370  000678  0E25               	movlw	low setVolume@F6676
  1371  00067A  6EF6               	movwf	tblptrl,c
  1372  00067C                     	if	1	;There is more than 1 active tblptr byte
  1373  00067C  0E03               	movlw	high setVolume@F6676
  1374  00067E  6EF7               	movwf	tblptrh,c
  1375  000680                     	endif
  1376  000680                     	if	0	;There are less than 3 active tblptr bytes
  1377  000680                     	endif
  1378  000680  EE20  F017         	lfsr	2,setVolume@volume_map
  1379  000684  0E12               	movlw	18
  1380  000686                     u1060:
  1381  000686  0009               	tblrd		*+
  1382  000688  CFF5 FFDE          	movff	tablat,postinc2
  1383  00068C  06E8               	decf	wreg,f,c
  1384  00068E  E2FB               	bc	u1060
  1385                           
  1386                           ;main.c: 411: unsigned char volume_setting = volume_map[temp_vol];
  1387  000690  502D               	movf	setVolume@temp_vol,w,c
  1388  000692  0D01               	mullw	1
  1389  000694  0E17               	movlw	low setVolume@volume_map
  1390  000696  24F3               	addwf	prodl,w,c
  1391  000698  6ED9               	movwf	fsr2l,c
  1392  00069A  0E00               	movlw	high setVolume@volume_map
  1393  00069C  20F4               	addwfc	prodh,w,c
  1394  00069E  6EDA               	movwf	fsr2h,c
  1395  0006A0  50DF               	movf	indf2,w,c
  1396  0006A2  6E2C               	movwf	setVolume@volume_setting,c
  1397                           
  1398                           ;main.c: 413: regImg[3] &= 0xF87F;
  1399  0006A4  0E7F               	movlw	127
  1400  0006A6  163A               	andwf	_regImg+6,f,c
  1401  0006A8  0EF8               	movlw	248
  1402  0006AA  163B               	andwf	_regImg+7,f,c
  1403                           
  1404                           ;main.c: 414: regImg[3] |= ((volume_setting & 0x0F) << 7);
  1405  0006AC  502C               	movf	setVolume@volume_setting,w,c
  1406  0006AE  0B0F               	andlw	15
  1407  0006B0  6E14               	movwf	??_setVolume& (0+255),c
  1408  0006B2  6A15               	clrf	(??_setVolume+1)& (0+255),c
  1409  0006B4  0E07               	movlw	7
  1410  0006B6                     u1075:
  1411  0006B6  90D8               	bcf	status,0,c
  1412  0006B8  3614               	rlcf	??_setVolume,f,c
  1413  0006BA  3615               	rlcf	??_setVolume+1,f,c
  1414  0006BC  2EE8               	decfsz	wreg,f,c
  1415  0006BE  D7FB               	goto	u1075
  1416  0006C0  5014               	movf	??_setVolume,w,c
  1417  0006C2  123A               	iorwf	_regImg+6,f,c
  1418  0006C4  5015               	movf	??_setVolume+1,w,c
  1419  0006C6  123B               	iorwf	_regImg+7,f,c
  1420                           
  1421                           ;main.c: 415: if (FMwrite(3) != 0) return 1;
  1422  0006C8  0E03               	movlw	3
  1423  0006CA  ECE3  F003         	call	_FMwrite
  1424  0006CE  0900               	iorlw	0
  1425  0006D0  A4D8               	btfss	status,2,c
  1426  0006D2  0012               	return	
  1427                           
  1428                           ;main.c: 416: regImg[14] &= 0x0FFF;
  1429                           
  1430                           ;	Return value of _setVolume is never used
  1431  0006D4  0EFF               	movlw	255
  1432  0006D6  1650               	andwf	_regImg+28,f,c
  1433  0006D8  0E0F               	movlw	15
  1434  0006DA  1651               	andwf	_regImg+29,f,c
  1435                           
  1436                           ;main.c: 417: regImg[14] |= ((volume_setting & 0xF0) << 8);
  1437  0006DC  C02C  F014         	movff	setVolume@volume_setting,??_setVolume
  1438  0006E0  0EF0               	movlw	240
  1439  0006E2  1614               	andwf	??_setVolume,f,c
  1440  0006E4  5014               	movf	??_setVolume,w,c
  1441  0006E6  6E16               	movwf	(??_setVolume+2)& (0+255),c
  1442  0006E8  6A15               	clrf	(??_setVolume+1)& (0+255),c
  1443  0006EA  5015               	movf	??_setVolume+1,w,c
  1444  0006EC  1250               	iorwf	_regImg+28,f,c
  1445  0006EE  5016               	movf	??_setVolume+2,w,c
  1446  0006F0  1251               	iorwf	_regImg+29,f,c
  1447                           
  1448                           ;main.c: 418: if (FMwrite(14) != 0) return 1;
  1449  0006F2  0E0E               	movlw	14
  1450  0006F4  ECE3  F003         	call	_FMwrite
  1451  0006F8  0900               	iorlw	0
  1452  0006FA  A4D8               	btfss	status,2,c
  1453  0006FC  0012               	return	
  1454                           
  1455                           ;main.c: 421: dly(2);
  1456                           
  1457                           ;main.c: 420: do {
  1458                           
  1459                           ;	Return value of _setVolume is never used
  1460  0006FE  0E00               	movlw	0
  1461  000700  6E02               	movwf	dly@d+1,c
  1462  000702  0E02               	movlw	2
  1463  000704  6E01               	movwf	dly@d,c
  1464  000706  ECE1  F004         	call	_dly	;wreg free
  1465                           
  1466                           ;main.c: 422: if (FMready(&dat) != 0) return 1;
  1467  00070A  0E2A               	movlw	low setVolume@dat
  1468  00070C  6E0C               	movwf	FMready@rdy,c
  1469  00070E  0E00               	movlw	high setVolume@dat
  1470  000710  6E0D               	movwf	FMready@rdy+1,c
  1471  000712  ECBC  F004         	call	_FMready	;wreg free
  1472  000716  0900               	iorlw	0
  1473  000718  A4D8               	btfss	status,2,c
  1474  00071A  0012               	return	
  1475                           
  1476                           ;main.c: 423: } while (!dat);
  1477                           
  1478                           ;	Return value of _setVolume is never used
  1479  00071C  502A               	movf	setVolume@dat,w,c
  1480  00071E  102B               	iorwf	setVolume@dat+1,w,c
  1481  000720  D7EC               	goto	L8
  1482  000722                     __end_of_setVolume:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           indf2	equ	0xFDF
  1493                           postinc2	equ	0xFDE
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _delay_10ms *****************
  1499 ;; Defined at:
  1500 ;;		line 605 in file "main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  n               2    0[COMRAM] unsigned int 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1514 ;;      Params:         2       0       0       0
  1515 ;;      Locals:         0       0       0       0
  1516 ;;      Temps:          1       0       0       0
  1517 ;;      Totals:         3       0       0       0
  1518 ;;Total ram usage:        3 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_butnEvent
  1524 ;;		_nextChannel
  1525 ;;		_previousChannel
  1526 ;;		_VolumeUp
  1527 ;;		_VolumeDown
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text9
  1532  0009F4                     __ptext9:
  1533                           	opt stack 0
  1534  0009F4                     _delay_10ms:
  1535                           	opt stack 29
  1536                           
  1537                           ;main.c: 606: while (n-- != 0) {
  1538                           
  1539                           ;incstack = 0
  1540  0009F4  D007               	goto	l1627
  1541  0009F6                     l1625:
  1542                           
  1543                           ;main.c: 607: _delay((unsigned long)((12)*(8000000/4000.0)));
  1544  0009F6  0E20               	movlw	32
  1545  0009F8  6E03               	movwf	??_delay_10ms& (0+255),c
  1546  0009FA  0E2A               	movlw	42
  1547  0009FC                     u1517:
  1548  0009FC  2EE8               	decfsz	wreg,f,c
  1549  0009FE  D7FE               	goto	u1517
  1550  000A00  2E03               	decfsz	??_delay_10ms& (0+255),f,c
  1551  000A02  D7FC               	goto	u1517
  1552  000A04                     l1627:
  1553  000A04  0601               	decf	delay_10ms@n,f,c
  1554  000A06  A0D8               	btfss	status,0,c
  1555  000A08  0602               	decf	delay_10ms@n+1,f,c
  1556  000A0A  2801               	incf	delay_10ms@n,w,c
  1557  000A0C  E1F4               	bnz	l1625
  1558  000A0E  2802               	incf	delay_10ms@n+1,w,c
  1559  000A10  B4D8               	btfsc	status,2,c
  1560  000A12  0012               	return	
  1561  000A14  D7F0               	goto	l1625
  1562  000A16                     __end_of_delay_10ms:
  1563                           	opt stack 0
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           prodh	equ	0xFF4
  1569                           prodl	equ	0xFF3
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           indf2	equ	0xFDF
  1573                           postinc2	equ	0xFDE
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _MuteHard *****************
  1579 ;; Defined at:
  1580 ;;		line 530 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  down            1    wreg     unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  down            1    0[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      unsigned char 
  1587 ;; Registers used:
  1588 ;;		wreg
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1594 ;;      Params:         0       0       0       0
  1595 ;;      Locals:         0       0       0       0
  1596 ;;      Temps:          0       0       0       0
  1597 ;;      Totals:         0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text10
  1608  000B02                     __ptext10:
  1609                           	opt stack 0
  1610  000B02                     _MuteHard:
  1611                           	opt stack 30
  1612                           
  1613                           ;main.c: 533: return 0;
  1614                           ;	Return value of _MuteHard is never used
  1615                           
  1616                           ;incstack = 0
  1617  000B02  0012               	return		;funcret
  1618  000B04                     __end_of_MuteHard:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           indf2	equ	0xFDF
  1629                           postinc2	equ	0xFDE
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _Init *****************
  1635 ;; Defined at:
  1636 ;;		line 176 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  i               2    0        int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1650 ;;      Params:         0       0       0       0
  1651 ;;      Locals:         0       0       0       0
  1652 ;;      Temps:          0       0       0       0
  1653 ;;      Totals:         0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		_OpenI2C
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text11
  1665  0008BA                     __ptext11:
  1666                           	opt stack 0
  1667  0008BA                     _Init:
  1668                           	opt stack 29
  1669                           
  1670                           ;main.c: 178: int i;
  1671                           ;main.c: 180: OSCCON = 0b01110010;
  1672                           
  1673                           ;incstack = 0
  1674  0008BA  0E72               	movlw	114
  1675  0008BC  6ED3               	movwf	4051,c	;volatile
  1676                           
  1677                           ;main.c: 181: LCDSE0 = 0b11111111;
  1678  0008BE  010F               	movlb	15	; () banked
  1679  0008C0  695A               	setf	90,b	;volatile
  1680                           
  1681                           ; BSR set to: 15
  1682                           ;main.c: 182: LCDSE1 = 0b11111111;
  1683  0008C2  010F               	movlb	15	; () banked
  1684  0008C4  695B               	setf	91,b	;volatile
  1685                           
  1686                           ; BSR set to: 15
  1687                           ;main.c: 183: LCDSE2 = 0b11111111;
  1688  0008C6  010F               	movlb	15	; () banked
  1689  0008C8  695C               	setf	92,b	;volatile
  1690                           
  1691                           ;main.c: 184: LCDSE3 = 0b00000000;
  1692  0008CA  0E00               	movlw	0
  1693  0008CC  010F               	movlb	15	; () banked
  1694  0008CE  6F5D               	movwf	93,b	;volatile
  1695                           
  1696                           ;main.c: 185: LCDCON = 0b10001000;
  1697  0008D0  0E88               	movlw	136
  1698  0008D2  010F               	movlb	15	; () banked
  1699  0008D4  6F59               	movwf	89,b	;volatile
  1700                           
  1701                           ;main.c: 186: LCDPS = 0b00110110;
  1702  0008D6  0E36               	movlw	54
  1703  0008D8  010F               	movlb	15	; () banked
  1704  0008DA  6F58               	movwf	88,b	;volatile
  1705                           
  1706                           ;main.c: 187: ADCON1 = 0b00111111;
  1707  0008DC  0E3F               	movlw	63
  1708  0008DE  6EC1               	movwf	4033,c	;volatile
  1709                           
  1710                           ;main.c: 188: TRISA = 0b00000011;
  1711  0008E0  0E03               	movlw	3
  1712  0008E2  6E92               	movwf	3986,c	;volatile
  1713                           
  1714                           ;main.c: 189: TRISB = 0b00100001;
  1715  0008E4  0E21               	movlw	33
  1716  0008E6  6E93               	movwf	3987,c	;volatile
  1717                           
  1718                           ;main.c: 190: TRISC = 0b00011000;
  1719  0008E8  0E18               	movlw	24
  1720  0008EA  6E94               	movwf	3988,c	;volatile
  1721                           
  1722                           ; BSR set to: 15
  1723                           ;main.c: 191: TRISG = 0b11111111;
  1724  0008EC  6898               	setf	3992,c	;volatile
  1725                           
  1726                           ;main.c: 192: PORTA = 0;
  1727  0008EE  0E00               	movlw	0
  1728  0008F0  6E80               	movwf	3968,c	;volatile
  1729                           
  1730                           ;main.c: 193: PORTB = 0;
  1731  0008F2  0E00               	movlw	0
  1732  0008F4  6E81               	movwf	3969,c	;volatile
  1733                           
  1734                           ;main.c: 194: PORTC = 0;
  1735  0008F6  0E00               	movlw	0
  1736  0008F8  6E82               	movwf	3970,c	;volatile
  1737                           
  1738                           ; BSR set to: 15
  1739                           ;main.c: 195: INTCONbits.TMR0IF = 0;
  1740  0008FA  94F2               	bcf	intcon,2,c	;volatile
  1741                           
  1742                           ;main.c: 197: T0CON = 0b00001000;
  1743  0008FC  0E08               	movlw	8
  1744  0008FE  6ED5               	movwf	4053,c	;volatile
  1745                           
  1746                           ;main.c: 198: TMR0H = 0;
  1747  000900  0E00               	movlw	0
  1748  000902  6ED7               	movwf	4055,c	;volatile
  1749                           
  1750                           ;main.c: 199: TMR0L = 0;
  1751  000904  0E00               	movlw	0
  1752  000906  6ED6               	movwf	4054,c	;volatile
  1753                           
  1754                           ; BSR set to: 15
  1755                           ;main.c: 200: T0CONbits.TMR0ON = 1;
  1756  000908  8ED5               	bsf	4053,7,c	;volatile
  1757                           
  1758                           ; BSR set to: 15
  1759                           ;main.c: 201: OpenI2C(0b00001000, 0b10000000);
  1760  00090A  0E80               	movlw	128
  1761  00090C  6E01               	movwf	OpenI2C@slew,c
  1762  00090E  0E08               	movlw	8
  1763  000910  EC47  F005         	call	_OpenI2C
  1764                           
  1765                           ;main.c: 202: SSPADD = 0x3F;
  1766  000914  0E3F               	movlw	63
  1767  000916  6EC8               	movwf	4040,c	;volatile
  1768  000918  0012               	return	
  1769  00091A                     __end_of_Init:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           intcon	equ	0xFF2
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           indf2	equ	0xFDF
  1781                           postinc2	equ	0xFDE
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _OpenI2C *****************
  1787 ;; Defined at:
  1788 ;;		line 14 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_open.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  sync_mode       1    wreg     unsigned char 
  1791 ;;  slew            1    0[COMRAM] unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1803 ;;      Params:         1       0       0       0
  1804 ;;      Locals:         1       0       0       0
  1805 ;;      Temps:          0       0       0       0
  1806 ;;      Totals:         2       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_Init
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text12
  1817  000A8E                     __ptext12:
  1818                           	opt stack 0
  1819  000A8E                     _OpenI2C:
  1820                           	opt stack 29
  1821                           
  1822                           ;incstack = 0
  1823                           ;OpenI2C@sync_mode stored from wreg
  1824  000A8E  6E02               	movwf	OpenI2C@sync_mode,c
  1825  000A90  0E3F               	movlw	63
  1826  000A92  16C7               	andwf	4039,f,c	;volatile
  1827  000A94  0E00               	movlw	0
  1828  000A96  6EC6               	movwf	4038,c	;volatile
  1829  000A98  0E00               	movlw	0
  1830  000A9A  6EC5               	movwf	4037,c	;volatile
  1831  000A9C  5002               	movf	OpenI2C@sync_mode,w,c
  1832  000A9E  12C6               	iorwf	4038,f,c	;volatile
  1833  000AA0  5001               	movf	OpenI2C@slew,w,c
  1834  000AA2  12C7               	iorwf	4039,f,c	;volatile
  1835  000AA4  8694               	bsf	3988,3,c	;volatile
  1836  000AA6  8894               	bsf	3988,4,c	;volatile
  1837  000AA8  8AC6               	bsf	4038,5,c	;volatile
  1838  000AAA  0012               	return		;funcret
  1839  000AAC                     __end_of_OpenI2C:
  1840                           	opt stack 0
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           prodh	equ	0xFF4
  1846                           prodl	equ	0xFF3
  1847                           intcon	equ	0xFF2
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           indf2	equ	0xFDF
  1851                           postinc2	equ	0xFDE
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _FMvers *****************
  1857 ;; Defined at:
  1858 ;;		line 460 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  1861 ;;		 -> main@ui(2), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      unsigned char 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1873 ;;      Params:         2       0       0       0
  1874 ;;      Locals:         0       0       0       0
  1875 ;;      Temps:          0       0       0       0
  1876 ;;      Totals:         2       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    3
  1880 ;; This function calls:
  1881 ;;		_FMread
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text13
  1888  000AF0                     __ptext13:
  1889                           	opt stack 0
  1890  000AF0                     _FMvers:
  1891                           	opt stack 27
  1892                           
  1893                           ;main.c: 461: if (FMread(0x1C, vsn) != 0) return 1;
  1894                           
  1895                           ;incstack = 0
  1896  000AF0  C00C  F003         	movff	FMvers@vsn,FMread@data
  1897  000AF4  C00D  F004         	movff	FMvers@vsn+1,FMread@data+1
  1898  000AF8  0E1C               	movlw	28
  1899  000AFA  EC6D  F002         	call	_FMread
  1900                           
  1901                           ;	Return value of _FMvers is never used
  1902  000AFE  0012               	return	
  1903  000B00                     __end_of_FMvers:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           prodh	equ	0xFF4
  1910                           prodl	equ	0xFF3
  1911                           intcon	equ	0xFF2
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           indf2	equ	0xFDF
  1915                           postinc2	equ	0xFDE
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _FMinit *****************
  1921 ;; Defined at:
  1922 ;;		line 354 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  dat             2   17[COMRAM] unsigned int 
  1927 ;;  ad              1   19[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      unsigned char 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1937 ;;      Params:         0       0       0       0
  1938 ;;      Locals:         3       0       0       0
  1939 ;;      Temps:          0       0       0       0
  1940 ;;      Totals:         3       0       0       0
  1941 ;;Total ram usage:        3 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    4
  1944 ;; This function calls:
  1945 ;;		_FMready
  1946 ;;		_FMwrite
  1947 ;;		_dly
  1948 ;;		_showFreq
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text14
  1955  0005A4                     __ptext14:
  1956                           	opt stack 0
  1957  0005A4                     _FMinit:
  1958                           	opt stack 26
  1959                           
  1960                           ;main.c: 356: unsigned char ad;
  1961                           ;main.c: 357: unsigned int dat;
  1962                           ;main.c: 360: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  1963                           
  1964                           ;incstack = 0
  1965  0005A4  0E00               	movlw	0
  1966  0005A6  6E14               	movwf	FMinit@ad,c
  1967  0005A8                     l1827:
  1968  0005A8  0E11               	movlw	17
  1969  0005AA  6414               	cpfsgt	FMinit@ad,c
  1970  0005AC  D001               	goto	l1831
  1971  0005AE  D018               	goto	l164
  1972  0005B0                     l1831:
  1973  0005B0  5014               	movf	FMinit@ad,w,c
  1974  0005B2  0D02               	mullw	2
  1975  0005B4  0E01               	movlw	low _regDflt
  1976  0005B6  24F3               	addwf	prodl,w,c
  1977  0005B8  6EF6               	movwf	tblptrl,c
  1978  0005BA  0E03               	movlw	high _regDflt
  1979  0005BC  20F4               	addwfc	prodh,w,c
  1980  0005BE  6EF7               	movwf	tblptrh,c
  1981  0005C0                     	if	0	;There are less than 3 active tblptr bytes
  1982  0005C0                     	endif
  1983  0005C0  5014               	movf	FMinit@ad,w,c
  1984  0005C2  0D02               	mullw	2
  1985  0005C4  0E34               	movlw	low _regImg
  1986  0005C6  24F3               	addwf	prodl,w,c
  1987  0005C8  6ED9               	movwf	fsr2l,c
  1988  0005CA  0E00               	movlw	high _regImg
  1989  0005CC  20F4               	addwfc	prodh,w,c
  1990  0005CE  6EDA               	movwf	fsr2h,c
  1991  0005D0  0009               	tblrd		*+
  1992  0005D2  CFF5 FFDE          	movff	tablat,postinc2
  1993  0005D6  0008               	tblrd		*
  1994  0005D8  CFF5 FFDD          	movff	tablat,postdec2
  1995  0005DC  2A14               	incf	FMinit@ad,f,c
  1996  0005DE  D7E4               	goto	l1827
  1997  0005E0                     l164:
  1998                           
  1999                           ;main.c: 362: dat = regImg[0];
  2000  0005E0  C034  F012         	movff	_regImg,FMinit@dat
  2001  0005E4  C035  F013         	movff	_regImg+1,FMinit@dat+1
  2002                           
  2003                           ;main.c: 363: regImg[0] &= ~1;
  2004  0005E8  9034               	bcf	_regImg,0,c
  2005                           
  2006                           ;main.c: 364: if (FMwrite(0) != 0) return 1;
  2007  0005EA  0E00               	movlw	0
  2008  0005EC  ECE3  F003         	call	_FMwrite
  2009  0005F0  0900               	iorlw	0
  2010  0005F2  B4D8               	btfsc	status,2,c
  2011  0005F4  D002               	goto	l1845
  2012  0005F6  0E01               	movlw	1
  2013  0005F8  0012               	return	
  2014  0005FA                     l1845:
  2015                           
  2016                           ;main.c: 365: for (ad = 1; ad < 18; ad++) {
  2017  0005FA  0E01               	movlw	1
  2018  0005FC  6E14               	movwf	FMinit@ad,c
  2019  0005FE                     l1847:
  2020  0005FE  0E11               	movlw	17
  2021  000600  6414               	cpfsgt	FMinit@ad,c
  2022  000602  D001               	goto	l1851
  2023  000604  D00A               	goto	l1861
  2024  000606                     l1851:
  2025                           
  2026                           ;main.c: 366: if (FMwrite(ad) != 0)return 1;
  2027  000606  5014               	movf	FMinit@ad,w,c
  2028  000608  ECE3  F003         	call	_FMwrite
  2029  00060C  0900               	iorlw	0
  2030  00060E  B4D8               	btfsc	status,2,c
  2031  000610  D002               	goto	l1857
  2032  000612  0E01               	movlw	1
  2033  000614  0012               	return	
  2034  000616                     l1857:
  2035  000616  2A14               	incf	FMinit@ad,f,c
  2036  000618  D7F2               	goto	l1847
  2037  00061A                     l1861:
  2038                           
  2039                           ;main.c: 367: }
  2040                           ;main.c: 369: regImg[0] = dat | 1;
  2041  00061A  0E01               	movlw	1
  2042  00061C  1012               	iorwf	FMinit@dat,w,c
  2043  00061E  6E34               	movwf	_regImg,c
  2044  000620  5013               	movf	FMinit@dat+1,w,c
  2045  000622  6E35               	movwf	_regImg+1,c
  2046                           
  2047                           ;main.c: 370: if (FMwrite(0) != 0) return 1;
  2048  000624  0E00               	movlw	0
  2049  000626  ECE3  F003         	call	_FMwrite
  2050  00062A  0900               	iorlw	0
  2051  00062C  B4D8               	btfsc	status,2,c
  2052  00062E  D002               	goto	l1869
  2053  000630  0E01               	movlw	1
  2054  000632  0012               	return	
  2055  000634                     l1869:
  2056                           
  2057                           ;main.c: 371: dly(20);
  2058  000634  0E00               	movlw	0
  2059  000636  6E02               	movwf	dly@d+1,c
  2060  000638  0E14               	movlw	20
  2061  00063A  6E01               	movwf	dly@d,c
  2062  00063C  ECE1  F004         	call	_dly	;wreg free
  2063                           
  2064                           ;main.c: 372: while (FMready(&dat), !dat) dly(2);
  2065  000640  D006               	goto	l1873
  2066  000642                     l1871:
  2067  000642  0E00               	movlw	0
  2068  000644  6E02               	movwf	dly@d+1,c
  2069  000646  0E02               	movlw	2
  2070  000648  6E01               	movwf	dly@d,c
  2071  00064A  ECE1  F004         	call	_dly	;wreg free
  2072  00064E                     l1873:
  2073  00064E  0E12               	movlw	low FMinit@dat
  2074  000650  6E0C               	movwf	FMready@rdy,c
  2075  000652  0E00               	movlw	high FMinit@dat
  2076  000654  6E0D               	movwf	FMready@rdy+1,c
  2077  000656  ECBC  F004         	call	_FMready	;wreg free
  2078  00065A  5012               	movf	FMinit@dat,w,c
  2079  00065C  1013               	iorwf	FMinit@dat+1,w,c
  2080  00065E  B4D8               	btfsc	status,2,c
  2081  000660  D7F0               	goto	l1871
  2082                           
  2083                           ;main.c: 373: showFreq();
  2084  000662  EC82  F005         	call	_showFreq	;wreg free
  2085                           
  2086                           ;main.c: 374: return 0;
  2087  000666  0E00               	movlw	0
  2088  000668  0012               	return	
  2089  00066A                     __end_of_FMinit:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           indf2	equ	0xFDF
  2101                           postinc2	equ	0xFDE
  2102                           postdec2	equ	0xFDD
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _showFreq *****************
  2108 ;; Defined at:
  2109 ;;		line 563 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      unsigned char 
  2116 ;; Registers used:
  2117 ;;		None
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          0       0       0       0
  2126 ;;      Totals:         0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_FMinit
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text15
  2137  000B04                     __ptext15:
  2138                           	opt stack 0
  2139  000B04                     _showFreq:
  2140                           	opt stack 29
  2141                           
  2142                           ;main.c: 565: ;
  2143                           ;main.c: 566: return 0;
  2144                           ;	Return value of _showFreq is never used
  2145                           
  2146                           ;incstack = 0
  2147  000B04  0012               	return		;funcret
  2148  000B06                     __end_of_showFreq:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           intcon	equ	0xFF2
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _dly *****************
  2167 ;; Defined at:
  2168 ;;		line 145 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  d               2    0[COMRAM] int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  i               2    2[COMRAM] int 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2182 ;;      Params:         2       0       0       0
  2183 ;;      Locals:         2       0       0       0
  2184 ;;      Temps:          0       0       0       0
  2185 ;;      Totals:         4       0       0       0
  2186 ;;Total ram usage:        4 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_FMinit
  2192 ;;		_setVolume
  2193 ;;		_FMfrequenc
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text16
  2199  0009C2                     __ptext16:
  2200                           	opt stack 0
  2201  0009C2                     _dly:
  2202                           	opt stack 28
  2203                           
  2204                           ;main.c: 147: int i = 0;
  2205                           
  2206                           ;incstack = 0
  2207  0009C2  0E00               	movlw	0
  2208  0009C4  6E04               	movwf	dly@i+1,c
  2209  0009C6  0E00               	movlw	0
  2210  0009C8  6E03               	movwf	dly@i,c
  2211                           
  2212                           ;main.c: 149: for (; d; --d)
  2213  0009CA  D00F               	goto	l1585
  2214  0009CC                     l1577:
  2215                           
  2216                           ;main.c: 150: for (i = 100; i; --i);
  2217  0009CC  0E00               	movlw	0
  2218  0009CE  6E04               	movwf	dly@i+1,c
  2219  0009D0  0E64               	movlw	100
  2220  0009D2  6E03               	movwf	dly@i,c
  2221  0009D4  D003               	goto	l1581
  2222  0009D6                     l1579:
  2223  0009D6  0603               	decf	dly@i,f,c
  2224  0009D8  A0D8               	btfss	status,0,c
  2225  0009DA  0604               	decf	dly@i+1,f,c
  2226  0009DC                     l1581:
  2227  0009DC  5003               	movf	dly@i,w,c
  2228  0009DE  1004               	iorwf	dly@i+1,w,c
  2229  0009E0  A4D8               	btfss	status,2,c
  2230  0009E2  D7F9               	goto	l1579
  2231  0009E4  0601               	decf	dly@d,f,c
  2232  0009E6  A0D8               	btfss	status,0,c
  2233  0009E8  0602               	decf	dly@d+1,f,c
  2234  0009EA                     l1585:
  2235  0009EA  5001               	movf	dly@d,w,c
  2236  0009EC  1002               	iorwf	dly@d+1,w,c
  2237  0009EE  B4D8               	btfsc	status,2,c
  2238  0009F0  0012               	return	
  2239  0009F2  D7EC               	goto	l1577
  2240  0009F4                     __end_of_dly:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           prodh	equ	0xFF4
  2247                           prodl	equ	0xFF3
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           postdec2	equ	0xFDD
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _FMwrite *****************
  2259 ;; Defined at:
  2260 ;;		line 244 in file "main.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  adr             1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  adr             1    6[COMRAM] unsigned char 
  2265 ;;  regstr          2    0        unsigned int 
  2266 ;;  secndByt        1    5[COMRAM] unsigned char 
  2267 ;;  firstByt        1    4[COMRAM] unsigned char 
  2268 ;;  rpy             1    0        unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2278 ;;      Params:         0       0       0       0
  2279 ;;      Locals:         3       0       0       0
  2280 ;;      Temps:          2       0       0       0
  2281 ;;      Totals:         5       0       0       0
  2282 ;;Total ram usage:        5 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		_IdleI2C
  2287 ;;		_WriteI2C
  2288 ;; This function is called by:
  2289 ;;		_FMinit
  2290 ;;		_setVolume
  2291 ;;		_FMfrequenc
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text17
  2296  0007C6                     __ptext17:
  2297                           	opt stack 0
  2298  0007C6                     _FMwrite:
  2299                           	opt stack 26
  2300                           
  2301                           ;incstack = 0
  2302                           ;FMwrite@adr stored from wreg
  2303  0007C6  6E07               	movwf	FMwrite@adr,c
  2304                           
  2305                           ;main.c: 246: unsigned int regstr;
  2306                           ;main.c: 247: unsigned char firstByt;
  2307                           ;main.c: 248: unsigned char secndByt;
  2308                           ;main.c: 249: unsigned char rpy;
  2309                           ;main.c: 251: firstByt = regImg[adr] >> 8;
  2310  0007C8  5007               	movf	FMwrite@adr,w,c
  2311  0007CA  0D02               	mullw	2
  2312  0007CC  0E34               	movlw	low _regImg
  2313  0007CE  24F3               	addwf	prodl,w,c
  2314  0007D0  6ED9               	movwf	fsr2l,c
  2315  0007D2  0E00               	movlw	high _regImg
  2316  0007D4  20F4               	addwfc	prodh,w,c
  2317  0007D6  6EDA               	movwf	fsr2h,c
  2318  0007D8  CFDE F003          	movff	postinc2,??_FMwrite
  2319  0007DC  CFDD F004          	movff	postdec2,??_FMwrite+1
  2320  0007E0  C004  F003         	movff	??_FMwrite+1,??_FMwrite
  2321  0007E4  6A04               	clrf	??_FMwrite+1,c
  2322  0007E6  5003               	movf	??_FMwrite,w,c
  2323  0007E8  6E05               	movwf	FMwrite@firstByt,c
  2324                           
  2325                           ;main.c: 252: secndByt = regImg[adr];
  2326  0007EA  5007               	movf	FMwrite@adr,w,c
  2327  0007EC  0D02               	mullw	2
  2328  0007EE  0E34               	movlw	low _regImg
  2329  0007F0  24F3               	addwf	prodl,w,c
  2330  0007F2  6ED9               	movwf	fsr2l,c
  2331  0007F4  0E00               	movlw	high _regImg
  2332  0007F6  20F4               	addwfc	prodh,w,c
  2333  0007F8  6EDA               	movwf	fsr2h,c
  2334  0007FA  50DF               	movf	indf2,w,c
  2335  0007FC  6E06               	movwf	FMwrite@secndByt,c
  2336                           
  2337                           ;main.c: 254: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2338  0007FE  80C5               	bsf	4037,0,c	;volatile
  2339  000800                     l126:
  2340  000800  B0C5               	btfsc	4037,0,c	;volatile
  2341  000802  D7FE               	goto	l126
  2342                           
  2343                           ;main.c: 255: IdleI2C();
  2344  000804  EC6F  F005         	call	_IdleI2C	;wreg free
  2345                           
  2346                           ;main.c: 258: if (WriteI2C(0x20)) return 1;
  2347  000808  0E20               	movlw	32
  2348  00080A  EC8D  F004         	call	_WriteI2C
  2349  00080E  0900               	iorlw	0
  2350  000810  B4D8               	btfsc	status,2,c
  2351  000812  D002               	goto	l1597
  2352  000814  0E01               	movlw	1
  2353  000816  0012               	return	
  2354  000818                     l1597:
  2355                           
  2356                           ;main.c: 259: IdleI2C();
  2357  000818  EC6F  F005         	call	_IdleI2C	;wreg free
  2358                           
  2359                           ;main.c: 260: WriteI2C(adr);
  2360  00081C  5007               	movf	FMwrite@adr,w,c
  2361  00081E  EC8D  F004         	call	_WriteI2C
  2362                           
  2363                           ;main.c: 261: IdleI2C();
  2364  000822  EC6F  F005         	call	_IdleI2C	;wreg free
  2365                           
  2366                           ;main.c: 262: WriteI2C(firstByt);
  2367  000826  5005               	movf	FMwrite@firstByt,w,c
  2368  000828  EC8D  F004         	call	_WriteI2C
  2369                           
  2370                           ;main.c: 263: IdleI2C();
  2371  00082C  EC6F  F005         	call	_IdleI2C	;wreg free
  2372                           
  2373                           ;main.c: 264: WriteI2C(secndByt);
  2374  000830  5006               	movf	FMwrite@secndByt,w,c
  2375  000832  EC8D  F004         	call	_WriteI2C
  2376                           
  2377                           ;main.c: 265: IdleI2C();
  2378  000836  EC6F  F005         	call	_IdleI2C	;wreg free
  2379                           
  2380                           ;main.c: 266: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2381  00083A  84C5               	bsf	4037,2,c	;volatile
  2382  00083C                     l131:
  2383  00083C  B4C5               	btfsc	4037,2,c	;volatile
  2384  00083E  D7FE               	goto	l131
  2385                           
  2386                           ;main.c: 267: IdleI2C();
  2387  000840  EC6F  F005         	call	_IdleI2C	;wreg free
  2388                           
  2389                           ;main.c: 268: return 0;
  2390  000844  0E00               	movlw	0
  2391  000846  0012               	return	
  2392  000848                     __end_of_FMwrite:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           indf2	equ	0xFDF
  2404                           postinc2	equ	0xFDE
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _FMready *****************
  2411 ;; Defined at:
  2412 ;;		line 334 in file "main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  2415 ;;		 -> FMfrequenc@dat(2), setVolume@dat(2), FMinit@dat(2), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  sts             2   15[COMRAM] unsigned int 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      unsigned char 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2427 ;;      Params:         2       0       0       0
  2428 ;;      Locals:         4       0       0       0
  2429 ;;      Temps:          0       0       0       0
  2430 ;;      Totals:         6       0       0       0
  2431 ;;Total ram usage:        6 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    3
  2434 ;; This function calls:
  2435 ;;		_FMread
  2436 ;; This function is called by:
  2437 ;;		_FMinit
  2438 ;;		_setVolume
  2439 ;;		_FMfrequenc
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text18
  2444  000978                     __ptext18:
  2445                           	opt stack 0
  2446  000978                     _FMready:
  2447                           	opt stack 25
  2448                           
  2449                           ;main.c: 336: unsigned int sts;
  2450                           ;main.c: 338: if (FMread(0x13, &sts) != 0) return 1;
  2451                           
  2452                           ;incstack = 0
  2453  000978  0E10               	movlw	low FMready@sts
  2454  00097A  6E03               	movwf	FMread@data,c
  2455  00097C  0E00               	movlw	high FMready@sts
  2456  00097E  6E04               	movwf	FMread@data+1,c
  2457  000980  0E13               	movlw	19
  2458  000982  EC6D  F002         	call	_FMread
  2459  000986  0900               	iorlw	0
  2460  000988  B4D8               	btfsc	status,2,c
  2461  00098A  D002               	goto	l1613
  2462  00098C  0E01               	movlw	1
  2463  00098E  0012               	return	
  2464  000990                     l1613:
  2465                           
  2466                           ;main.c: 339: sts &= 0x0020;
  2467  000990  0E20               	movlw	32
  2468  000992  1610               	andwf	FMready@sts,f,c
  2469  000994  0E00               	movlw	0
  2470  000996  1611               	andwf	FMready@sts+1,f,c
  2471                           
  2472                           ;main.c: 340: *rdy = sts ? -1 : 0;
  2473  000998  5010               	movf	FMready@sts,w,c
  2474  00099A  1011               	iorwf	FMready@sts+1,w,c
  2475  00099C  A4D8               	btfss	status,2,c
  2476  00099E  D005               	goto	l158
  2477  0009A0  0E00               	movlw	0
  2478  0009A2  6E0F               	movwf	_FMready$575+1,c
  2479  0009A4  0E00               	movlw	0
  2480  0009A6  6E0E               	movwf	_FMready$575,c
  2481  0009A8  D002               	goto	l1617
  2482  0009AA                     l158:
  2483  0009AA  680E               	setf	_FMready$575,c
  2484  0009AC  680F               	setf	_FMready$575+1,c
  2485  0009AE                     l1617:
  2486  0009AE  C00C  FFD9         	movff	FMready@rdy,fsr2l
  2487  0009B2  C00D  FFDA         	movff	FMready@rdy+1,fsr2h
  2488  0009B6  C00E  FFDE         	movff	_FMready$575,postinc2
  2489  0009BA  C00F  FFDD         	movff	_FMready$575+1,postdec2
  2490                           
  2491                           ;main.c: 341: return 0;
  2492  0009BE  0E00               	movlw	0
  2493  0009C0  0012               	return	
  2494  0009C2                     __end_of_FMready:
  2495                           	opt stack 0
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           prodh	equ	0xFF4
  2501                           prodl	equ	0xFF3
  2502                           intcon	equ	0xFF2
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           indf2	equ	0xFDF
  2506                           postinc2	equ	0xFDE
  2507                           postdec2	equ	0xFDD
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _FMread *****************
  2513 ;; Defined at:
  2514 ;;		line 286 in file "main.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  regAddr         1    wreg     unsigned char 
  2517 ;;  data            2    2[COMRAM] PTR unsigned int 
  2518 ;;		 -> main@ui(2), FMready@sts(2), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  regAddr         1    8[COMRAM] unsigned char 
  2521 ;;  secndByt        1   10[COMRAM] unsigned char 
  2522 ;;  firstByt        1    9[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2532 ;;      Params:         2       0       0       0
  2533 ;;      Locals:         3       0       0       0
  2534 ;;      Temps:          4       0       0       0
  2535 ;;      Totals:         9       0       0       0
  2536 ;;Total ram usage:        9 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		_IdleI2C
  2541 ;;		_ReadI2C
  2542 ;;		_WriteI2C
  2543 ;; This function is called by:
  2544 ;;		_FMready
  2545 ;;		_FMvers
  2546 ;;		_FMid
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text19
  2551  0004DA                     __ptext19:
  2552                           	opt stack 0
  2553  0004DA                     _FMread:
  2554                           	opt stack 25
  2555                           
  2556                           ;incstack = 0
  2557                           ;FMread@regAddr stored from wreg
  2558  0004DA  6E09               	movwf	FMread@regAddr,c
  2559                           
  2560                           ;main.c: 288: unsigned char firstByt;
  2561                           ;main.c: 289: unsigned char secndByt;
  2562                           ;main.c: 291: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2563  0004DC  80C5               	bsf	4037,0,c	;volatile
  2564  0004DE                     l136:
  2565  0004DE  B0C5               	btfsc	4037,0,c	;volatile
  2566  0004E0  D7FE               	goto	l136
  2567                           
  2568                           ;main.c: 292: IdleI2C();
  2569  0004E2  EC6F  F005         	call	_IdleI2C	;wreg free
  2570                           
  2571                           ;main.c: 295: if (WriteI2C(0x20)) return 1;
  2572  0004E6  0E20               	movlw	32
  2573  0004E8  EC8D  F004         	call	_WriteI2C
  2574  0004EC  0900               	iorlw	0
  2575  0004EE  B4D8               	btfsc	status,2,c
  2576  0004F0  D002               	goto	l1543
  2577  0004F2  0E01               	movlw	1
  2578  0004F4  0012               	return	
  2579  0004F6                     l1543:
  2580                           
  2581                           ;main.c: 296: IdleI2C();
  2582  0004F6  EC6F  F005         	call	_IdleI2C	;wreg free
  2583                           
  2584                           ;main.c: 297: WriteI2C(regAddr);
  2585  0004FA  5009               	movf	FMread@regAddr,w,c
  2586  0004FC  EC8D  F004         	call	_WriteI2C
  2587                           
  2588                           ;main.c: 298: IdleI2C();
  2589  000500  EC6F  F005         	call	_IdleI2C	;wreg free
  2590                           
  2591                           ;main.c: 299: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2592  000504  82C5               	bsf	4037,1,c	;volatile
  2593  000506                     l141:
  2594  000506  B2C5               	btfsc	4037,1,c	;volatile
  2595  000508  D7FE               	goto	l141
  2596                           
  2597                           ;main.c: 300: IdleI2C();
  2598  00050A  EC6F  F005         	call	_IdleI2C	;wreg free
  2599                           
  2600                           ;main.c: 301: WriteI2C(0x20 + 0x01);
  2601  00050E  0E21               	movlw	33
  2602  000510  EC8D  F004         	call	_WriteI2C
  2603                           
  2604                           ;main.c: 302: IdleI2C();
  2605  000514  EC6F  F005         	call	_IdleI2C	;wreg free
  2606                           
  2607                           ;main.c: 303: firstByt = ReadI2C();
  2608  000518  EC56  F005         	call	_ReadI2C	;wreg free
  2609  00051C  6E0A               	movwf	FMread@firstByt,c
  2610                           
  2611                           ;main.c: 304: IdleI2C();
  2612  00051E  EC6F  F005         	call	_IdleI2C	;wreg free
  2613                           
  2614                           ;main.c: 305: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2615  000522  9AC5               	bcf	4037,5,c	;volatile
  2616  000524  88C5               	bsf	4037,4,c	;volatile
  2617  000526                     l144:
  2618  000526  B8C5               	btfsc	4037,4,c	;volatile
  2619  000528  D7FE               	goto	l144
  2620                           
  2621                           ;main.c: 306: IdleI2C();
  2622  00052A  EC6F  F005         	call	_IdleI2C	;wreg free
  2623                           
  2624                           ;main.c: 307: secndByt = ReadI2C();
  2625  00052E  EC56  F005         	call	_ReadI2C	;wreg free
  2626  000532  6E0B               	movwf	FMread@secndByt,c
  2627                           
  2628                           ;main.c: 308: IdleI2C();
  2629  000534  EC6F  F005         	call	_IdleI2C	;wreg free
  2630                           
  2631                           ;main.c: 309: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2632  000538  8AC5               	bsf	4037,5,c	;volatile
  2633  00053A  88C5               	bsf	4037,4,c	;volatile
  2634  00053C                     l147:
  2635  00053C  B8C5               	btfsc	4037,4,c	;volatile
  2636  00053E  D7FE               	goto	l147
  2637                           
  2638                           ;main.c: 310: IdleI2C();
  2639  000540  EC6F  F005         	call	_IdleI2C	;wreg free
  2640                           
  2641                           ;main.c: 311: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2642  000544  84C5               	bsf	4037,2,c	;volatile
  2643  000546                     l150:
  2644  000546  B4C5               	btfsc	4037,2,c	;volatile
  2645  000548  D7FE               	goto	l150
  2646                           
  2647                           ;main.c: 312: IdleI2C();
  2648  00054A  EC6F  F005         	call	_IdleI2C	;wreg free
  2649                           
  2650                           ;main.c: 313: *data = firstByt;
  2651  00054E  500A               	movf	FMread@firstByt,w,c
  2652  000550  6E05               	movwf	??_FMread& (0+255),c
  2653  000552  6A06               	clrf	(??_FMread+1)& (0+255),c
  2654  000554  C003  FFD9         	movff	FMread@data,fsr2l
  2655  000558  C004  FFDA         	movff	FMread@data+1,fsr2h
  2656  00055C  C005  FFDE         	movff	??_FMread,postinc2
  2657  000560  C006  FFDD         	movff	??_FMread+1,postdec2
  2658                           
  2659                           ;main.c: 314: *data <<= 8;
  2660  000564  C003  FFD9         	movff	FMread@data,fsr2l
  2661  000568  C004  FFDA         	movff	FMread@data+1,fsr2h
  2662  00056C  50DE               	movf	postinc2,w,c
  2663  00056E  6EDD               	movwf	postdec2,c
  2664  000570  6ADF               	clrf	indf2,c
  2665                           
  2666                           ;main.c: 315: *data = *data | secndByt;
  2667  000572  C003  FFD9         	movff	FMread@data,fsr2l
  2668  000576  C004  FFDA         	movff	FMread@data+1,fsr2h
  2669  00057A  CFDE F005          	movff	postinc2,??_FMread
  2670  00057E  CFDD F006          	movff	postdec2,??_FMread+1
  2671  000582  500B               	movf	FMread@secndByt,w,c
  2672  000584  6E07               	movwf	(??_FMread+2)& (0+255),c
  2673  000586  6A08               	clrf	(??_FMread+3)& (0+255),c
  2674  000588  5005               	movf	??_FMread,w,c
  2675  00058A  1207               	iorwf	??_FMread+2,f,c
  2676  00058C  5006               	movf	??_FMread+1,w,c
  2677  00058E  1208               	iorwf	??_FMread+3,f,c
  2678  000590  C003  FFD9         	movff	FMread@data,fsr2l
  2679  000594  C004  FFDA         	movff	FMread@data+1,fsr2h
  2680  000598  C007  FFDE         	movff	??_FMread+2,postinc2
  2681  00059C  C008  FFDD         	movff	??_FMread+3,postdec2
  2682                           
  2683                           ;main.c: 317: return 0;
  2684  0005A0  0E00               	movlw	0
  2685  0005A2  0012               	return	
  2686  0005A4                     __end_of_FMread:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           intcon	equ	0xFF2
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           indf2	equ	0xFDF
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _WriteI2C *****************
  2705 ;; Defined at:
  2706 ;;		line 12 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_writ.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  data_out        1    wreg     unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  data_out        1    1[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      char 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2720 ;;      Params:         0       0       0       0
  2721 ;;      Locals:         1       0       0       0
  2722 ;;      Temps:          0       0       0       0
  2723 ;;      Totals:         1       0       0       0
  2724 ;;Total ram usage:        1 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    1
  2727 ;; This function calls:
  2728 ;;		_IdleI2C
  2729 ;; This function is called by:
  2730 ;;		_FMwrite
  2731 ;;		_FMread
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text20
  2736  00091A                     __ptext20:
  2737                           	opt stack 0
  2738  00091A                     _WriteI2C:
  2739                           	opt stack 26
  2740                           
  2741                           ;incstack = 0
  2742                           ;WriteI2C@data_out stored from wreg
  2743  00091A  6E02               	movwf	WriteI2C@data_out,c
  2744  00091C  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2745  000920  AEC6               	btfss	4038,7,c	;volatile
  2746  000922  D002               	goto	l1491
  2747  000924  0EFF               	movlw	255
  2748  000926  0012               	return	
  2749  000928                     l1491:
  2750  000928  50C6               	movf	4038,w,c	;volatile
  2751  00092A  0B0F               	andlw	15
  2752  00092C  0A08               	xorlw	8
  2753  00092E  B4D8               	btfsc	status,2,c
  2754  000930  D00F               	goto	l1509
  2755  000932  50C6               	movf	4038,w,c	;volatile
  2756  000934  0B0F               	andlw	15
  2757  000936  0A0B               	xorlw	11
  2758  000938  B4D8               	btfsc	status,2,c
  2759  00093A  D00A               	goto	l1509
  2760  00093C  88C6               	bsf	4038,4,c	;volatile
  2761  00093E                     l306:
  2762  00093E  A69E               	btfss	3998,3,c	;volatile
  2763  000940  D7FE               	goto	l306
  2764  000942  A4C7               	btfss	4039,2,c	;volatile
  2765  000944  B0C7               	btfsc	4039,0,c	;volatile
  2766  000946  D002               	goto	l1505
  2767  000948  0EFE               	movlw	254
  2768  00094A  0012               	return	
  2769  00094C                     l1505:
  2770  00094C  0E00               	movlw	0
  2771  00094E  0012               	return	
  2772  000950                     l1509:
  2773  000950  50C6               	movf	4038,w,c	;volatile
  2774  000952  0B0F               	andlw	15
  2775  000954  0A08               	xorlw	8
  2776  000956  B4D8               	btfsc	status,2,c
  2777  000958  D005               	goto	l315
  2778  00095A  50C6               	movf	4038,w,c	;volatile
  2779  00095C  0B0F               	andlw	15
  2780  00095E  0A0B               	xorlw	11
  2781  000960  A4D8               	btfss	status,2,c
  2782  000962  0012               	return	
  2783  000964                     l315:
  2784  000964  B0C7               	btfsc	4039,0,c	;volatile
  2785  000966  D7FE               	goto	l315
  2786  000968  EC6F  F005         	call	_IdleI2C	;wreg free
  2787  00096C  ACC5               	btfss	4037,6,c	;volatile
  2788  00096E  D002               	goto	l1523
  2789  000970  0EFE               	movlw	254
  2790  000972  0012               	return	
  2791  000974                     l1523:
  2792  000974  0E00               	movlw	0
  2793  000976  0012               	return	
  2794  000978                     __end_of_WriteI2C:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           prodh	equ	0xFF4
  2801                           prodl	equ	0xFF3
  2802                           intcon	equ	0xFF2
  2803                           postinc0	equ	0xFEE
  2804                           wreg	equ	0xFE8
  2805                           indf2	equ	0xFDF
  2806                           postinc2	equ	0xFDE
  2807                           postdec2	equ	0xFDD
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function _IdleI2C *****************
  2813 ;; Defined at:
  2814 ;;		line 24 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_idle.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2828 ;;      Params:         0       0       0       0
  2829 ;;      Locals:         0       0       0       0
  2830 ;;      Temps:          1       0       0       0
  2831 ;;      Totals:         1       0       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_FMwrite
  2838 ;;		_FMread
  2839 ;;		_WriteI2C
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text21
  2844  000ADE                     __ptext21:
  2845                           	opt stack 0
  2846  000ADE                     _IdleI2C:
  2847                           	opt stack 26
  2848  000ADE                     l1477:
  2849  000ADE  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  2850  000AE2  0E1F               	movlw	31
  2851  000AE4  1601               	andwf	??_IdleI2C,f,c
  2852  000AE6  A4D8               	btfss	status,2,c
  2853  000AE8  D7FA               	goto	l1477
  2854  000AEA  A4C7               	btfss	4039,2,c	;volatile
  2855  000AEC  0012               	return	
  2856  000AEE  D7F7               	goto	l1477
  2857  000AF0                     __end_of_IdleI2C:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _ReadI2C *****************
  2876 ;; Defined at:
  2877 ;;		line 11 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_read.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      unsigned char 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2891 ;;      Params:         0       0       0       0
  2892 ;;      Locals:         0       0       0       0
  2893 ;;      Temps:          0       0       0       0
  2894 ;;      Totals:         0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_FMread
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text22
  2905  000AAC                     __ptext22:
  2906                           	opt stack 0
  2907  000AAC                     _ReadI2C:
  2908                           	opt stack 26
  2909                           
  2910                           ;incstack = 0
  2911  000AAC  50C6               	movf	4038,w,c	;volatile
  2912  000AAE  0B0F               	andlw	15
  2913  000AB0  0A08               	xorlw	8
  2914  000AB2  B4D8               	btfsc	status,2,c
  2915  000AB4  D004               	goto	l281
  2916  000AB6  50C6               	movf	4038,w,c	;volatile
  2917  000AB8  0B0F               	andlw	15
  2918  000ABA  0A0B               	xorlw	11
  2919  000ABC  B4D8               	btfsc	status,2,c
  2920  000ABE                     l281:
  2921  000ABE  86C5               	bsf	4037,3,c	;volatile
  2922  000AC0                     l282:
  2923  000AC0  A0C7               	btfss	4039,0,c	;volatile
  2924  000AC2  D7FE               	goto	l282
  2925  000AC4  50C9               	movf	4041,w,c	;volatile
  2926  000AC6  0012               	return	
  2927  000AC8                     __end_of_ReadI2C:
  2928                           	opt stack 0
  2929                           tblptru	equ	0xFF8
  2930                           tblptrh	equ	0xFF7
  2931                           tblptrl	equ	0xFF6
  2932                           tablat	equ	0xFF5
  2933                           prodh	equ	0xFF4
  2934                           prodl	equ	0xFF3
  2935                           intcon	equ	0xFF2
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           indf2	equ	0xFDF
  2939                           postinc2	equ	0xFDE
  2940                           postdec2	equ	0xFDD
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           prodh	equ	0xFF4
  2949                           prodl	equ	0xFF3
  2950                           intcon	equ	0xFF2
  2951                           postinc0	equ	0xFEE
  2952                           wreg	equ	0xFE8
  2953                           indf2	equ	0xFDF
  2954                           postinc2	equ	0xFDE
  2955                           postdec2	equ	0xFDD
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960                           	psect	rparam
  2961  0000                     tblptru	equ	0xFF8
  2962                           tblptrh	equ	0xFF7
  2963                           tblptrl	equ	0xFF6
  2964                           tablat	equ	0xFF5
  2965                           prodh	equ	0xFF4
  2966                           prodl	equ	0xFF3
  2967                           intcon	equ	0xFF2
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           indf2	equ	0xFDF
  2971                           postinc2	equ	0xFDE
  2972                           postdec2	equ	0xFDD
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    55
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      87
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), setVolume@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _butnEvent->_delay_10ms
    _VolumeUp->_setVolume
    _VolumeDown->_setVolume
    _setVolume->_FMready
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   10045
                                             45 COMRAM     6     6      0
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    1723
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    1723
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1381
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           13    11      2     572
                                              3 COMRAM    13    11      2
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             0     0      0    1816
                         _delay_10ms
                          _setVolume
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           0     0      0    1816
                         _delay_10ms
                          _setVolume
 ---------------------------------------------------------------------------------
 (2) _setVolume                                           30    28      2    1474
                                             17 COMRAM    28    26      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     342
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     456
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1389
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     368
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0     134
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2     660
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     370
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      22
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _VolumeDown
     _delay_10ms
     _setVolume
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
   _VolumeUp
     _delay_10ms
     _setVolume
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
   _butnEvent
     _delay_10ms
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      57       1       91.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      57       8        0.0%
DATA                 0      0      57      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Feb 17 19:19:06 2017

             __CFG_CP$OFF 000000               _SSPSTATbits 000FC7                        l81 03EA  
                      l91 048A                        l83 03D2                        l75 039A  
                      l93 0472                        l77 0372                        l86 043A  
                      l88 0422                        l98 04C2               __CFG_BORV$3 000000  
                     l131 083C                       l220 0B00                       l141 0506  
                     l150 0546                       l126 0800                       l144 0526  
                     l136 04DE                       l306 093E                       l315 0964  
                     l147 053C                       l164 05E0                       l158 09AA  
                     l281 0ABE                       l282 0AC0                       _dly 09C2  
                     prod 000FF3                       wreg 000FE8              __CFG_WDT$OFF 000000  
                    l1505 094C                      l1523 0974                      l1509 0950  
                    l1613 0990                      l1543 04F6                      l1617 09AE  
                    l1625 09F6                      l1801 04D0                      l1721 0390  
                    l1705 0356                      l1491 0928                      l1627 0A04  
                    l1731 03B6                      l1477 0ADE                      l1581 09DC  
                    l1741 03E0                      l1831 05B0                      l1751 0406  
                    l1577 09CC                      l1585 09EA                      l1649 0678  
                    l1761 0430                      l1579 09D6                      l1851 0606  
                    l1827 05A8                      l1771 0456                      l1597 0818  
                    l1861 061A                      l1845 05FA                      l1781 0480  
                    l1871 0642                      l1847 05FE                      l1791 04A6  
                    l1951 077A                      l1943 075A                      l1873 064E  
                    l1857 0616                      l1953 0780                      l1945 0768  
                    ?_dly 0001                      l1955 0788                      l1947 076E  
                    l1869 0634                      l1949 0774                      l1959 078E  
                    u1060 0686                      u1300 0472                      u1220 03D2  
                    u1075 06B6                      u1340 04C2                      u1260 0422  
                    u1180 0372                      u1440 074A                      u1507 04AC  
                    u1517 09FC                      u1467 035C                      u1477 03BC  
                    u1487 040C                      u1497 045C                      _Init 08BA  
         __end_of_FMready 09C2                      _main 0722                      dly@d 0001  
                    dly@i 0003                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9           __end_of_FMwrite 0848                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_IdleI2C 0AF0             __CFG_MCLRE$ON 000000              ___param_bank 000010  
         __end_of_ReadI2C 0AC8           __end_of_OpenI2C 0AAC                     ??_dly 0003  
                   ?_Init 0001                     ?_main 0001                     _T0CON 000FD5  
                   _LCDPS 000F58                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISG 000F98             __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000  
         __end_of_regDflt 0325                     _errfm 0B00               ?_FMfrequenc 0012  
          __CFG_BOREN$OFF 000000                     tablat 000FF5                     status 000FD8  
            ?_nextChannel 0001           __initialization 0AC8              __end_of_Init 091A  
            __end_of_main 07C6                    ??_Init 0003                    ??_main 002E  
           __activetblptr 000002          __end_of_MuteHard 0B04                    _ADCON1 000FC1  
               ??_FMready 000E                    ?_errfm 0001          __end_of_WriteI2C 0978  
               ??_FMwrite 0003          __end_of_VolumeUp 0A70                    _LCDCON 000F59  
                  _LCDSE0 000F5A                    _LCDSE1 000F5B                    _LCDSE2 000F5C  
                  _LCDSE3 000F5D               OpenI2C@slew 0001                 ??_IdleI2C 0001  
                  _OSCCON 000FD3                    _FMinit 05A4                    _FMread 04DA  
                  _SSPADD 000FC8                    _SSPBUF 000FC9                    _FMvers 0AF0  
               ??_ReadI2C 0001                 ??_OpenI2C 0002            __CFG_XINST$OFF 000000  
     __size_of_FMfrequenc 0072                    _regImg 0034                    clear_0 0ACE  
                  main@ui 0032          __end_of_showFreq 0B06              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 0AD4             ___rparam_used 000001  
              _VolumeDown 0A70            __pcstackCOMRAM 0001             __end_of_errfm 0B02  
          setVolume@F6676 0325           __CFG_OSC$INTIO7 000000                   ??_errfm 0001  
__size_of_previousChannel 001E        __size_of_butnEvent 01A0                _delay_10ms 09F4  
                 ?_FMinit 0001                   ?_FMread 0003                   ?_FMvers 000C  
               ?_MuteHard 0001    __end_ofsetVolume@F6676 0338      __size_of_nextChannel 001E  
               ?_WriteI2C 0001        __size_of_setVolume 00B8                 ?_VolumeUp 0001  
               FMinit@dat 0012                   _FMready 0978                   _SSPCON1 000FC6  
                 _SSPCON2 000FC5              ??_FMfrequenc 0014                   _SSPSTAT 000FC7  
                 _FMwrite 07C6                   _IdleI2C 0ADE           __size_of_FMinit 00C6  
         __size_of_FMread 00CA                 FMvers@vsn 000C                   _ReadI2C 0AAC  
         __size_of_FMvers 0010                   _OpenI2C 0A8E                   __Hparam 0000  
                 __Lparam 0000               ?_VolumeDown 0001                ??_MuteHard 0001  
               ?_showFreq 0001              __psmallconst 0300           __CFG_STVREN$OFF 000000  
                 __pcinit 0AC8                ??_WriteI2C 0002         __end_of_butnEvent 04DA  
      __end_of_FMfrequenc 08BA                ??_VolumeUp 002E                   __ramtop 0300  
                 __ptext0 0722                   __ptext1 0A16                   __ptext2 0A34  
                 __ptext3 0848                   __ptext4 0B00                   __ptext5 033A  
                 __ptext6 0A52                   __ptext7 0A70                   __ptext8 066A  
                 __ptext9 09F4                 _T0CONbits 000FD5                   _regDflt 0301  
            __size_of_dly 0032                   main@evt 0030      end_of_initialization 0AD4  
       __end_of_setVolume 0722               ?_delay_10ms 0001             __Lmediumconst 0000  
       ??_previousChannel 001C         setVolume@temp_vol 002D               FMfrequenc@f 0012  
              ??_showFreq 0001                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                 _PORTAbits 000F80                 _PORTBbits 000F81  
               _PORTCbits 000F82                 _PORTGbits 000F86                 _TRISCbits 000F94  
     __size_of_VolumeDown 001E            __end_of_FMinit 066A            __end_of_FMread 05A4  
          __end_of_FMvers 0B00       __size_of_delay_10ms 0022                butnEvent@c 0007  
     start_initialization 0AC8               __end_of_dly 09F4          WriteI2C@data_out 0002  
                ??_FMinit 0012                  ??_FMread 0005                  ??_FMvers 000E  
       __size_of_MuteHard 0002           setVolume@volume 0012         __size_of_WriteI2C 005E  
       __size_of_VolumeUp 001E               __pbssCOMRAM 0034                  ?_FMready 000C  
                ?_FMwrite 0001                  ?_IdleI2C 0001                  ?_ReadI2C 0001  
                ?_OpenI2C 0001             ??_nextChannel 001C              ??_VolumeDown 002E  
       __size_of_showFreq 0002                  FMinit@ad 0014               __smallconst 0300  
               _butnEvent 033A           FMwrite@firstByt 0005           _previousChannel 0A16  
                _LCDDATA0 000F60        __end_of_VolumeDown 0A8E           FMwrite@secndByt 0006  
          __size_of_errfm 0002              ??_delay_10ms 0003              MuteHard@down 0001  
          FMread@firstByt 000A                 _setVolume 066A                FMread@data 0003  
                _PIR1bits 000F9E            FMread@secndByt 000B                FMready@rdy 000C  
              FMready@sts 0010       __end_of_nextChannel 0A52        __end_of_delay_10ms 0A16  
              ?_butnEvent 0004   setVolume@volume_setting 002C          __size_of_FMready 004A  
        __size_of_FMwrite 0082          OpenI2C@sync_mode 0002          __size_of_IdleI2C 0012  
        __size_of_ReadI2C 001C                  __Hrparam 0000                ?_setVolume 0012  
        __size_of_OpenI2C 001E                  _MuteHard 0B02                  __Lrparam 0000  
              FMwrite@adr 0007                  _WriteI2C 091A                  _VolumeUp 0A52  
 __end_of_previousChannel 0A34              setVolume@dat 002A                  __ptext10 0B02  
                __ptext11 08BA                  __ptext20 091A                  __ptext12 0A8E  
                __ptext21 0ADE                  __ptext13 0AF0                  __ptext22 0AAC  
                __ptext14 05A4                  __ptext15 0B04                  __ptext16 09C2  
                __ptext17 07C6                  __ptext18 0978                  __ptext19 04DA  
             delay_10ms@n 0001             __size_of_Init 0060             __size_of_main 00A4  
           FMread@regAddr 0009               _nextChannel 0A34                  _showFreq 0B04  
           FMfrequenc@dat 001A               ??_butnEvent 0006                _INTCONbits 000FF2  
     setVolume@volume_map 0017               ??_setVolume 0014              FMfrequenc@cn 0018  
             _FMready$575 000E          ?_previousChannel 0001               _SSPCON1bits 000FC6  
             _SSPCON2bits 000FC5                _FMfrequenc 0848            butnEvent@c_507 0009  
          butnEvent@c_524 000F            butnEvent@c_516 000B            butnEvent@c_517 000D  
