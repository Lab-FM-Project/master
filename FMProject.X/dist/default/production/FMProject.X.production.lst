

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Feb 16 14:29:21 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	smallconst
    29  000300                     __psmallconst:
    30                           	opt stack 0
    31  000300  00                 	db	0
    32  000301                     _regDflt:
    33                           	opt stack 0
    34  000301  FFFF               	dw	65535
    35  000303  5B15               	dw	23317
    36  000305  D0B9               	dw	53433
    37  000307  A010               	dw	40976
    38  000309  0780               	dw	1920
    39  00030B  28AB               	dw	10411
    40  00030D  6400               	dw	25600
    41  00030F  1EE7               	dw	7911
    42  000311  7141               	dw	28993
    43  000313  007D               	dw	125
    44  000315  82C6               	dw	33478
    45  000317  4F55               	dw	20309
    46  000319  970C               	dw	38668
    47  00031B  B845               	dw	47173
    48  00031D  FC2D               	dw	64557
    49  00031F  8097               	dw	32919
    50  000321  04A1               	dw	1185
    51  000323  DF6A               	dw	57194
    52  000325                     __end_of_regDflt:
    53                           	opt stack 0
    54  0000                     _LCDCON	set	3929
    55  0000                     _LCDPS	set	3928
    56  0000                     _LCDSE0	set	3930
    57  0000                     _LCDSE1	set	3931
    58  0000                     _LCDSE2	set	3932
    59  0000                     _LCDSE3	set	3933
    60  0000                     _ADCON1	set	4033
    61  0000                     _INTCONbits	set	4082
    62  0000                     _OSCCON	set	4051
    63  0000                     _PIR1bits	set	3998
    64  0000                     _PORTA	set	3968
    65  0000                     _PORTB	set	3969
    66  0000                     _PORTC	set	3970
    67  0000                     _SSPADD	set	4040
    68  0000                     _SSPBUF	set	4041
    69  0000                     _SSPCON1	set	4038
    70  0000                     _SSPCON1bits	set	4038
    71  0000                     _SSPCON2	set	4037
    72  0000                     _SSPCON2bits	set	4037
    73  0000                     _SSPSTAT	set	4039
    74  0000                     _SSPSTATbits	set	4039
    75  0000                     _T0CON	set	4053
    76  0000                     _T0CONbits	set	4053
    77  0000                     _TMR0H	set	4055
    78  0000                     _TMR0L	set	4054
    79  0000                     _TRISA	set	3986
    80  0000                     _TRISB	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISG	set	3992
    84  0000                     _LCDDATA0	set	3936
    85                           
    86                           ; #config settings
    87  000325  00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           	psect	cinit
    90  000714                     __pcinit:
    91                           	opt stack 0
    92  000714                     start_initialization:
    93                           	opt stack 0
    94  000714                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (36 bytes)
    98  000714  EE00  F001         	lfsr	0,__pbssCOMRAM
    99  000718  0E24               	movlw	36
   100  00071A                     clear_0:
   101  00071A  6AEE               	clrf	postinc0,c
   102  00071C  06E8               	decf	wreg,f,c
   103  00071E  E1FD               	bnz	clear_0
   104  000720                     end_of_initialization:
   105                           	opt stack 0
   106  000720                     __end_of__initialization:
   107                           	opt stack 0
   108  000720  0E00               	movlw	low (__Lmediumconst shr (0+16))
   109  000722  6EF8               	movwf	tblptru,c
   110  000724  0100               	movlb	0
   111  000726  EF9C  F002         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt stack 0
   119  000001                     _regImg:
   120                           	opt stack 0
   121  000001                     	ds	36
   122                           tblptru	equ	0xFF8
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           
   126                           	psect	cstackCOMRAM
   127  000025                     __pcstackCOMRAM:
   128                           	opt stack 0
   129  000025                     ??_IdleI2C:
   130  000025                     OpenI2C@slew:
   131                           	opt stack 0
   132  000025                     butnEvent@butn:
   133                           	opt stack 0
   134  000025                     dly@d:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000025                     	ds	1
   139  000026                     OpenI2C@sync_mode:
   140                           	opt stack 0
   141  000026                     WriteI2C@data_out:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x1
   145  000026                     	ds	1
   146  000027                     ??_FMwrite:
   147  000027                     dly@i:
   148                           	opt stack 0
   149  000027                     FMread@data:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x2
   153  000027                     	ds	2
   154  000029                     ??_FMread:
   155  000029                     FMwrite@firstByt:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x4
   159  000029                     	ds	1
   160  00002A                     FMwrite@secndByt:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164  00002A                     	ds	1
   165  00002B                     FMwrite@adr:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x6
   169  00002B                     	ds	2
   170  00002D                     FMread@regAddr:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x8
   174  00002D                     	ds	1
   175  00002E                     FMread@firstByt:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x9
   179  00002E                     	ds	1
   180  00002F                     FMread@secndByt:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0xA
   184  00002F                     	ds	1
   185  000030                     FMready@rdy:
   186                           	opt stack 0
   187  000030                     FMvers@vsn:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0xB
   191  000030                     	ds	2
   192  000032                     ??_FMready:
   193  000032                     
   194                           ; 1 bytes @ 0xD
   195  000032                     	ds	2
   196  000034                     FMready@sts:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xF
   200  000034                     	ds	2
   201  000036                     FMinit@dat:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x11
   205  000036                     	ds	2
   206  000038                     FMinit@ad:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x13
   210  000038                     	ds	1
   211  000039                     main@evt:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x14
   215  000039                     	ds	1
   216  00003A                     main@btn:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x15
   220  00003A                     	ds	1
   221  00003B                     main@ui:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x16
   225  00003B                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 465 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  ui              2   22[COMRAM] unsigned int 
   240 ;;  btn             1   21[COMRAM] unsigned char 
   241 ;;  evt             1   20[COMRAM] unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   251 ;;      Params:         0       0       0       0
   252 ;;      Locals:         4       0       0       0
   253 ;;      Temps:          0       0       0       0
   254 ;;      Totals:         4       0       0       0
   255 ;;Total ram usage:        4 bytes
   256 ;; Hardware stack levels required when called:    5
   257 ;; This function calls:
   258 ;;		_FMinit
   259 ;;		_FMvers
   260 ;;		_Init
   261 ;;		_butnEvent
   262 ;;		_dly
   263 ;;		_errfm
   264 ;;		_nextChan
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271  000538                     __ptext0:
   272                           	opt stack 0
   273  000538                     _main:
   274                           	opt stack 26
   275                           
   276                           ;main.c: 467: unsigned char btn;
   277                           ;main.c: 468: unsigned char evt;
   278                           ;main.c: 469: unsigned int ui;
   279                           ;main.c: 471: dly(20);
   280                           
   281                           ;incstack = 0
   282  000538  0E00               	movlw	0
   283  00053A  6E26               	movwf	dly@d+1,c
   284  00053C  0E14               	movlw	20
   285  00053E  6E25               	movwf	dly@d,c
   286  000540  EC54  F003         	call	_dly	;wreg free
   287                           
   288                           ;main.c: 472: Init();
   289  000544  ECD2  F002         	call	_Init	;wreg free
   290                           
   291                           ;main.c: 473: FMvers(&ui);
   292  000548  0E3B               	movlw	low main@ui
   293  00054A  6E30               	movwf	FMvers@vsn,c
   294  00054C  0E00               	movlw	high main@ui
   295  00054E  6E31               	movwf	FMvers@vsn+1,c
   296  000550  EC9E  F003         	call	_FMvers	;wreg free
   297                           
   298                           ;main.c: 474: if (ui != 0x1010) errfm();
   299  000554  0E10               	movlw	16
   300  000556  183B               	xorwf	main@ui,w,c
   301  000558  E103               	bnz	u730
   302  00055A  0E10               	movlw	16
   303  00055C  183C               	xorwf	main@ui+1,w,c
   304  00055E  A4D8               	btfss	status,2,c
   305  000560                     u730:
   306  000560  ECA9  F003         	call	_errfm	;wreg free
   307                           
   308                           ;main.c: 475: if (FMinit() != 0) errfm();
   309  000564  ECF8  F001         	call	_FMinit	;wreg free
   310  000568  0900               	iorlw	0
   311  00056A  A4D8               	btfss	status,2,c
   312  00056C  ECA9  F003         	call	_errfm	;wreg free
   313  000570                     l1382:
   314                           
   315                           ;main.c: 477: evt = butnEvent(&btn);
   316  000570  0E3A               	movlw	low main@btn
   317  000572  6E25               	movwf	butnEvent@butn,c
   318  000574  0E00               	movlw	high main@btn
   319  000576  6E26               	movwf	butnEvent@butn+1,c
   320  000578  ECA6  F003         	call	_butnEvent	;wreg free
   321  00057C  6E39               	movwf	main@evt,c
   322                           
   323                           ;main.c: 478: if (evt == 1) switch (btn) {
   324  00057E  0439               	decf	main@evt,w,c
   325  000580  B4D8               	btfsc	status,2,c
   326  000582  D008               	goto	l1392
   327  000584  D7F5               	goto	l1382
   328  000586                     l1386:
   329  000586  0E01               	movlw	1
   330  000588  ECA8  F003         	call	_nextChan
   331  00058C  D7F1               	goto	l1382
   332  00058E                     l1388:
   333  00058E  ECA9  F003         	call	_errfm	;wreg free
   334                           
   335                           ;main.c: 485: }
   336                           
   337                           ;main.c: 484: default : break;
   338  000592  D7EE               	goto	l1382
   339  000594                     l1392:
   340  000594  503A               	movf	main@btn,w,c
   341                           
   342                           ; Switch size 1, requested type "space"
   343                           ; Number of cases is 2, Range of values is 1 to 128
   344                           ; switch strategies available:
   345                           ; Name         Instructions Cycles
   346                           ; simple_byte            7     4 (average)
   347                           ;	Chosen strategy is simple_byte
   348  000596  0A01               	xorlw	1	; case 1
   349  000598  B4D8               	btfsc	status,2,c
   350  00059A  D7F5               	goto	l1386
   351  00059C  0A81               	xorlw	129	; case 128
   352  00059E  B4D8               	btfsc	status,2,c
   353  0005A0  D7F6               	goto	l1388
   354                           
   355                           ;main.c: 486: }
   356  0005A2  D7E6               	goto	l1382
   357  0005A4                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           status	equ	0xFD8
   363                           
   364 ;; *************** function _nextChan *****************
   365 ;; Defined at:
   366 ;;		line 421 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  up              1    wreg     unsigned char 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  up              1    0[COMRAM] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      unsigned char 
   373 ;; Registers used:
   374 ;;		wreg
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   380 ;;      Params:         0       0       0       0
   381 ;;      Locals:         0       0       0       0
   382 ;;      Temps:          0       0       0       0
   383 ;;      Totals:         0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text1
   394  000750                     __ptext1:
   395                           	opt stack 0
   396  000750                     _nextChan:
   397                           	opt stack 30
   398                           
   399                           ;main.c: 424: return 0;
   400                           ;	Return value of _nextChan is never used
   401                           
   402                           ;incstack = 0
   403  000750  0012               	return		;funcret
   404  000752                     __end_of_nextChan:
   405                           	opt stack 0
   406                           tblptru	equ	0xFF8
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           status	equ	0xFD8
   410                           
   411 ;; *************** function _errfm *****************
   412 ;; Defined at:
   413 ;;		line 439 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		None
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   427 ;;      Params:         0       0       0       0
   428 ;;      Locals:         0       0       0       0
   429 ;;      Temps:          0       0       0       0
   430 ;;      Totals:         0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441  000752                     __ptext2:
   442                           	opt stack 0
   443  000752                     _errfm:
   444                           	opt stack 30
   445  000752                     l154:
   446  000752  D7FF               	goto	l154
   447  000754                     __end_of_errfm:
   448                           	opt stack 0
   449                           tblptru	equ	0xFF8
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _butnEvent *****************
   455 ;; Defined at:
   456 ;;		line 85 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  butn            2    0[COMRAM] PTR unsigned char 
   459 ;;		 -> main@btn(1), 
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      unsigned char 
   464 ;; Registers used:
   465 ;;		wreg
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   471 ;;      Params:         2       0       0       0
   472 ;;      Locals:         0       0       0       0
   473 ;;      Temps:          0       0       0       0
   474 ;;      Totals:         2       0       0       0
   475 ;;Total ram usage:        2 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text3
   485  00074C                     __ptext3:
   486                           	opt stack 0
   487  00074C                     _butnEvent:
   488                           	opt stack 30
   489                           
   490                           ;main.c: 87: ;
   491                           ;main.c: 88: return 0;
   492                           
   493                           ;incstack = 0
   494  00074C  0E00               	movlw	0
   495  00074E  0012               	return	
   496  000750                     __end_of_butnEvent:
   497                           	opt stack 0
   498                           tblptru	equ	0xFF8
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _Init *****************
   504 ;; Defined at:
   505 ;;		line 125 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  i               2    0        int 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   519 ;;      Params:         0       0       0       0
   520 ;;      Locals:         0       0       0       0
   521 ;;      Temps:          0       0       0       0
   522 ;;      Totals:         0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    1
   526 ;; This function calls:
   527 ;;		_OpenI2C
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text4
   534  0005A4                     __ptext4:
   535                           	opt stack 0
   536  0005A4                     _Init:
   537                           	opt stack 29
   538                           
   539                           ;main.c: 127: int i;
   540                           ;main.c: 129: OSCCON = 0b01110010;
   541                           
   542                           ;incstack = 0
   543  0005A4  0E72               	movlw	114
   544  0005A6  6ED3               	movwf	4051,c	;volatile
   545                           
   546                           ;main.c: 130: LCDSE0 = 0b11111111;
   547  0005A8  010F               	movlb	15	; () banked
   548  0005AA  695A               	setf	90,b	;volatile
   549                           
   550                           ; BSR set to: 15
   551                           ;main.c: 131: LCDSE1 = 0b11111111;
   552  0005AC  010F               	movlb	15	; () banked
   553  0005AE  695B               	setf	91,b	;volatile
   554                           
   555                           ; BSR set to: 15
   556                           ;main.c: 132: LCDSE2 = 0b11111111;
   557  0005B0  010F               	movlb	15	; () banked
   558  0005B2  695C               	setf	92,b	;volatile
   559                           
   560                           ;main.c: 133: LCDSE3 = 0b00000000;
   561  0005B4  0E00               	movlw	0
   562  0005B6  010F               	movlb	15	; () banked
   563  0005B8  6F5D               	movwf	93,b	;volatile
   564                           
   565                           ;main.c: 134: LCDCON = 0b10001000;
   566  0005BA  0E88               	movlw	136
   567  0005BC  010F               	movlb	15	; () banked
   568  0005BE  6F59               	movwf	89,b	;volatile
   569                           
   570                           ;main.c: 135: LCDPS = 0b00110110;
   571  0005C0  0E36               	movlw	54
   572  0005C2  010F               	movlb	15	; () banked
   573  0005C4  6F58               	movwf	88,b	;volatile
   574                           
   575                           ;main.c: 136: ADCON1 = 0b00111111;
   576  0005C6  0E3F               	movlw	63
   577  0005C8  6EC1               	movwf	4033,c	;volatile
   578                           
   579                           ;main.c: 137: TRISA = 0b00000011;
   580  0005CA  0E03               	movlw	3
   581  0005CC  6E92               	movwf	3986,c	;volatile
   582                           
   583                           ;main.c: 138: TRISB = 0b00100001;
   584  0005CE  0E21               	movlw	33
   585  0005D0  6E93               	movwf	3987,c	;volatile
   586                           
   587                           ;main.c: 139: TRISC = 0b00011000;
   588  0005D2  0E18               	movlw	24
   589  0005D4  6E94               	movwf	3988,c	;volatile
   590                           
   591                           ; BSR set to: 15
   592                           ;main.c: 140: TRISG = 0b11111111;
   593  0005D6  6898               	setf	3992,c	;volatile
   594                           
   595                           ;main.c: 141: PORTA = 0;
   596  0005D8  0E00               	movlw	0
   597  0005DA  6E80               	movwf	3968,c	;volatile
   598                           
   599                           ;main.c: 142: PORTB = 0;
   600  0005DC  0E00               	movlw	0
   601  0005DE  6E81               	movwf	3969,c	;volatile
   602                           
   603                           ;main.c: 143: PORTC = 0;
   604  0005E0  0E00               	movlw	0
   605  0005E2  6E82               	movwf	3970,c	;volatile
   606                           
   607                           ; BSR set to: 15
   608                           ;main.c: 144: INTCONbits.TMR0IF = 0;
   609  0005E4  94F2               	bcf	intcon,2,c	;volatile
   610                           
   611                           ;main.c: 146: T0CON = 0b00001000;
   612  0005E6  0E08               	movlw	8
   613  0005E8  6ED5               	movwf	4053,c	;volatile
   614                           
   615                           ;main.c: 147: TMR0H = 0;
   616  0005EA  0E00               	movlw	0
   617  0005EC  6ED7               	movwf	4055,c	;volatile
   618                           
   619                           ;main.c: 148: TMR0L = 0;
   620  0005EE  0E00               	movlw	0
   621  0005F0  6ED6               	movwf	4054,c	;volatile
   622                           
   623                           ; BSR set to: 15
   624                           ;main.c: 149: T0CONbits.TMR0ON = 1;
   625  0005F2  8ED5               	bsf	4053,7,c	;volatile
   626                           
   627                           ; BSR set to: 15
   628                           ;main.c: 150: OpenI2C( 0b00001000, 0b10000000);
   629  0005F4  0E80               	movlw	128
   630  0005F6  6E25               	movwf	OpenI2C@slew,c
   631  0005F8  0E08               	movlw	8
   632  0005FA  EC6D  F003         	call	_OpenI2C
   633                           
   634                           ;main.c: 151: SSPADD = 0x3F;
   635  0005FE  0E3F               	movlw	63
   636  000600  6EC8               	movwf	4040,c	;volatile
   637  000602  0012               	return		;funcret
   638  000604                     __end_of_Init:
   639                           	opt stack 0
   640                           tblptru	equ	0xFF8
   641                           intcon	equ	0xFF2
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function _OpenI2C *****************
   647 ;; Defined at:
   648 ;;		line 14 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_open.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  sync_mode       1    wreg     unsigned char 
   651 ;;  slew            1    0[COMRAM] unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  sync_mode       1    1[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   663 ;;      Params:         1       0       0       0
   664 ;;      Locals:         1       0       0       0
   665 ;;      Temps:          0       0       0       0
   666 ;;      Totals:         2       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_Init
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text5
   677  0006DA                     __ptext5:
   678                           	opt stack 0
   679  0006DA                     _OpenI2C:
   680                           	opt stack 29
   681                           
   682                           ;incstack = 0
   683                           ;OpenI2C@sync_mode stored from wreg
   684  0006DA  6E26               	movwf	OpenI2C@sync_mode,c
   685  0006DC  0E3F               	movlw	63
   686  0006DE  16C7               	andwf	4039,f,c	;volatile
   687  0006E0  0E00               	movlw	0
   688  0006E2  6EC6               	movwf	4038,c	;volatile
   689  0006E4  0E00               	movlw	0
   690  0006E6  6EC5               	movwf	4037,c	;volatile
   691  0006E8  5026               	movf	OpenI2C@sync_mode,w,c
   692  0006EA  12C6               	iorwf	4038,f,c	;volatile
   693  0006EC  5025               	movf	OpenI2C@slew,w,c
   694  0006EE  12C7               	iorwf	4039,f,c	;volatile
   695  0006F0  8694               	bsf	3988,3,c	;volatile
   696  0006F2  8894               	bsf	3988,4,c	;volatile
   697  0006F4  8AC6               	bsf	4038,5,c	;volatile
   698  0006F6  0012               	return		;funcret
   699  0006F8                     __end_of_OpenI2C:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           intcon	equ	0xFF2
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           status	equ	0xFD8
   706                           
   707 ;; *************** function _FMvers *****************
   708 ;; Defined at:
   709 ;;		line 384 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  vsn             2   11[COMRAM] PTR unsigned int 
   712 ;;		 -> main@ui(2), 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   724 ;;      Params:         2       0       0       0
   725 ;;      Locals:         0       0       0       0
   726 ;;      Temps:          0       0       0       0
   727 ;;      Totals:         2       0       0       0
   728 ;;Total ram usage:        2 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    3
   731 ;; This function calls:
   732 ;;		_FMread
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text6
   739  00073C                     __ptext6:
   740                           	opt stack 0
   741  00073C                     _FMvers:
   742                           	opt stack 27
   743                           
   744                           ;main.c: 385: if (FMread(0x1C, vsn) != 0) return 1;
   745                           
   746                           ;incstack = 0
   747  00073C  C030  F027         	movff	FMvers@vsn,FMread@data
   748  000740  C031  F028         	movff	FMvers@vsn+1,FMread@data+1
   749  000744  0E1C               	movlw	28
   750  000746  EC93  F001         	call	_FMread
   751                           
   752                           ;	Return value of _FMvers is never used
   753  00074A  0012               	return	
   754  00074C                     __end_of_FMvers:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           intcon	equ	0xFF2
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           status	equ	0xFD8
   761                           
   762 ;; *************** function _FMinit *****************
   763 ;; Defined at:
   764 ;;		line 312 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  dat             2   17[COMRAM] unsigned int 
   769 ;;  ad              1   19[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      unsigned char 
   772 ;; Registers used:
   773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   779 ;;      Params:         0       0       0       0
   780 ;;      Locals:         3       0       0       0
   781 ;;      Temps:          0       0       0       0
   782 ;;      Totals:         3       0       0       0
   783 ;;Total ram usage:        3 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    4
   786 ;; This function calls:
   787 ;;		_FMready
   788 ;;		_FMwrite
   789 ;;		_dly
   790 ;;		_showFreq
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text7
   797  0003F0                     __ptext7:
   798                           	opt stack 0
   799  0003F0                     _FMinit:
   800                           	opt stack 26
   801                           
   802                           ;main.c: 314: unsigned char ad;
   803                           ;main.c: 315: unsigned int dat;
   804                           ;main.c: 318: for(ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
   805                           
   806                           ;incstack = 0
   807  0003F0  0E00               	movlw	0
   808  0003F2  6E38               	movwf	FMinit@ad,c
   809  0003F4                     l1284:
   810  0003F4  0E11               	movlw	17
   811  0003F6  6438               	cpfsgt	FMinit@ad,c
   812  0003F8  D001               	goto	l1288
   813  0003FA  D018               	goto	l123
   814  0003FC                     l1288:
   815  0003FC  5038               	movf	FMinit@ad,w,c
   816  0003FE  0D02               	mullw	2
   817  000400  0E01               	movlw	low _regDflt
   818  000402  24F3               	addwf	prodl,w,c
   819  000404  6EF6               	movwf	tblptrl,c
   820  000406  0E03               	movlw	high _regDflt
   821  000408  20F4               	addwfc	prodh,w,c
   822  00040A  6EF7               	movwf	tblptrh,c
   823  00040C                     	if	0	;There are less than 3 active tblptr bytes
   824  00040C                     	endif
   825  00040C  5038               	movf	FMinit@ad,w,c
   826  00040E  0D02               	mullw	2
   827  000410  0E01               	movlw	low _regImg
   828  000412  24F3               	addwf	prodl,w,c
   829  000414  6ED9               	movwf	fsr2l,c
   830  000416  0E00               	movlw	high _regImg
   831  000418  20F4               	addwfc	prodh,w,c
   832  00041A  6EDA               	movwf	fsr2h,c
   833  00041C  0009               	tblrd		*+
   834  00041E  CFF5 FFDE          	movff	tablat,postinc2
   835  000422  0008               	tblrd		*
   836  000424  CFF5 FFDD          	movff	tablat,postdec2
   837  000428  2A38               	incf	FMinit@ad,f,c
   838  00042A  D7E4               	goto	l1284
   839  00042C                     l123:
   840                           
   841                           ;main.c: 320: dat = regImg[0];
   842  00042C  C001  F036         	movff	_regImg,FMinit@dat
   843  000430  C002  F037         	movff	_regImg+1,FMinit@dat+1
   844                           
   845                           ;main.c: 321: regImg[0] &= ~1;
   846  000434  9001               	bcf	_regImg,0,c
   847                           
   848                           ;main.c: 322: if (FMwrite(0) != 0) return 1;
   849  000436  0E00               	movlw	0
   850  000438  EC5B  F002         	call	_FMwrite
   851  00043C  0900               	iorlw	0
   852  00043E  B4D8               	btfsc	status,2,c
   853  000440  D002               	goto	l1302
   854  000442  0E01               	movlw	1
   855  000444  0012               	return	
   856  000446                     l1302:
   857                           
   858                           ;main.c: 323: for(ad = 1; ad < 18; ad++) {
   859  000446  0E01               	movlw	1
   860  000448  6E38               	movwf	FMinit@ad,c
   861  00044A                     l1304:
   862  00044A  0E11               	movlw	17
   863  00044C  6438               	cpfsgt	FMinit@ad,c
   864  00044E  D001               	goto	l1308
   865  000450  D00A               	goto	l1318
   866  000452                     l1308:
   867                           
   868                           ;main.c: 324: if (FMwrite(ad) != 0)return 1;
   869  000452  5038               	movf	FMinit@ad,w,c
   870  000454  EC5B  F002         	call	_FMwrite
   871  000458  0900               	iorlw	0
   872  00045A  B4D8               	btfsc	status,2,c
   873  00045C  D002               	goto	l1314
   874  00045E  0E01               	movlw	1
   875  000460  0012               	return	
   876  000462                     l1314:
   877  000462  2A38               	incf	FMinit@ad,f,c
   878  000464  D7F2               	goto	l1304
   879  000466                     l1318:
   880                           
   881                           ;main.c: 325: }
   882                           ;main.c: 327: regImg[0] = dat | 1;
   883  000466  0E01               	movlw	1
   884  000468  1036               	iorwf	FMinit@dat,w,c
   885  00046A  6E01               	movwf	_regImg,c
   886  00046C  5037               	movf	FMinit@dat+1,w,c
   887  00046E  6E02               	movwf	_regImg+1,c
   888                           
   889                           ;main.c: 328: if (FMwrite(0) != 0) return 1;
   890  000470  0E00               	movlw	0
   891  000472  EC5B  F002         	call	_FMwrite
   892  000476  0900               	iorlw	0
   893  000478  B4D8               	btfsc	status,2,c
   894  00047A  D002               	goto	l1326
   895  00047C  0E01               	movlw	1
   896  00047E  0012               	return	
   897  000480                     l1326:
   898                           
   899                           ;main.c: 329: dly(20);
   900  000480  0E00               	movlw	0
   901  000482  6E26               	movwf	dly@d+1,c
   902  000484  0E14               	movlw	20
   903  000486  6E25               	movwf	dly@d,c
   904  000488  EC54  F003         	call	_dly	;wreg free
   905                           
   906                           ;main.c: 330: while (FMready(&dat), !dat) dly(2);
   907  00048C  D006               	goto	l1330
   908  00048E                     l1328:
   909  00048E  0E00               	movlw	0
   910  000490  6E26               	movwf	dly@d+1,c
   911  000492  0E02               	movlw	2
   912  000494  6E25               	movwf	dly@d,c
   913  000496  EC54  F003         	call	_dly	;wreg free
   914  00049A                     l1330:
   915  00049A  0E36               	movlw	low FMinit@dat
   916  00049C  6E30               	movwf	FMready@rdy,c
   917  00049E  0E00               	movlw	high FMinit@dat
   918  0004A0  6E31               	movwf	FMready@rdy+1,c
   919  0004A2  EC31  F003         	call	_FMready	;wreg free
   920  0004A6  5036               	movf	FMinit@dat,w,c
   921  0004A8  1037               	iorwf	FMinit@dat+1,w,c
   922  0004AA  B4D8               	btfsc	status,2,c
   923  0004AC  D7F0               	goto	l1328
   924                           
   925                           ;main.c: 331: showFreq();
   926  0004AE  ECAA  F003         	call	_showFreq	;wreg free
   927                           
   928                           ;main.c: 332: return 0;
   929  0004B2  0E00               	movlw	0
   930  0004B4  0012               	return	
   931  0004B6                     __end_of_FMinit:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           intcon	equ	0xFF2
   940                           postinc0	equ	0xFEE
   941                           wreg	equ	0xFE8
   942                           postinc2	equ	0xFDE
   943                           postdec2	equ	0xFDD
   944                           fsr2h	equ	0xFDA
   945                           fsr2l	equ	0xFD9
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function _showFreq *****************
   949 ;; Defined at:
   950 ;;		line 455 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      unsigned char 
   957 ;; Registers used:
   958 ;;		None
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   964 ;;      Params:         0       0       0       0
   965 ;;      Locals:         0       0       0       0
   966 ;;      Temps:          0       0       0       0
   967 ;;      Totals:         0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_FMinit
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text8
   978  000754                     __ptext8:
   979                           	opt stack 0
   980  000754                     _showFreq:
   981                           	opt stack 29
   982                           
   983                           ;main.c: 457: ;
   984                           ;main.c: 458: return 0;
   985                           ;	Return value of _showFreq is never used
   986                           
   987                           ;incstack = 0
   988  000754  0012               	return		;funcret
   989  000756                     __end_of_showFreq:
   990                           	opt stack 0
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           prodh	equ	0xFF4
   996                           prodl	equ	0xFF3
   997                           intcon	equ	0xFF2
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           postinc2	equ	0xFDE
  1001                           postdec2	equ	0xFDD
  1002                           fsr2h	equ	0xFDA
  1003                           fsr2l	equ	0xFD9
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _dly *****************
  1007 ;; Defined at:
  1008 ;;		line 94 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  d               2    0[COMRAM] int 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  i               2    2[COMRAM] int 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1022 ;;      Params:         2       0       0       0
  1023 ;;      Locals:         2       0       0       0
  1024 ;;      Temps:          0       0       0       0
  1025 ;;      Totals:         4       0       0       0
  1026 ;;Total ram usage:        4 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_FMinit
  1032 ;;		_main
  1033 ;;		_FMfrequenc
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text9
  1038  0006A8                     __ptext9:
  1039                           	opt stack 0
  1040  0006A8                     _dly:
  1041                           	opt stack 30
  1042                           
  1043                           ;main.c: 96: int i = 0;
  1044                           
  1045                           ;incstack = 0
  1046  0006A8  0E00               	movlw	0
  1047  0006AA  6E28               	movwf	dly@i+1,c
  1048  0006AC  0E00               	movlw	0
  1049  0006AE  6E27               	movwf	dly@i,c
  1050                           
  1051                           ;main.c: 98: for ( ; d; --d)
  1052  0006B0  D00F               	goto	l1232
  1053  0006B2                     l1224:
  1054                           
  1055                           ;main.c: 99: for (i = 100; i; --i) ;
  1056  0006B2  0E00               	movlw	0
  1057  0006B4  6E28               	movwf	dly@i+1,c
  1058  0006B6  0E64               	movlw	100
  1059  0006B8  6E27               	movwf	dly@i,c
  1060  0006BA  D003               	goto	l1228
  1061  0006BC                     l1226:
  1062  0006BC  0627               	decf	dly@i,f,c
  1063  0006BE  A0D8               	btfss	status,0,c
  1064  0006C0  0628               	decf	dly@i+1,f,c
  1065  0006C2                     l1228:
  1066  0006C2  5027               	movf	dly@i,w,c
  1067  0006C4  1028               	iorwf	dly@i+1,w,c
  1068  0006C6  A4D8               	btfss	status,2,c
  1069  0006C8  D7F9               	goto	l1226
  1070  0006CA  0625               	decf	dly@d,f,c
  1071  0006CC  A0D8               	btfss	status,0,c
  1072  0006CE  0626               	decf	dly@d+1,f,c
  1073  0006D0                     l1232:
  1074  0006D0  5025               	movf	dly@d,w,c
  1075  0006D2  1026               	iorwf	dly@d+1,w,c
  1076  0006D4  B4D8               	btfsc	status,2,c
  1077  0006D6  0012               	return	
  1078  0006D8  D7EC               	goto	l1224
  1079  0006DA                     __end_of_dly:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postinc2	equ	0xFDE
  1091                           postdec2	equ	0xFDD
  1092                           fsr2h	equ	0xFDA
  1093                           fsr2l	equ	0xFD9
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _FMwrite *****************
  1097 ;; Defined at:
  1098 ;;		line 197 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  adr             1    wreg     unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  adr             1    6[COMRAM] unsigned char 
  1103 ;;  regstr          2    0        unsigned int 
  1104 ;;  secndByt        1    5[COMRAM] unsigned char 
  1105 ;;  firstByt        1    4[COMRAM] unsigned char 
  1106 ;;  rpy             1    0        unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      unsigned char 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1116 ;;      Params:         0       0       0       0
  1117 ;;      Locals:         3       0       0       0
  1118 ;;      Temps:          2       0       0       0
  1119 ;;      Totals:         5       0       0       0
  1120 ;;Total ram usage:        5 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		_IdleI2C
  1125 ;;		_WriteI2C
  1126 ;; This function is called by:
  1127 ;;		_FMinit
  1128 ;;		_FMfrequenc
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text10
  1133  0004B6                     __ptext10:
  1134                           	opt stack 0
  1135  0004B6                     _FMwrite:
  1136                           	opt stack 27
  1137                           
  1138                           ;incstack = 0
  1139                           ;FMwrite@adr stored from wreg
  1140  0004B6  6E2B               	movwf	FMwrite@adr,c
  1141                           
  1142                           ;main.c: 199: unsigned int regstr;
  1143                           ;main.c: 200: unsigned char firstByt;
  1144                           ;main.c: 201: unsigned char secndByt;
  1145                           ;main.c: 202: unsigned char rpy;
  1146                           ;main.c: 204: firstByt = regImg[adr] >> 8;
  1147  0004B8  502B               	movf	FMwrite@adr,w,c
  1148  0004BA  0D02               	mullw	2
  1149  0004BC  0E01               	movlw	low _regImg
  1150  0004BE  24F3               	addwf	prodl,w,c
  1151  0004C0  6ED9               	movwf	fsr2l,c
  1152  0004C2  0E00               	movlw	high _regImg
  1153  0004C4  20F4               	addwfc	prodh,w,c
  1154  0004C6  6EDA               	movwf	fsr2h,c
  1155  0004C8  CFDE F027          	movff	postinc2,??_FMwrite
  1156  0004CC  CFDD F028          	movff	postdec2,??_FMwrite+1
  1157  0004D0  C028  F027         	movff	??_FMwrite+1,??_FMwrite
  1158  0004D4  6A28               	clrf	??_FMwrite+1,c
  1159  0004D6  5027               	movf	??_FMwrite,w,c
  1160  0004D8  6E29               	movwf	FMwrite@firstByt,c
  1161                           
  1162                           ;main.c: 205: secndByt = regImg[adr];
  1163  0004DA  502B               	movf	FMwrite@adr,w,c
  1164  0004DC  0D02               	mullw	2
  1165  0004DE  0E01               	movlw	low _regImg
  1166  0004E0  24F3               	addwf	prodl,w,c
  1167  0004E2  6ED9               	movwf	fsr2l,c
  1168  0004E4  0E00               	movlw	high _regImg
  1169  0004E6  20F4               	addwfc	prodh,w,c
  1170  0004E8  6EDA               	movwf	fsr2h,c
  1171  0004EA  50DF               	movf	indf2,w,c
  1172  0004EC  6E2A               	movwf	FMwrite@secndByt,c
  1173                           
  1174                           ;main.c: 207: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1175  0004EE  80C5               	bsf	4037,0,c	;volatile
  1176  0004F0                     l89:
  1177  0004F0  B0C5               	btfsc	4037,0,c	;volatile
  1178  0004F2  D7FE               	goto	l89
  1179                           
  1180                           ;main.c: 208: IdleI2C();
  1181  0004F4  EC95  F003         	call	_IdleI2C	;wreg free
  1182                           
  1183                           ;main.c: 211: if (WriteI2C(0x20)) return 1;
  1184  0004F8  0E20               	movlw	32
  1185  0004FA  EC02  F003         	call	_WriteI2C
  1186  0004FE  0900               	iorlw	0
  1187  000500  B4D8               	btfsc	status,2,c
  1188  000502  D002               	goto	l992
  1189  000504  0E01               	movlw	1
  1190  000506  0012               	return	
  1191  000508                     l992:
  1192                           
  1193                           ;main.c: 212: IdleI2C();
  1194  000508  EC95  F003         	call	_IdleI2C	;wreg free
  1195                           
  1196                           ;main.c: 213: WriteI2C(adr);
  1197  00050C  502B               	movf	FMwrite@adr,w,c
  1198  00050E  EC02  F003         	call	_WriteI2C
  1199                           
  1200                           ;main.c: 214: IdleI2C();
  1201  000512  EC95  F003         	call	_IdleI2C	;wreg free
  1202                           
  1203                           ;main.c: 215: WriteI2C(firstByt);
  1204  000516  5029               	movf	FMwrite@firstByt,w,c
  1205  000518  EC02  F003         	call	_WriteI2C
  1206                           
  1207                           ;main.c: 216: IdleI2C();
  1208  00051C  EC95  F003         	call	_IdleI2C	;wreg free
  1209                           
  1210                           ;main.c: 217: WriteI2C(secndByt);
  1211  000520  502A               	movf	FMwrite@secndByt,w,c
  1212  000522  EC02  F003         	call	_WriteI2C
  1213                           
  1214                           ;main.c: 218: IdleI2C();
  1215  000526  EC95  F003         	call	_IdleI2C	;wreg free
  1216                           
  1217                           ;main.c: 219: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1218  00052A  84C5               	bsf	4037,2,c	;volatile
  1219  00052C                     l94:
  1220  00052C  B4C5               	btfsc	4037,2,c	;volatile
  1221  00052E  D7FE               	goto	l94
  1222                           
  1223                           ;main.c: 220: IdleI2C();
  1224  000530  EC95  F003         	call	_IdleI2C	;wreg free
  1225                           
  1226                           ;main.c: 221: return 0;
  1227  000534  0E00               	movlw	0
  1228  000536  0012               	return	
  1229  000538                     __end_of_FMwrite:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           prodh	equ	0xFF4
  1236                           prodl	equ	0xFF3
  1237                           intcon	equ	0xFF2
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           indf2	equ	0xFDF
  1241                           postinc2	equ	0xFDE
  1242                           postdec2	equ	0xFDD
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _FMready *****************
  1248 ;; Defined at:
  1249 ;;		line 291 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  1252 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  sts             2   15[COMRAM] unsigned int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1264 ;;      Params:         2       0       0       0
  1265 ;;      Locals:         2       0       0       0
  1266 ;;      Temps:          2       0       0       0
  1267 ;;      Totals:         6       0       0       0
  1268 ;;Total ram usage:        6 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    3
  1271 ;; This function calls:
  1272 ;;		_FMread
  1273 ;; This function is called by:
  1274 ;;		_FMinit
  1275 ;;		_FMfrequenc
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text11
  1280  000662                     __ptext11:
  1281                           	opt stack 0
  1282  000662                     _FMready:
  1283                           	opt stack 26
  1284                           
  1285                           ;main.c: 293: unsigned int sts;
  1286                           ;main.c: 295: if (FMread(0x13, &sts) != 0) return 1;
  1287                           
  1288                           ;incstack = 0
  1289  000662  0E34               	movlw	low FMready@sts
  1290  000664  6E27               	movwf	FMread@data,c
  1291  000666  0E00               	movlw	high FMready@sts
  1292  000668  6E28               	movwf	FMread@data+1,c
  1293  00066A  0E13               	movlw	19
  1294  00066C  EC93  F001         	call	_FMread
  1295  000670  0900               	iorlw	0
  1296  000672  B4D8               	btfsc	status,2,c
  1297  000674  D002               	goto	l1252
  1298  000676  0E01               	movlw	1
  1299  000678  0012               	return	
  1300  00067A                     l1252:
  1301                           
  1302                           ;main.c: 296: sts &= 0x0020;
  1303  00067A  0E20               	movlw	32
  1304  00067C  1634               	andwf	FMready@sts,f,c
  1305  00067E  0E00               	movlw	0
  1306  000680  1635               	andwf	FMready@sts+1,f,c
  1307                           
  1308                           ;main.c: 297: *rdy = sts ? 1 : 0;
  1309  000682  5034               	movf	FMready@sts,w,c
  1310  000684  1035               	iorwf	FMready@sts+1,w,c
  1311  000686  B4D8               	btfsc	status,2,c
  1312  000688  D002               	goto	u590
  1313  00068A  0E01               	movlw	1
  1314  00068C  D001               	goto	u600
  1315  00068E                     u590:
  1316  00068E  0E00               	movlw	0
  1317  000690                     u600:
  1318  000690  6E32               	movwf	??_FMready& (0+255),c
  1319  000692  6A33               	clrf	(??_FMready+1)& (0+255),c
  1320  000694  C030  FFD9         	movff	FMready@rdy,fsr2l
  1321  000698  C031  FFDA         	movff	FMready@rdy+1,fsr2h
  1322  00069C  C032  FFDE         	movff	??_FMready,postinc2
  1323  0006A0  C033  FFDD         	movff	??_FMready+1,postdec2
  1324                           
  1325                           ;main.c: 298: return 0;
  1326  0006A4  0E00               	movlw	0
  1327  0006A6  0012               	return	
  1328  0006A8                     __end_of_FMready:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           prodh	equ	0xFF4
  1335                           prodl	equ	0xFF3
  1336                           intcon	equ	0xFF2
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           indf2	equ	0xFDF
  1340                           postinc2	equ	0xFDE
  1341                           postdec2	equ	0xFDD
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _FMread *****************
  1347 ;; Defined at:
  1348 ;;		line 241 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  regAddr         1    wreg     unsigned char 
  1351 ;;  data            2    2[COMRAM] PTR unsigned int 
  1352 ;;		 -> main@ui(2), FMready@sts(2), 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  regAddr         1    8[COMRAM] unsigned char 
  1355 ;;  secndByt        1   10[COMRAM] unsigned char 
  1356 ;;  firstByt        1    9[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      unsigned char 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1366 ;;      Params:         2       0       0       0
  1367 ;;      Locals:         3       0       0       0
  1368 ;;      Temps:          4       0       0       0
  1369 ;;      Totals:         9       0       0       0
  1370 ;;Total ram usage:        9 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    2
  1373 ;; This function calls:
  1374 ;;		_IdleI2C
  1375 ;;		_ReadI2C
  1376 ;;		_WriteI2C
  1377 ;; This function is called by:
  1378 ;;		_FMready
  1379 ;;		_FMvers
  1380 ;;		_FMid
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text12
  1385  000326                     __ptext12:
  1386                           	opt stack 0
  1387  000326                     _FMread:
  1388                           	opt stack 27
  1389                           
  1390                           ;incstack = 0
  1391                           ;FMread@regAddr stored from wreg
  1392  000326  6E2D               	movwf	FMread@regAddr,c
  1393                           
  1394                           ;main.c: 243: unsigned char firstByt;
  1395                           ;main.c: 244: unsigned char secndByt;
  1396                           ;main.c: 246: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1397  000328  80C5               	bsf	4037,0,c	;volatile
  1398  00032A                     l99:
  1399  00032A  B0C5               	btfsc	4037,0,c	;volatile
  1400  00032C  D7FE               	goto	l99
  1401                           
  1402                           ;main.c: 247: IdleI2C();
  1403  00032E  EC95  F003         	call	_IdleI2C	;wreg free
  1404                           
  1405                           ;main.c: 250: if (WriteI2C(0x20)) return 1;
  1406  000332  0E20               	movlw	32
  1407  000334  EC02  F003         	call	_WriteI2C
  1408  000338  0900               	iorlw	0
  1409  00033A  B4D8               	btfsc	status,2,c
  1410  00033C  D002               	goto	l1190
  1411  00033E  0E01               	movlw	1
  1412  000340  0012               	return	
  1413  000342                     l1190:
  1414                           
  1415                           ;main.c: 251: IdleI2C();
  1416  000342  EC95  F003         	call	_IdleI2C	;wreg free
  1417                           
  1418                           ;main.c: 252: WriteI2C(regAddr);
  1419  000346  502D               	movf	FMread@regAddr,w,c
  1420  000348  EC02  F003         	call	_WriteI2C
  1421                           
  1422                           ;main.c: 253: IdleI2C();
  1423  00034C  EC95  F003         	call	_IdleI2C	;wreg free
  1424                           
  1425                           ;main.c: 254: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  1426  000350  82C5               	bsf	4037,1,c	;volatile
  1427  000352                     l104:
  1428  000352  B2C5               	btfsc	4037,1,c	;volatile
  1429  000354  D7FE               	goto	l104
  1430                           
  1431                           ;main.c: 255: IdleI2C();
  1432  000356  EC95  F003         	call	_IdleI2C	;wreg free
  1433                           
  1434                           ;main.c: 256: WriteI2C(0x20 + 0x01);
  1435  00035A  0E21               	movlw	33
  1436  00035C  EC02  F003         	call	_WriteI2C
  1437                           
  1438                           ;main.c: 257: IdleI2C();
  1439  000360  EC95  F003         	call	_IdleI2C	;wreg free
  1440                           
  1441                           ;main.c: 258: firstByt = ReadI2C();
  1442  000364  EC7C  F003         	call	_ReadI2C	;wreg free
  1443  000368  6E2E               	movwf	FMread@firstByt,c
  1444                           
  1445                           ;main.c: 259: IdleI2C();
  1446  00036A  EC95  F003         	call	_IdleI2C	;wreg free
  1447                           
  1448                           ;main.c: 260: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1449  00036E  9AC5               	bcf	4037,5,c	;volatile
  1450  000370  88C5               	bsf	4037,4,c	;volatile
  1451  000372                     l107:
  1452  000372  B8C5               	btfsc	4037,4,c	;volatile
  1453  000374  D7FE               	goto	l107
  1454                           
  1455                           ;main.c: 261: IdleI2C();
  1456  000376  EC95  F003         	call	_IdleI2C	;wreg free
  1457                           
  1458                           ;main.c: 262: secndByt = ReadI2C();
  1459  00037A  EC7C  F003         	call	_ReadI2C	;wreg free
  1460  00037E  6E2F               	movwf	FMread@secndByt,c
  1461                           
  1462                           ;main.c: 263: IdleI2C();
  1463  000380  EC95  F003         	call	_IdleI2C	;wreg free
  1464                           
  1465                           ;main.c: 264: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1466  000384  8AC5               	bsf	4037,5,c	;volatile
  1467  000386  88C5               	bsf	4037,4,c	;volatile
  1468  000388                     l110:
  1469  000388  B8C5               	btfsc	4037,4,c	;volatile
  1470  00038A  D7FE               	goto	l110
  1471                           
  1472                           ;main.c: 265: IdleI2C();
  1473  00038C  EC95  F003         	call	_IdleI2C	;wreg free
  1474                           
  1475                           ;main.c: 266: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1476  000390  84C5               	bsf	4037,2,c	;volatile
  1477  000392                     l113:
  1478  000392  B4C5               	btfsc	4037,2,c	;volatile
  1479  000394  D7FE               	goto	l113
  1480                           
  1481                           ;main.c: 267: IdleI2C();
  1482  000396  EC95  F003         	call	_IdleI2C	;wreg free
  1483                           
  1484                           ;main.c: 268: *data = firstByt;
  1485  00039A  502E               	movf	FMread@firstByt,w,c
  1486  00039C  6E29               	movwf	??_FMread& (0+255),c
  1487  00039E  6A2A               	clrf	(??_FMread+1)& (0+255),c
  1488  0003A0  C027  FFD9         	movff	FMread@data,fsr2l
  1489  0003A4  C028  FFDA         	movff	FMread@data+1,fsr2h
  1490  0003A8  C029  FFDE         	movff	??_FMread,postinc2
  1491  0003AC  C02A  FFDD         	movff	??_FMread+1,postdec2
  1492                           
  1493                           ;main.c: 269: *data <<= 8;
  1494  0003B0  C027  FFD9         	movff	FMread@data,fsr2l
  1495  0003B4  C028  FFDA         	movff	FMread@data+1,fsr2h
  1496  0003B8  50DE               	movf	postinc2,w,c
  1497  0003BA  6EDD               	movwf	postdec2,c
  1498  0003BC  6ADF               	clrf	indf2,c
  1499                           
  1500                           ;main.c: 270: *data = *data | secndByt;
  1501  0003BE  C027  FFD9         	movff	FMread@data,fsr2l
  1502  0003C2  C028  FFDA         	movff	FMread@data+1,fsr2h
  1503  0003C6  CFDE F029          	movff	postinc2,??_FMread
  1504  0003CA  CFDD F02A          	movff	postdec2,??_FMread+1
  1505  0003CE  502F               	movf	FMread@secndByt,w,c
  1506  0003D0  6E2B               	movwf	(??_FMread+2)& (0+255),c
  1507  0003D2  6A2C               	clrf	(??_FMread+3)& (0+255),c
  1508  0003D4  5029               	movf	??_FMread,w,c
  1509  0003D6  122B               	iorwf	??_FMread+2,f,c
  1510  0003D8  502A               	movf	??_FMread+1,w,c
  1511  0003DA  122C               	iorwf	??_FMread+3,f,c
  1512  0003DC  C027  FFD9         	movff	FMread@data,fsr2l
  1513  0003E0  C028  FFDA         	movff	FMread@data+1,fsr2h
  1514  0003E4  C02B  FFDE         	movff	??_FMread+2,postinc2
  1515  0003E8  C02C  FFDD         	movff	??_FMread+3,postdec2
  1516                           
  1517                           ;main.c: 272: return 0;
  1518  0003EC  0E00               	movlw	0
  1519  0003EE  0012               	return	
  1520  0003F0                     __end_of_FMread:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           prodh	equ	0xFF4
  1527                           prodl	equ	0xFF3
  1528                           intcon	equ	0xFF2
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           indf2	equ	0xFDF
  1532                           postinc2	equ	0xFDE
  1533                           postdec2	equ	0xFDD
  1534                           fsr2h	equ	0xFDA
  1535                           fsr2l	equ	0xFD9
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _WriteI2C *****************
  1539 ;; Defined at:
  1540 ;;		line 12 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_writ.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  data_out        1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  data_out        1    1[COMRAM] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      char 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1554 ;;      Params:         0       0       0       0
  1555 ;;      Locals:         1       0       0       0
  1556 ;;      Temps:          0       0       0       0
  1557 ;;      Totals:         1       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    1
  1561 ;; This function calls:
  1562 ;;		_IdleI2C
  1563 ;; This function is called by:
  1564 ;;		_FMwrite
  1565 ;;		_FMread
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text13
  1570  000604                     __ptext13:
  1571                           	opt stack 0
  1572  000604                     _WriteI2C:
  1573                           	opt stack 27
  1574                           
  1575                           ;incstack = 0
  1576                           ;WriteI2C@data_out stored from wreg
  1577  000604  6E26               	movwf	WriteI2C@data_out,c
  1578  000606  C026  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1579  00060A  AEC6               	btfss	4038,7,c	;volatile
  1580  00060C  D002               	goto	l874
  1581  00060E  0EFF               	movlw	255
  1582  000610  0012               	return	
  1583  000612                     l874:
  1584  000612  50C6               	movf	4038,w,c	;volatile
  1585  000614  0B0F               	andlw	15
  1586  000616  0A08               	xorlw	8
  1587  000618  B4D8               	btfsc	status,2,c
  1588  00061A  D00F               	goto	l892
  1589  00061C  50C6               	movf	4038,w,c	;volatile
  1590  00061E  0B0F               	andlw	15
  1591  000620  0A0B               	xorlw	11
  1592  000622  B4D8               	btfsc	status,2,c
  1593  000624  D00A               	goto	l892
  1594  000626  88C6               	bsf	4038,4,c	;volatile
  1595  000628                     l231:
  1596  000628  A69E               	btfss	3998,3,c	;volatile
  1597  00062A  D7FE               	goto	l231
  1598  00062C  A4C7               	btfss	4039,2,c	;volatile
  1599  00062E  B0C7               	btfsc	4039,0,c	;volatile
  1600  000630  D002               	goto	l888
  1601  000632  0EFE               	movlw	254
  1602  000634  0012               	return	
  1603  000636                     l888:
  1604  000636  0E00               	movlw	0
  1605  000638  0012               	return	
  1606  00063A                     l892:
  1607  00063A  50C6               	movf	4038,w,c	;volatile
  1608  00063C  0B0F               	andlw	15
  1609  00063E  0A08               	xorlw	8
  1610  000640  B4D8               	btfsc	status,2,c
  1611  000642  D005               	goto	l240
  1612  000644  50C6               	movf	4038,w,c	;volatile
  1613  000646  0B0F               	andlw	15
  1614  000648  0A0B               	xorlw	11
  1615  00064A  A4D8               	btfss	status,2,c
  1616  00064C  0012               	return	
  1617  00064E                     l240:
  1618  00064E  B0C7               	btfsc	4039,0,c	;volatile
  1619  000650  D7FE               	goto	l240
  1620  000652  EC95  F003         	call	_IdleI2C	;wreg free
  1621  000656  ACC5               	btfss	4037,6,c	;volatile
  1622  000658  D002               	goto	l906
  1623  00065A  0EFE               	movlw	254
  1624  00065C  0012               	return	
  1625  00065E                     l906:
  1626  00065E  0E00               	movlw	0
  1627  000660  0012               	return	
  1628  000662                     __end_of_WriteI2C:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           intcon	equ	0xFF2
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           indf2	equ	0xFDF
  1640                           postinc2	equ	0xFDE
  1641                           postdec2	equ	0xFDD
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _IdleI2C *****************
  1647 ;; Defined at:
  1648 ;;		line 24 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_idle.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1662 ;;      Params:         0       0       0       0
  1663 ;;      Locals:         0       0       0       0
  1664 ;;      Temps:          1       0       0       0
  1665 ;;      Totals:         1       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_FMwrite
  1672 ;;		_FMread
  1673 ;;		_WriteI2C
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text14
  1678  00072A                     __ptext14:
  1679                           	opt stack 0
  1680  00072A                     _IdleI2C:
  1681                           	opt stack 27
  1682  00072A                     l860:
  1683  00072A  CFC5 F025          	movff	4037,??_IdleI2C	;volatile
  1684  00072E  0E1F               	movlw	31
  1685  000730  1625               	andwf	??_IdleI2C,f,c
  1686  000732  A4D8               	btfss	status,2,c
  1687  000734  D7FA               	goto	l860
  1688  000736  A4C7               	btfss	4039,2,c	;volatile
  1689  000738  0012               	return	
  1690  00073A  D7F7               	goto	l860
  1691  00073C                     __end_of_IdleI2C:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           indf2	equ	0xFDF
  1703                           postinc2	equ	0xFDE
  1704                           postdec2	equ	0xFDD
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _ReadI2C *****************
  1710 ;; Defined at:
  1711 ;;		line 11 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_read.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1725 ;;      Params:         0       0       0       0
  1726 ;;      Locals:         0       0       0       0
  1727 ;;      Temps:          0       0       0       0
  1728 ;;      Totals:         0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_FMread
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text15
  1739  0006F8                     __ptext15:
  1740                           	opt stack 0
  1741  0006F8                     _ReadI2C:
  1742                           	opt stack 28
  1743                           
  1744                           ;incstack = 0
  1745  0006F8  50C6               	movf	4038,w,c	;volatile
  1746  0006FA  0B0F               	andlw	15
  1747  0006FC  0A08               	xorlw	8
  1748  0006FE  B4D8               	btfsc	status,2,c
  1749  000700  D004               	goto	l206
  1750  000702  50C6               	movf	4038,w,c	;volatile
  1751  000704  0B0F               	andlw	15
  1752  000706  0A0B               	xorlw	11
  1753  000708  B4D8               	btfsc	status,2,c
  1754  00070A                     l206:
  1755  00070A  86C5               	bsf	4037,3,c	;volatile
  1756  00070C                     l207:
  1757  00070C  A0C7               	btfss	4039,0,c	;volatile
  1758  00070E  D7FE               	goto	l207
  1759  000710  50C9               	movf	4041,w,c	;volatile
  1760  000712  0012               	return	
  1761  000714                     __end_of_ReadI2C:
  1762                           	opt stack 0
  1763                           tblptru	equ	0xFF8
  1764                           tblptrh	equ	0xFF7
  1765                           tblptrl	equ	0xFF6
  1766                           tablat	equ	0xFF5
  1767                           prodh	equ	0xFF4
  1768                           prodl	equ	0xFF3
  1769                           intcon	equ	0xFF2
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           indf2	equ	0xFDF
  1773                           postinc2	equ	0xFDE
  1774                           postdec2	equ	0xFDD
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           prodh	equ	0xFF4
  1783                           prodl	equ	0xFF3
  1784                           intcon	equ	0xFF2
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           indf2	equ	0xFDF
  1788                           postinc2	equ	0xFDE
  1789                           postdec2	equ	0xFDD
  1790                           fsr2h	equ	0xFDA
  1791                           fsr2l	equ	0xFD9
  1792                           status	equ	0xFD8
  1793                           
  1794                           	psect	rparam
  1795  0000                     tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           indf2	equ	0xFDF
  1805                           postinc2	equ	0xFDE
  1806                           postdec2	equ	0xFDD
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    butnEvent@butn	PTR unsigned char  size(2) Largest target is 1
		 -> main@btn(COMRAM[1]), 

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FMinit
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2229
                                             20 COMRAM     4     4      0
                             _FMinit
                             _FMvers
                               _Init
                          _butnEvent
                                _dly
                              _errfm
                           _nextChan
 ---------------------------------------------------------------------------------
 (1) _nextChan                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                            2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     449
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1186
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dly                                                  4     2      2     304
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _FMready                                              6     4      2     565
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (2) _FMread                                               9     7      2     363
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _butnEvent
   _dly
   _errfm
   _nextChan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      3C       1       63.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C       8        0.0%
DATA                 0      0      3C      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Feb 16 14:29:21 2017

            __CFG_CP$OFF 000000              _SSPSTATbits 000FC7                       l94 052C  
                     l89 04F0                       l99 032A              __CFG_BORV$3 000000  
                    l110 0388                      l104 0352                      l113 0392  
                    l107 0372                      l123 042C                      l206 070A  
                    l207 070C                      l231 0628                      l240 064E  
                    l154 0752                      l906 065E                      l860 072A  
                    l874 0612                      l892 063A                      l888 0636  
                    l992 0508                      u600 0690                      u730 0560  
                    u590 068E                      _dly 06A8                      prod 000FF3  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     l1302 0446  
                   l1224 06B2                     l1232 06D0                     l1304 044A  
                   l1226 06BC                     l1330 049A                     l1314 0462  
                   l1252 067A                     l1228 06C2                     l1308 0452  
                   l1190 0342                     l1326 0480                     l1318 0466  
                   l1328 048E                     l1284 03F4                     l1382 0570  
                   l1288 03FC                     l1392 0594                     l1386 0586  
                   l1388 058E                     ?_dly 0025                     _Init 05A4  
        __end_of_FMready 06A8                     _main 0538                     dly@d 0025  
                   dly@i 0027                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9          __end_of_FMwrite 0538                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_IdleI2C 073C            __CFG_MCLRE$ON 000000             ___param_bank 000010  
        __end_of_ReadI2C 0714          __end_of_OpenI2C 06F8                    ??_dly 0027  
                  ?_Init 0025                    ?_main 0025                    _T0CON 000FD5  
                  _LCDPS 000F58                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISG 000F98            __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000  
        __end_of_regDflt 0325                    _errfm 0752           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 0714  
           __end_of_Init 0604             __end_of_main 05A4                   ??_Init 0027  
                 ??_main 0039            __activetblptr 000002                   _ADCON1 000FC1  
              ??_FMready 0032                   ?_errfm 0025         __end_of_WriteI2C 0662  
              ??_FMwrite 0027                   _LCDCON 000F59                   _LCDSE0 000F5A  
                 _LCDSE1 000F5B                   _LCDSE2 000F5C                   _LCDSE3 000F5D  
            OpenI2C@slew 0025                ??_IdleI2C 0025                   _OSCCON 000FD3  
                 _FMinit 03F0                   _FMread 0326                   _SSPADD 000FC8  
                 _SSPBUF 000FC9                   _FMvers 073C                ??_ReadI2C 0025  
              ??_OpenI2C 0026           __CFG_XINST$OFF 000000                   _regImg 0001  
                 clear_0 071A         __end_of_nextChan 0752                   main@ui 003B  
       __end_of_showFreq 0756             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0720            ___rparam_used 000001           __pcstackCOMRAM 0025  
          __end_of_errfm 0754          __CFG_OSC$INTIO7 000000                  ??_errfm 0025  
     __size_of_butnEvent 0004                  ?_FMinit 0025                  ?_FMread 0027  
                ?_FMvers 0030                ?_WriteI2C 0025                FMinit@dat 0036  
                _FMready 0662                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  _FMwrite 04B6                  _IdleI2C 072A  
        __size_of_FMinit 00C6          __size_of_FMread 00CA                FMvers@vsn 0030  
                _ReadI2C 06F8          __size_of_FMvers 0010                ?_nextChan 0025  
                _OpenI2C 06DA                  __Hparam 0000                  __Lparam 0000  
              ?_showFreq 0025             __psmallconst 0300          __CFG_STVREN$OFF 000000  
                __pcinit 0714               ??_WriteI2C 0026        __end_of_butnEvent 0750  
                __ramtop 0300                  __ptext0 0538                  __ptext1 0750  
                __ptext2 0752                  __ptext3 074C                  __ptext4 05A4  
                __ptext5 06DA                  __ptext6 073C                  __ptext7 03F0  
                __ptext8 0754                  __ptext9 06A8                _T0CONbits 000FD5  
                _regDflt 0301             __size_of_dly 0032                  main@btn 003A  
                main@evt 0039     end_of_initialization 0720            __Lmediumconst 0000  
             ??_nextChan 0025               ??_showFreq 0025                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISCbits 000F94  
          butnEvent@butn 0025           __end_of_FMinit 04B6           __end_of_FMread 03F0  
         __end_of_FMvers 074C      start_initialization 0714              __end_of_dly 06DA  
       WriteI2C@data_out 0026                 ??_FMinit 0036                 ??_FMread 0029  
               ??_FMvers 0032        __size_of_WriteI2C 005E              __pbssCOMRAM 0001  
               ?_FMready 0030                 ?_FMwrite 0025               nextChan@up 0025  
               ?_IdleI2C 0025                 ?_ReadI2C 0025                 ?_OpenI2C 0025  
      __size_of_nextChan 0002        __size_of_showFreq 0002                 FMinit@ad 0038  
            __smallconst 0300                _butnEvent 074C          FMwrite@firstByt 0029  
               _LCDDATA0 000F60          FMwrite@secndByt 002A           __size_of_errfm 0002  
         FMread@firstByt 002E               FMread@data 0027                 _PIR1bits 000F9E  
         FMread@secndByt 002F               FMready@rdy 0030               FMready@sts 0034  
             ?_butnEvent 0025         __size_of_FMready 0046         __size_of_FMwrite 0082  
       OpenI2C@sync_mode 0026         __size_of_IdleI2C 0012         __size_of_ReadI2C 001C  
               __Hrparam 0000         __size_of_OpenI2C 001E                 __Lrparam 0000  
             FMwrite@adr 002B                 _WriteI2C 0604                 __ptext10 04B6  
               __ptext11 0662                 __ptext12 0326                 __ptext13 0604  
               __ptext14 072A                 __ptext15 06F8            __size_of_Init 0060  
          __size_of_main 006C                 _nextChan 0750            FMread@regAddr 002D  
               _showFreq 0754              ??_butnEvent 0027               _INTCONbits 000FF2  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
