

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Feb 19 00:48:03 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	smallconst
    44  000300                     __psmallconst:
    45                           	opt stack 0
    46  000300  00                 	db	0
    47  000301                     _regDflt:
    48                           	opt stack 0
    49  000301  FFFF               	dw	65535
    50  000303  5B15               	dw	23317
    51  000305  D0B9               	dw	53433
    52  000307  A010               	dw	40976
    53  000309  0780               	dw	1920
    54  00030B  28AB               	dw	10411
    55  00030D  6400               	dw	25600
    56  00030F  1EE7               	dw	7911
    57  000311  7141               	dw	28993
    58  000313  007D               	dw	125
    59  000315  82C6               	dw	33478
    60  000317  4F55               	dw	20309
    61  000319  970C               	dw	38668
    62  00031B  B845               	dw	47173
    63  00031D  FC2D               	dw	64557
    64  00031F  8097               	dw	32919
    65  000321  04A1               	dw	1185
    66  000323  DF6A               	dw	57194
    67  000325                     __end_of_regDflt:
    68                           	opt stack 0
    69  000325                     setVolume@F6699:
    70                           	opt stack 0
    71  000325  0F                 	db	15
    72  000326  CF                 	db	207
    73  000327  DF                 	db	223
    74  000328  FF                 	db	255
    75  000329  CB                 	db	203
    76  00032A  DB                 	db	219
    77  00032B  FB                 	db	251
    78  00032C  FA                 	db	250
    79  00032D  F9                 	db	249
    80  00032E  F8                 	db	248
    81  00032F  F7                 	db	247
    82  000330  D6                 	db	214
    83  000331  E6                 	db	230
    84  000332  F6                 	db	246
    85  000333  E3                 	db	227
    86  000334  F3                 	db	243
    87  000335  F2                 	db	242
    88  000336  F1                 	db	241
    89  000337  F0                 	db	240
    90  000338                     __end_ofsetVolume@F6699:
    91                           	opt stack 0
    92  000338                     _hardmute_bit:
    93                           	opt stack 0
    94  000338  0001               	dw	1
    95  00033A  0001               	dw	1
    96  00033C                     __end_of_hardmute_bit:
    97                           	opt stack 0
    98  00033C                     _hiloctrl1_bit:
    99                           	opt stack 0
   100  00033C  000B               	dw	11
   101  00033E  0002               	dw	2
   102  000340                     __end_of_hiloctrl1_bit:
   103                           	opt stack 0
   104  000340                     _hiloctrl2_bit:
   105                           	opt stack 0
   106  000340  000B               	dw	11
   107  000342  0000               	dw	0
   108  000344                     __end_of_hiloctrl2_bit:
   109                           	opt stack 0
   110  000344                     _hiloside_bit:
   111                           	opt stack 0
   112  000344  000B               	dw	11
   113  000346  000F               	dw	15
   114  000348                     __end_of_hiloside_bit:
   115                           	opt stack 0
   116  000348                     _seek_bit:
   117                           	opt stack 0
   118  000348  0003               	dw	3
   119  00034A  000E               	dw	14
   120  00034C                     __end_of_seek_bit:
   121                           	opt stack 0
   122  00034C                     _seekup_bit:
   123                           	opt stack 0
   124  00034C  0003               	dw	3
   125  00034E  000F               	dw	15
   126  000350                     __end_of_seekup_bit:
   127                           	opt stack 0
   128  000350                     _softmute_bit:
   129                           	opt stack 0
   130  000350  0001               	dw	1
   131  000352  0002               	dw	2
   132  000354                     __end_of_softmute_bit:
   133                           	opt stack 0
   134  000354                     _tune_bit:
   135                           	opt stack 0
   136  000354  0002               	dw	2
   137  000356  0009               	dw	9
   138  000358                     __end_of_tune_bit:
   139                           	opt stack 0
   140  0000                     _LCDCON	set	3929
   141  0000                     _LCDPS	set	3928
   142  0000                     _LCDSE0	set	3930
   143  0000                     _LCDSE1	set	3931
   144  0000                     _LCDSE2	set	3932
   145  0000                     _LCDSE3	set	3933
   146  0000                     _ADCON1	set	4033
   147  0000                     _INTCONbits	set	4082
   148  0000                     _OSCCON	set	4051
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PORTA	set	3968
   151  0000                     _PORTAbits	set	3968
   152  0000                     _PORTB	set	3969
   153  0000                     _PORTBbits	set	3969
   154  0000                     _PORTC	set	3970
   155  0000                     _PORTCbits	set	3970
   156  0000                     _PORTGbits	set	3974
   157  0000                     _SSPADD	set	4040
   158  0000                     _SSPBUF	set	4041
   159  0000                     _SSPCON1	set	4038
   160  0000                     _SSPCON1bits	set	4038
   161  0000                     _SSPCON2	set	4037
   162  0000                     _SSPCON2bits	set	4037
   163  0000                     _SSPSTAT	set	4039
   164  0000                     _SSPSTATbits	set	4039
   165  0000                     _T0CON	set	4053
   166  0000                     _T0CONbits	set	4053
   167  0000                     _TMR0H	set	4055
   168  0000                     _TMR0L	set	4054
   169  0000                     _TRISA	set	3986
   170  0000                     _TRISB	set	3987
   171  0000                     _TRISC	set	3988
   172  0000                     _TRISCbits	set	3988
   173  0000                     _TRISG	set	3992
   174  0000                     _LCDDATA0	set	3936
   175  000358                     STR_2:
   176  000358  64                 	db	100	;'d'
   177  000359  00                 	db	0
   178  00035A                     STR_1:
   179  00035A  75                 	db	117	;'u'
   180  00035B  00                 	db	0
   181                           
   182                           ; #config settings
   183  00035C  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           	psect	cinit
   186  000F72                     __pcinit:
   187                           	opt stack 0
   188  000F72                     start_initialization:
   189                           	opt stack 0
   190  000F72                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to COMRAM (36 bytes)
   194  000F72  EE00  F027         	lfsr	0,__pbssCOMRAM
   195  000F76  0E24               	movlw	36
   196  000F78                     clear_0:
   197  000F78  6AEE               	clrf	postinc0,c
   198  000F7A  06E8               	decf	wreg,f,c
   199  000F7C  E1FD               	bnz	clear_0
   200  000F7E                     end_of_initialization:
   201                           	opt stack 0
   202  000F7E                     __end_of__initialization:
   203                           	opt stack 0
   204  000F7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205  000F80  6EF8               	movwf	tblptru,c
   206  000F82  0100               	movlb	0
   207  000F84  EF63  F004         	goto	_main	;jump to C main() function
   208                           tblptru	equ	0xFF8
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssCOMRAM
   213  000027                     __pbssCOMRAM:
   214                           	opt stack 0
   215  000027                     _regImg:
   216                           	opt stack 0
   217  000027                     	ds	36
   218                           tblptru	equ	0xFF8
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt stack 0
   225  000001                     ??_IdleI2C:
   226  000001                     ?_butnEvent:
   227                           	opt stack 0
   228  000001                     OpenI2C@slew:
   229                           	opt stack 0
   230  000001                     dly@d:
   231                           	opt stack 0
   232  000001                     delay_10ms@n:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x0
   236  000001                     	ds	1
   237  000002                     OpenI2C@sync_mode:
   238                           	opt stack 0
   239  000002                     WriteI2C@data_out:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x1
   243  000002                     	ds	1
   244  000003                     ??_delay_10ms:
   245  000003                     ??_butnEvent:
   246  000003                     ??_FMwrite:
   247  000003                     dly@i:
   248                           	opt stack 0
   249  000003                     FMread@data:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  000003                     	ds	1
   254  000004                     butnEvent@c:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x3
   258  000004                     	ds	1
   259  000005                     ??_FMread:
   260  000005                     FMwrite@firstByt:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x4
   264  000005                     	ds	1
   265  000006                     FMwrite@secndByt:
   266                           	opt stack 0
   267  000006                     butnEvent@c_516:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x5
   271  000006                     	ds	1
   272  000007                     FMwrite@adr:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x6
   276  000007                     	ds	1
   277  000008                     setBitInRegister@bitRegister:
   278                           	opt stack 0
   279  000008                     butnEvent@c_517:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x7
   283  000008                     	ds	1
   284  000009                     FMread@regAddr:
   285                           	opt stack 0
   286  000009                     setBitInRegister@bitState:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x8
   290  000009                     	ds	1
   291  00000A                     ??_setBitInRegister:
   292  00000A                     FMread@firstByt:
   293                           	opt stack 0
   294  00000A                     butnEvent@c_518:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x9
   298  00000A                     	ds	1
   299  00000B                     FMread@secndByt:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0xA
   303  00000B                     	ds	1
   304  00000C                     ?_frequency:
   305                           	opt stack 0
   306  00000C                     butnEvent@c_527:
   307                           	opt stack 0
   308  00000C                     FMready@rdy:
   309                           	opt stack 0
   310  00000C                     FMvers@vsn:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0xB
   314  00000C                     	ds	2
   315  00000E                     ??_frequency:
   316  00000E                     ??_FMready:
   317  00000E                     butnEvent@c_528:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0xD
   321  00000E                     	ds	2
   322  000010                     butnEvent@c_535:
   323                           	opt stack 0
   324  000010                     FMready@sts:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0xF
   328  000010                     	ds	1
   329  000011                     setBitInRegister@address:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x10
   333  000011                     	ds	1
   334  000012                     ??_readLOInjection:
   335  000012                     setSeekDirection@direction:
   336                           	opt stack 0
   337  000012                     setHardmute@bitState:
   338                           	opt stack 0
   339  000012                     butnEvent@timereturn:
   340                           	opt stack 0
   341  000012                     FMinit@dat:
   342                           	opt stack 0
   343  000012                     FMfrequenc@f:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x11
   347  000012                     	ds	1
   348  000013                     frequency@data:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x12
   352  000013                     	ds	1
   353  000014                     ??_FMfrequenc:
   354  000014                     FMinit@ad:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x13
   358  000014                     	ds	1
   359  000015                     readLOInjection@loHi:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x14
   363  000015                     	ds	1
   364  000016                     readLOInjection@rssi_val:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x15
   368  000016                     	ds	1
   369  000017                     tuneWithAutoHiLo@curChannel:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x16
   373  000017                     	ds	1
   374  000018                     FMfrequenc@cn:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x17
   378  000018                     	ds	1
   379  000019                     tuneWithAutoHiLo@rssi_lo:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x18
   383  000019                     	ds	1
   384  00001A                     tuneWithAutoHiLo@rssi_hi:
   385                           	opt stack 0
   386  00001A                     FMfrequenc@dat:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x19
   390  00001A                     	ds	1
   391  00001B                     seek@temp:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x1A
   395  00001B                     	ds	1
   396  00001C                     
   397                           ; 1 bytes @ 0x1B
   398  00001C                     	ds	1
   399  00001D                     seek@curChannel:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x1C
   403  00001D                     	ds	2
   404  00001F                     seek@direction:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x1E
   408  00001F                     	ds	1
   409  000020                     VolumeUp@dir:
   410                           	opt stack 0
   411  000020                     VolumeDown@dir:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x1F
   415  000020                     	ds	1
   416  000021                     ??_main:
   417                           
   418                           ; 1 bytes @ 0x20
   419  000021                     	ds	2
   420  000023                     main@evt:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x22
   424  000023                     	ds	2
   425  000025                     main@ui:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x24
   429  000025                     	ds	2
   430                           tblptru	equ	0xFF8
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 830 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  ui              2   36[COMRAM] unsigned int 
   444 ;;  evt             2   34[COMRAM] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   454 ;;      Params:         0       0       0       0
   455 ;;      Locals:         4       0       0       0
   456 ;;      Temps:          2       0       0       0
   457 ;;      Totals:         6       0       0       0
   458 ;;Total ram usage:        6 bytes
   459 ;; Hardware stack levels required when called:    8
   460 ;; This function calls:
   461 ;;		_FMfrequenc
   462 ;;		_FMinit
   463 ;;		_FMvers
   464 ;;		_Init
   465 ;;		_MuteHard
   466 ;;		_SeekDOWN
   467 ;;		_SeekUP
   468 ;;		_VolumeDown
   469 ;;		_VolumeUp
   470 ;;		_butnEvent
   471 ;;		_dly
   472 ;;		_errfm
   473 ;;		_nextChannel
   474 ;;		_previousChannel
   475 ;; This function is called by:
   476 ;;		Startup code after reset
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text0
   481  0008C6                     __ptext0:
   482                           	opt stack 0
   483  0008C6                     _main:
   484                           	opt stack 23
   485                           
   486                           ;main.c: 831: int evt;
   487                           ;main.c: 832: unsigned int ui;
   488                           ;main.c: 833: dly(20);
   489                           
   490                           ;incstack = 0
   491  0008C6  0E00               	movlw	0
   492  0008C8  6E02               	movwf	dly@d+1,c
   493  0008CA  0E14               	movlw	20
   494  0008CC  6E01               	movwf	dly@d,c
   495  0008CE  EC25  F007         	call	_dly	;wreg free
   496                           
   497                           ;main.c: 834: Init();
   498  0008D2  EC55  F006         	call	_Init	;wreg free
   499                           
   500                           ;main.c: 837: FMvers(&ui);
   501  0008D6  0E25               	movlw	low main@ui
   502  0008D8  6E0C               	movwf	FMvers@vsn,c
   503  0008DA  0E00               	movlw	high main@ui
   504  0008DC  6E0D               	movwf	FMvers@vsn+1,c
   505  0008DE  ECDF  F007         	call	_FMvers	;wreg free
   506                           
   507                           ;main.c: 838: if (ui != 0x1010) errfm();
   508  0008E2  0E10               	movlw	16
   509  0008E4  1825               	xorwf	main@ui,w,c
   510  0008E6  E103               	bnz	u1660
   511  0008E8  0E10               	movlw	16
   512  0008EA  1826               	xorwf	main@ui+1,w,c
   513  0008EC  A4D8               	btfss	status,2,c
   514  0008EE                     u1660:
   515  0008EE  ECE7  F007         	call	_errfm	;wreg free
   516                           
   517                           ;main.c: 839: if (FMinit() != 0) errfm();
   518  0008F2  ECC7  F004         	call	_FMinit	;wreg free
   519  0008F6  0900               	iorlw	0
   520  0008F8  A4D8               	btfss	status,2,c
   521  0008FA  ECE7  F007         	call	_errfm	;wreg free
   522                           
   523                           ;main.c: 840: FMfrequenc(964);
   524  0008FE  0E03               	movlw	3
   525  000900  6E13               	movwf	FMfrequenc@f+1,c
   526  000902  0EC4               	movlw	196
   527  000904  6E12               	movwf	FMfrequenc@f,c
   528  000906  EC1C  F006         	call	_FMfrequenc	;wreg free
   529  00090A                     l2221:
   530                           
   531                           ;main.c: 843: evt = butnEvent();
   532  00090A  ECAF  F001         	call	_butnEvent	;wreg free
   533  00090E  C001  F023         	movff	?_butnEvent,main@evt
   534  000912  C002  F024         	movff	?_butnEvent+1,main@evt+1
   535                           
   536                           ;main.c: 844: switch (evt) {
   537  000916  D019               	goto	l2241
   538  000918                     l2223:
   539  000918  EC71  F007         	call	_nextChannel	;wreg free
   540                           
   541                           ;main.c: 846: break;
   542  00091C  D7F6               	goto	l2221
   543  00091E                     l2225:
   544  00091E  EC62  F007         	call	_previousChannel	;wreg free
   545                           
   546                           ;main.c: 848: break;
   547  000922  D7F3               	goto	l2221
   548  000924                     l2227:
   549  000924  EC8F  F007         	call	_VolumeUp	;wreg free
   550                           
   551                           ;main.c: 850: break;
   552  000928  D7F0               	goto	l2221
   553  00092A                     l2229:
   554  00092A  EC9D  F007         	call	_VolumeDown	;wreg free
   555                           
   556                           ;main.c: 852: break;
   557  00092E  D7ED               	goto	l2221
   558  000930                     l2231:
   559  000930  0E00               	movlw	0
   560  000932  ECE8  F007         	call	_MuteHard
   561                           
   562                           ;main.c: 854: break;
   563  000936  D7E9               	goto	l2221
   564  000938                     l2233:
   565  000938  ECC4  F007         	call	_SeekUP	;wreg free
   566                           
   567                           ;main.c: 856: break;
   568  00093C  D7E6               	goto	l2221
   569  00093E                     l2235:
   570  00093E  ECCD  F007         	call	_SeekDOWN	;wreg free
   571                           
   572                           ;main.c: 858: break;
   573  000942  D7E3               	goto	l2221
   574  000944                     l2237:
   575  000944  ECE7  F007         	call	_errfm	;wreg free
   576                           
   577                           ;main.c: 864: }
   578                           
   579                           ;main.c: 863: default: break;
   580                           
   581                           ;main.c: 861: break;
   582  000948  D7E0               	goto	l2221
   583  00094A                     l2241:
   584  00094A  C023  F021         	movff	main@evt,??_main
   585  00094E  C024  F022         	movff	main@evt+1,??_main+1
   586                           
   587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   588                           ; Switch size 1, requested type "space"
   589                           ; Number of cases is 1, Range of values is 0 to 0
   590                           ; switch strategies available:
   591                           ; Name         Instructions Cycles
   592                           ; simple_byte            4     3 (average)
   593                           ;	Chosen strategy is simple_byte
   594  000952  5022               	movf	??_main+1,w,c
   595  000954  0A00               	xorlw	0	; case 0
   596  000956  A4D8               	btfss	status,2,c
   597  000958  D7D8               	goto	l2221
   598                           
   599                           ; Switch size 1, requested type "space"
   600                           ; Number of cases is 8, Range of values is 1 to 8
   601                           ; switch strategies available:
   602                           ; Name         Instructions Cycles
   603                           ; simple_byte           25    13 (average)
   604                           ;	Chosen strategy is simple_byte
   605  00095A  5021               	movf	??_main,w,c
   606  00095C  0A01               	xorlw	1	; case 1
   607  00095E  B4D8               	btfsc	status,2,c
   608  000960  D7DB               	goto	l2223
   609  000962  0A03               	xorlw	3	; case 2
   610  000964  B4D8               	btfsc	status,2,c
   611  000966  D7DB               	goto	l2225
   612  000968  0A01               	xorlw	1	; case 3
   613  00096A  B4D8               	btfsc	status,2,c
   614  00096C  D7DB               	goto	l2227
   615  00096E  0A07               	xorlw	7	; case 4
   616  000970  B4D8               	btfsc	status,2,c
   617  000972  D7DB               	goto	l2229
   618  000974  0A01               	xorlw	1	; case 5
   619  000976  B4D8               	btfsc	status,2,c
   620  000978  D7DB               	goto	l2231
   621  00097A  0A03               	xorlw	3	; case 6
   622  00097C  B4D8               	btfsc	status,2,c
   623  00097E  D7DC               	goto	l2233
   624  000980  0A01               	xorlw	1	; case 7
   625  000982  B4D8               	btfsc	status,2,c
   626  000984  D7DC               	goto	l2235
   627  000986  0A0F               	xorlw	15	; case 8
   628  000988  B4D8               	btfsc	status,2,c
   629  00098A  D7DC               	goto	l2237
   630                           
   631                           ;main.c: 865: }
   632  00098C  D7BE               	goto	l2221
   633  00098E                     __end_of_main:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           status	equ	0xFD8
   639                           
   640 ;; *************** function _previousChannel *****************
   641 ;; Defined at:
   642 ;;		line 736 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      unsigned char 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   656 ;;      Params:         0       0       0       0
   657 ;;      Locals:         0       0       0       0
   658 ;;      Temps:          0       0       0       0
   659 ;;      Totals:         0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    5
   663 ;; This function calls:
   664 ;;		_FMfrequenc
   665 ;;		_delay_10ms
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  000EC4                     __ptext1:
   673                           	opt stack 0
   674  000EC4                     _previousChannel:
   675                           	opt stack 25
   676                           
   677                           ;main.c: 738: FMfrequenc(958);
   678                           
   679                           ;incstack = 0
   680  000EC4  0E03               	movlw	3
   681  000EC6  6E13               	movwf	FMfrequenc@f+1,c
   682  000EC8  0EBE               	movlw	190
   683  000ECA  6E12               	movwf	FMfrequenc@f,c
   684  000ECC  EC1C  F006         	call	_FMfrequenc	;wreg free
   685                           
   686                           ;main.c: 739: PORTCbits.RC7 = 1;
   687  000ED0  8E82               	bsf	3970,7,c	;volatile
   688                           
   689                           ;main.c: 740: delay_10ms(10);
   690  000ED2  0E00               	movlw	0
   691  000ED4  6E02               	movwf	delay_10ms@n+1,c
   692  000ED6  0E0A               	movlw	10
   693  000ED8  6E01               	movwf	delay_10ms@n,c
   694  000EDA  EC51  F007         	call	_delay_10ms	;wreg free
   695                           
   696                           ;main.c: 741: PORTCbits.RC7 = 0;
   697  000EDE  9E82               	bcf	3970,7,c	;volatile
   698  000EE0  0012               	return	
   699  000EE2                     __end_of_previousChannel:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           status	equ	0xFD8
   705                           
   706 ;; *************** function _nextChannel *****************
   707 ;; Defined at:
   708 ;;		line 726 in file "main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      unsigned char 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   722 ;;      Params:         0       0       0       0
   723 ;;      Locals:         0       0       0       0
   724 ;;      Temps:          0       0       0       0
   725 ;;      Totals:         0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    5
   729 ;; This function calls:
   730 ;;		_FMfrequenc
   731 ;;		_delay_10ms
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text2
   738  000EE2                     __ptext2:
   739                           	opt stack 0
   740  000EE2                     _nextChannel:
   741                           	opt stack 25
   742                           
   743                           ;main.c: 727: FMfrequenc(964);
   744                           
   745                           ;incstack = 0
   746  000EE2  0E03               	movlw	3
   747  000EE4  6E13               	movwf	FMfrequenc@f+1,c
   748  000EE6  0EC4               	movlw	196
   749  000EE8  6E12               	movwf	FMfrequenc@f,c
   750  000EEA  EC1C  F006         	call	_FMfrequenc	;wreg free
   751                           
   752                           ;main.c: 728: PORTCbits.RC6 = 1;
   753  000EEE  8C82               	bsf	3970,6,c	;volatile
   754                           
   755                           ;main.c: 729: delay_10ms(10);
   756  000EF0  0E00               	movlw	0
   757  000EF2  6E02               	movwf	delay_10ms@n+1,c
   758  000EF4  0E0A               	movlw	10
   759  000EF6  6E01               	movwf	delay_10ms@n,c
   760  000EF8  EC51  F007         	call	_delay_10ms	;wreg free
   761                           
   762                           ;main.c: 730: PORTCbits.RC6 = 0;
   763  000EFC  9C82               	bcf	3970,6,c	;volatile
   764  000EFE  0012               	return	
   765  000F00                     __end_of_nextChannel:
   766                           	opt stack 0
   767                           tblptru	equ	0xFF8
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _FMfrequenc *****************
   773 ;; Defined at:
   774 ;;		line 661 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  f               2   17[COMRAM] unsigned int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  dat             2   25[COMRAM] unsigned int 
   779 ;;  cn              2   23[COMRAM] unsigned int 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   789 ;;      Params:         2       0       0       0
   790 ;;      Locals:         4       0       0       0
   791 ;;      Temps:          4       0       0       0
   792 ;;      Totals:        10       0       0       0
   793 ;;Total ram usage:       10 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    4
   796 ;; This function calls:
   797 ;;		_FMready
   798 ;;		_FMwrite
   799 ;;		_dly
   800 ;; This function is called by:
   801 ;;		_nextChannel
   802 ;;		_previousChannel
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808  000C38                     __ptext3:
   809                           	opt stack 0
   810  000C38                     _FMfrequenc:
   811                           	opt stack 25
   812                           
   813                           ;main.c: 663: unsigned int dat;
   814                           ;main.c: 664: unsigned int cn;
   815                           ;main.c: 666: cn = f - 690;
   816                           
   817                           ;incstack = 0
   818  000C38  0E4E               	movlw	78
   819  000C3A  2412               	addwf	FMfrequenc@f,w,c
   820  000C3C  6E18               	movwf	FMfrequenc@cn,c
   821  000C3E  0EFD               	movlw	253
   822  000C40  2013               	addwfc	FMfrequenc@f+1,w,c
   823  000C42  6E19               	movwf	FMfrequenc@cn+1,c
   824                           
   825                           ;main.c: 669: regImg[2] &= ~0x0200;
   826  000C44  922C               	bcf	_regImg+5,1,c
   827                           
   828                           ;main.c: 670: if (FMwrite(2) != 0) return 1;
   829  000C46  0E02               	movlw	2
   830  000C48  ECDB  F005         	call	_FMwrite
   831  000C4C  0900               	iorlw	0
   832  000C4E  A4D8               	btfss	status,2,c
   833  000C50  0012               	return	
   834                           
   835                           ;main.c: 671: regImg[2] &= 0xfe00;
   836                           
   837                           ;	Return value of _FMfrequenc is never used
   838  000C52  0E00               	movlw	0
   839  000C54  162B               	andwf	_regImg+4,f,c
   840  000C56  0EFE               	movlw	254
   841  000C58  162C               	andwf	_regImg+5,f,c
   842                           
   843                           ;main.c: 672: regImg[2] |= (cn | 0x0200);
   844  000C5A  0E00               	movlw	0
   845  000C5C  6E14               	movwf	??_FMfrequenc& (0+255),c
   846  000C5E  0E02               	movlw	2
   847  000C60  6E15               	movwf	(??_FMfrequenc+1)& (0+255),c
   848  000C62  C018  F016         	movff	FMfrequenc@cn,??_FMfrequenc+2
   849  000C66  C019  F017         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   850  000C6A  5014               	movf	??_FMfrequenc,w,c
   851  000C6C  1216               	iorwf	??_FMfrequenc+2,f,c
   852  000C6E  5015               	movf	??_FMfrequenc+1,w,c
   853  000C70  1217               	iorwf	??_FMfrequenc+3,f,c
   854  000C72  5016               	movf	??_FMfrequenc+2,w,c
   855  000C74  122B               	iorwf	_regImg+4,f,c
   856  000C76  5017               	movf	??_FMfrequenc+3,w,c
   857  000C78  122C               	iorwf	_regImg+5,f,c
   858                           
   859                           ;main.c: 673: if (FMwrite(2) != 0) return 1;
   860  000C7A  0E02               	movlw	2
   861  000C7C  ECDB  F005         	call	_FMwrite
   862  000C80  0900               	iorlw	0
   863  000C82  A4D8               	btfss	status,2,c
   864  000C84  0012               	return	
   865                           
   866                           ;main.c: 675: dly(2);
   867                           
   868                           ;main.c: 674: do {
   869                           
   870                           ;	Return value of _FMfrequenc is never used
   871  000C86  0E00               	movlw	0
   872  000C88  6E02               	movwf	dly@d+1,c
   873  000C8A  0E02               	movlw	2
   874  000C8C  6E01               	movwf	dly@d,c
   875  000C8E  EC25  F007         	call	_dly	;wreg free
   876                           
   877                           ;main.c: 676: if (FMready(&dat) != 0) return 1;
   878  000C92  0E1A               	movlw	low FMfrequenc@dat
   879  000C94  6E0C               	movwf	FMready@rdy,c
   880  000C96  0E00               	movlw	high FMfrequenc@dat
   881  000C98  6E0D               	movwf	FMready@rdy+1,c
   882  000C9A  ECE1  F006         	call	_FMready	;wreg free
   883  000C9E  0900               	iorlw	0
   884  000CA0  A4D8               	btfss	status,2,c
   885  000CA2  0012               	return	
   886                           
   887                           ;main.c: 677: } while (!dat);
   888                           
   889                           ;	Return value of _FMfrequenc is never used
   890  000CA4  501A               	movf	FMfrequenc@dat,w,c
   891  000CA6  101B               	iorwf	FMfrequenc@dat+1,w,c
   892  000CA8  D7EC               	goto	L1
   893  000CAA                     __end_of_FMfrequenc:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           status	equ	0xFD8
   899                           
   900 ;; *************** function _errfm *****************
   901 ;; Defined at:
   902 ;;		line 805 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		None
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   916 ;;      Params:         0       0       0       0
   917 ;;      Locals:         0       0       0       0
   918 ;;      Temps:          0       0       0       0
   919 ;;      Totals:         0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text4
   930  000FCE                     __ptext4:
   931                           	opt stack 0
   932  000FCE                     _errfm:
   933                           	opt stack 30
   934  000FCE                     l288:
   935  000FCE  D7FF               	goto	l288
   936  000FD0                     __end_of_errfm:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _butnEvent *****************
   944 ;; Defined at:
   945 ;;		line 98 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  c               2    9[COMRAM] int 
   950 ;;  c               2    5[COMRAM] int 
   951 ;;  c               2   15[COMRAM] int 
   952 ;;  c               2   13[COMRAM] int 
   953 ;;  c               2   11[COMRAM] int 
   954 ;;  c               2    7[COMRAM] int 
   955 ;;  c               2    3[COMRAM] int 
   956 ;;  timereturn      2   17[COMRAM] int 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    0[COMRAM] int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   966 ;;      Params:         2       0       0       0
   967 ;;      Locals:        16       0       0       0
   968 ;;      Temps:          1       0       0       0
   969 ;;      Totals:        19       0       0       0
   970 ;;Total ram usage:       19 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text5
   980  00035E                     __ptext5:
   981                           	opt stack 0
   982  00035E                     _butnEvent:
   983                           	opt stack 30
   984                           
   985                           ;main.c: 99: int timereturn;
   986                           ;main.c: 100: if (PORTAbits.RA0 == 0)
   987                           
   988                           ;incstack = 0
   989  00035E  B080               	btfsc	3968,0,c	;volatile
   990  000360  D04F               	goto	l95
   991                           
   992                           ;main.c: 101: {
   993                           ;main.c: 102: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   994  000362  0E00               	movlw	0
   995  000364  6E05               	movwf	butnEvent@c+1,c
   996  000366  0E00               	movlw	0
   997  000368  6E04               	movwf	butnEvent@c,c
   998  00036A  BE05               	btfsc	butnEvent@c+1,7,c
   999  00036C  D006               	goto	l1905
  1000  00036E  5005               	movf	butnEvent@c+1,w,c
  1001  000370  E112               	bnz	l97
  1002  000372  0E0B               	movlw	11
  1003  000374  5C04               	subwf	butnEvent@c,w,c
  1004  000376  B0D8               	btfsc	status,0,c
  1005  000378  D00E               	goto	l97
  1006  00037A                     l1905:
  1007  00037A  0E0D               	movlw	13
  1008  00037C  6E03               	movwf	??_butnEvent& (0+255),c
  1009  00037E  0EFC               	movlw	252
  1010  000380                     u1687:
  1011  000380  2EE8               	decfsz	wreg,f,c
  1012  000382  D7FE               	goto	u1687
  1013  000384  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1014  000386  D7FC               	goto	u1687
  1015  000388  4A04               	infsnz	butnEvent@c,f,c
  1016  00038A  2A05               	incf	butnEvent@c+1,f,c
  1017  00038C  BE05               	btfsc	butnEvent@c+1,7,c
  1018  00038E  D7F5               	goto	l1905
  1019  000390  5005               	movf	butnEvent@c+1,w,c
  1020  000392  E101               	bnz	u1270
  1021  000394  D7EE               	goto	L2
  1022  000396                     u1270:
  1023  000396                     l97:
  1024                           
  1025                           ;main.c: 103: if (PORTAbits.RA0 == 0)
  1026  000396  B080               	btfsc	3968,0,c	;volatile
  1027  000398  D02A               	goto	l1927
  1028                           
  1029                           ;main.c: 104: {
  1030                           ;main.c: 105: timereturn = 1;
  1031  00039A  0E00               	movlw	0
  1032  00039C  6E13               	movwf	butnEvent@timereturn+1,c
  1033  00039E  0E01               	movlw	1
  1034  0003A0  6E12               	movwf	butnEvent@timereturn,c
  1035                           
  1036                           ;main.c: 106: for (int c = 0; c <= 10; c++)_delay((unsigned long)((7)*(8000000/4000.0)))
      +                          ;
  1037  0003A2  0E00               	movlw	0
  1038  0003A4  6E07               	movwf	butnEvent@c_516+1,c
  1039  0003A6  0E00               	movlw	0
  1040  0003A8  6E06               	movwf	butnEvent@c_516,c
  1041  0003AA  BE07               	btfsc	butnEvent@c_516+1,7,c
  1042  0003AC  D006               	goto	l1915
  1043  0003AE  5007               	movf	butnEvent@c_516+1,w,c
  1044  0003B0  E113               	bnz	l100
  1045  0003B2  0E0B               	movlw	11
  1046  0003B4  5C06               	subwf	butnEvent@c_516,w,c
  1047  0003B6  B0D8               	btfsc	status,0,c
  1048  0003B8  D00F               	goto	l100
  1049  0003BA                     l1915:
  1050  0003BA  0E13               	movlw	19
  1051  0003BC  6E03               	movwf	??_butnEvent& (0+255),c
  1052  0003BE  0E2D               	movlw	45
  1053  0003C0                     u1697:
  1054  0003C0  2EE8               	decfsz	wreg,f,c
  1055  0003C2  D7FE               	goto	u1697
  1056  0003C4  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1057  0003C6  D7FC               	goto	u1697
  1058  0003C8  F000               	nop	
  1059  0003CA  4A06               	infsnz	butnEvent@c_516,f,c
  1060  0003CC  2A07               	incf	butnEvent@c_516+1,f,c
  1061  0003CE  BE07               	btfsc	butnEvent@c_516+1,7,c
  1062  0003D0  D7F4               	goto	l1915
  1063  0003D2  5007               	movf	butnEvent@c_516+1,w,c
  1064  0003D4  E101               	bnz	u1300
  1065  0003D6  D7ED               	goto	L3
  1066  0003D8                     u1300:
  1067  0003D8                     l100:
  1068                           
  1069                           ;main.c: 107: if (PORTAbits.RA0 == 0) {
  1070  0003D8  B080               	btfsc	3968,0,c	;volatile
  1071  0003DA  D004               	goto	l1921
  1072                           
  1073                           ;main.c: 108: timereturn = 6;
  1074  0003DC  0E00               	movlw	0
  1075  0003DE  6E13               	movwf	butnEvent@timereturn+1,c
  1076  0003E0  0E06               	movlw	6
  1077  0003E2  6E12               	movwf	butnEvent@timereturn,c
  1078  0003E4                     l1921:
  1079                           
  1080                           ;main.c: 109: }
  1081                           ;main.c: 111: return timereturn;
  1082  0003E4  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1083  0003E8  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1084  0003EC  0012               	return	
  1085  0003EE                     l1927:
  1086                           
  1087                           ;main.c: 114: timereturn = 0;
  1088  0003EE  0E00               	movlw	0
  1089  0003F0  6E13               	movwf	butnEvent@timereturn+1,c
  1090  0003F2  0E00               	movlw	0
  1091  0003F4  6E12               	movwf	butnEvent@timereturn,c
  1092                           
  1093                           ;main.c: 115: return timereturn;
  1094  0003F6  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1095  0003FA  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1096  0003FE  0012               	return	
  1097  000400                     l95:
  1098                           
  1099                           ;main.c: 116: }
  1100                           ;main.c: 117: }
  1101                           ;main.c: 119: if (PORTAbits.RA1 == 0)
  1102  000400  B280               	btfsc	3968,1,c	;volatile
  1103  000402  D04E               	goto	l104
  1104                           
  1105                           ;main.c: 120: {
  1106                           ;main.c: 121: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1107  000404  0E00               	movlw	0
  1108  000406  6E09               	movwf	butnEvent@c_517+1,c
  1109  000408  0E00               	movlw	0
  1110  00040A  6E08               	movwf	butnEvent@c_517,c
  1111  00040C  BE09               	btfsc	butnEvent@c_517+1,7,c
  1112  00040E  D006               	goto	l1939
  1113  000410  5009               	movf	butnEvent@c_517+1,w,c
  1114  000412  E112               	bnz	l106
  1115  000414  0E0B               	movlw	11
  1116  000416  5C08               	subwf	butnEvent@c_517,w,c
  1117  000418  B0D8               	btfsc	status,0,c
  1118  00041A  D00E               	goto	l106
  1119  00041C                     l1939:
  1120  00041C  0E0D               	movlw	13
  1121  00041E  6E03               	movwf	??_butnEvent& (0+255),c
  1122  000420  0EFC               	movlw	252
  1123  000422                     u1707:
  1124  000422  2EE8               	decfsz	wreg,f,c
  1125  000424  D7FE               	goto	u1707
  1126  000426  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1127  000428  D7FC               	goto	u1707
  1128  00042A  4A08               	infsnz	butnEvent@c_517,f,c
  1129  00042C  2A09               	incf	butnEvent@c_517+1,f,c
  1130  00042E  BE09               	btfsc	butnEvent@c_517+1,7,c
  1131  000430  D7F5               	goto	l1939
  1132  000432  5009               	movf	butnEvent@c_517+1,w,c
  1133  000434  E101               	bnz	u1340
  1134  000436  D7EE               	goto	L4
  1135  000438                     u1340:
  1136  000438                     l106:
  1137                           
  1138                           ;main.c: 122: if (PORTAbits.RA1 == 0)
  1139  000438  B280               	btfsc	3968,1,c	;volatile
  1140  00043A  D029               	goto	l1961
  1141                           
  1142                           ;main.c: 123: {
  1143                           ;main.c: 124: timereturn = 2;
  1144  00043C  0E00               	movlw	0
  1145  00043E  6E13               	movwf	butnEvent@timereturn+1,c
  1146  000440  0E02               	movlw	2
  1147  000442  6E12               	movwf	butnEvent@timereturn,c
  1148                           
  1149                           ;main.c: 125: for (int c = 0; c <= 10; c++)_delay((unsigned long)((12)*(8000000/4000.0))
      +                          );
  1150  000444  0E00               	movlw	0
  1151  000446  6E0B               	movwf	butnEvent@c_518+1,c
  1152  000448  0E00               	movlw	0
  1153  00044A  6E0A               	movwf	butnEvent@c_518,c
  1154  00044C  BE0B               	btfsc	butnEvent@c_518+1,7,c
  1155  00044E  D006               	goto	l1949
  1156  000450  500B               	movf	butnEvent@c_518+1,w,c
  1157  000452  E112               	bnz	l109
  1158  000454  0E0B               	movlw	11
  1159  000456  5C0A               	subwf	butnEvent@c_518,w,c
  1160  000458  B0D8               	btfsc	status,0,c
  1161  00045A  D00E               	goto	l109
  1162  00045C                     l1949:
  1163  00045C  0E20               	movlw	32
  1164  00045E  6E03               	movwf	??_butnEvent& (0+255),c
  1165  000460  0E2A               	movlw	42
  1166  000462                     u1717:
  1167  000462  2EE8               	decfsz	wreg,f,c
  1168  000464  D7FE               	goto	u1717
  1169  000466  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1170  000468  D7FC               	goto	u1717
  1171  00046A  4A0A               	infsnz	butnEvent@c_518,f,c
  1172  00046C  2A0B               	incf	butnEvent@c_518+1,f,c
  1173  00046E  BE0B               	btfsc	butnEvent@c_518+1,7,c
  1174  000470  D7F5               	goto	l1949
  1175  000472  500B               	movf	butnEvent@c_518+1,w,c
  1176  000474  E101               	bnz	u1370
  1177  000476  D7EE               	goto	L5
  1178  000478                     u1370:
  1179  000478                     l109:
  1180                           
  1181                           ;main.c: 126: if (PORTAbits.RA1 == 0) {
  1182  000478  B280               	btfsc	3968,1,c	;volatile
  1183  00047A  D004               	goto	l1955
  1184                           
  1185                           ;main.c: 127: timereturn = 7;
  1186  00047C  0E00               	movlw	0
  1187  00047E  6E13               	movwf	butnEvent@timereturn+1,c
  1188  000480  0E07               	movlw	7
  1189  000482  6E12               	movwf	butnEvent@timereturn,c
  1190  000484                     l1955:
  1191                           
  1192                           ;main.c: 128: }
  1193                           ;main.c: 130: return timereturn;
  1194  000484  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1195  000488  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1196  00048C  0012               	return	
  1197  00048E                     l1961:
  1198                           
  1199                           ;main.c: 133: timereturn = 0;
  1200  00048E  0E00               	movlw	0
  1201  000490  6E13               	movwf	butnEvent@timereturn+1,c
  1202  000492  0E00               	movlw	0
  1203  000494  6E12               	movwf	butnEvent@timereturn,c
  1204                           
  1205                           ;main.c: 134: return timereturn;
  1206  000496  C012  F001         	movff	butnEvent@timereturn,?_butnEvent
  1207  00049A  C013  F002         	movff	butnEvent@timereturn+1,?_butnEvent+1
  1208  00049E  0012               	return	
  1209  0004A0                     l104:
  1210                           
  1211                           ;main.c: 135: }
  1212                           ;main.c: 136: }
  1213                           ;main.c: 138: if (PORTBbits.RB0 == 0)
  1214  0004A0  B081               	btfsc	3969,0,c	;volatile
  1215  0004A2  D026               	goto	l112
  1216                           
  1217                           ;main.c: 139: {
  1218                           ;main.c: 140: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1219  0004A4  0E00               	movlw	0
  1220  0004A6  6E0D               	movwf	butnEvent@c_527+1,c
  1221  0004A8  0E00               	movlw	0
  1222  0004AA  6E0C               	movwf	butnEvent@c_527,c
  1223  0004AC  BE0D               	btfsc	butnEvent@c_527+1,7,c
  1224  0004AE  D006               	goto	l1973
  1225  0004B0  500D               	movf	butnEvent@c_527+1,w,c
  1226  0004B2  E112               	bnz	l114
  1227  0004B4  0E0B               	movlw	11
  1228  0004B6  5C0C               	subwf	butnEvent@c_527,w,c
  1229  0004B8  B0D8               	btfsc	status,0,c
  1230  0004BA  D00E               	goto	l114
  1231  0004BC                     l1973:
  1232  0004BC  0E0D               	movlw	13
  1233  0004BE  6E03               	movwf	??_butnEvent& (0+255),c
  1234  0004C0  0EFC               	movlw	252
  1235  0004C2                     u1727:
  1236  0004C2  2EE8               	decfsz	wreg,f,c
  1237  0004C4  D7FE               	goto	u1727
  1238  0004C6  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1239  0004C8  D7FC               	goto	u1727
  1240  0004CA  4A0C               	infsnz	butnEvent@c_527,f,c
  1241  0004CC  2A0D               	incf	butnEvent@c_527+1,f,c
  1242  0004CE  BE0D               	btfsc	butnEvent@c_527+1,7,c
  1243  0004D0  D7F5               	goto	l1973
  1244  0004D2  500D               	movf	butnEvent@c_527+1,w,c
  1245  0004D4  E101               	bnz	u1410
  1246  0004D6  D7EE               	goto	L6
  1247  0004D8                     u1410:
  1248  0004D8                     l114:
  1249                           
  1250                           ;main.c: 141: if (PORTBbits.RB0 == 0)
  1251  0004D8  B081               	btfsc	3969,0,c	;volatile
  1252  0004DA  D005               	goto	l1983
  1253                           
  1254                           ;main.c: 142: {
  1255                           ;main.c: 143: return 3;
  1256  0004DC  0E00               	movlw	0
  1257  0004DE  6E02               	movwf	?_butnEvent+1,c
  1258  0004E0  0E03               	movlw	3
  1259  0004E2  6E01               	movwf	?_butnEvent,c
  1260  0004E4  0012               	return	
  1261  0004E6                     l1983:
  1262                           
  1263                           ;main.c: 145: return 0;
  1264  0004E6  0E00               	movlw	0
  1265  0004E8  6E02               	movwf	?_butnEvent+1,c
  1266  0004EA  0E00               	movlw	0
  1267  0004EC  6E01               	movwf	?_butnEvent,c
  1268  0004EE  0012               	return	
  1269  0004F0                     l112:
  1270                           
  1271                           ;main.c: 146: }
  1272                           ;main.c: 147: }
  1273                           ;main.c: 149: if (PORTBbits.RB5 == 0)
  1274  0004F0  BA81               	btfsc	3969,5,c	;volatile
  1275  0004F2  D026               	goto	l117
  1276                           
  1277                           ;main.c: 150: {
  1278                           ;main.c: 151: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1279  0004F4  0E00               	movlw	0
  1280  0004F6  6E0F               	movwf	butnEvent@c_528+1,c
  1281  0004F8  0E00               	movlw	0
  1282  0004FA  6E0E               	movwf	butnEvent@c_528,c
  1283  0004FC  BE0F               	btfsc	butnEvent@c_528+1,7,c
  1284  0004FE  D006               	goto	l1993
  1285  000500  500F               	movf	butnEvent@c_528+1,w,c
  1286  000502  E112               	bnz	l119
  1287  000504  0E0B               	movlw	11
  1288  000506  5C0E               	subwf	butnEvent@c_528,w,c
  1289  000508  B0D8               	btfsc	status,0,c
  1290  00050A  D00E               	goto	l119
  1291  00050C                     l1993:
  1292  00050C  0E0D               	movlw	13
  1293  00050E  6E03               	movwf	??_butnEvent& (0+255),c
  1294  000510  0EFC               	movlw	252
  1295  000512                     u1737:
  1296  000512  2EE8               	decfsz	wreg,f,c
  1297  000514  D7FE               	goto	u1737
  1298  000516  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1299  000518  D7FC               	goto	u1737
  1300  00051A  4A0E               	infsnz	butnEvent@c_528,f,c
  1301  00051C  2A0F               	incf	butnEvent@c_528+1,f,c
  1302  00051E  BE0F               	btfsc	butnEvent@c_528+1,7,c
  1303  000520  D7F5               	goto	l1993
  1304  000522  500F               	movf	butnEvent@c_528+1,w,c
  1305  000524  E101               	bnz	u1450
  1306  000526  D7EE               	goto	L7
  1307  000528                     u1450:
  1308  000528                     l119:
  1309                           
  1310                           ;main.c: 152: if (PORTBbits.RB5 == 0)
  1311  000528  BA81               	btfsc	3969,5,c	;volatile
  1312  00052A  D005               	goto	l2003
  1313                           
  1314                           ;main.c: 153: {
  1315                           ;main.c: 154: return 4;
  1316  00052C  0E00               	movlw	0
  1317  00052E  6E02               	movwf	?_butnEvent+1,c
  1318  000530  0E04               	movlw	4
  1319  000532  6E01               	movwf	?_butnEvent,c
  1320  000534  0012               	return	
  1321  000536                     l2003:
  1322                           
  1323                           ;main.c: 156: return 0;
  1324  000536  0E00               	movlw	0
  1325  000538  6E02               	movwf	?_butnEvent+1,c
  1326  00053A  0E00               	movlw	0
  1327  00053C  6E01               	movwf	?_butnEvent,c
  1328  00053E  0012               	return	
  1329  000540                     l117:
  1330                           
  1331                           ;main.c: 157: }
  1332                           ;main.c: 158: }
  1333                           ;main.c: 160: if (PORTGbits.RG0 == 0)
  1334  000540  B086               	btfsc	3974,0,c	;volatile
  1335  000542  0012               	return	
  1336                           
  1337                           ;main.c: 161: {
  1338                           ;main.c: 162: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1339  000544  0E00               	movlw	0
  1340  000546  6E11               	movwf	butnEvent@c_535+1,c
  1341  000548  0E00               	movlw	0
  1342  00054A  6E10               	movwf	butnEvent@c_535,c
  1343  00054C  BE11               	btfsc	butnEvent@c_535+1,7,c
  1344  00054E  D006               	goto	l2013
  1345  000550  5011               	movf	butnEvent@c_535+1,w,c
  1346  000552  E112               	bnz	l124
  1347  000554  0E0B               	movlw	11
  1348  000556  5C10               	subwf	butnEvent@c_535,w,c
  1349  000558  B0D8               	btfsc	status,0,c
  1350  00055A  D00E               	goto	l124
  1351  00055C                     l2013:
  1352  00055C  0E0D               	movlw	13
  1353  00055E  6E03               	movwf	??_butnEvent& (0+255),c
  1354  000560  0EFC               	movlw	252
  1355  000562                     u1747:
  1356  000562  2EE8               	decfsz	wreg,f,c
  1357  000564  D7FE               	goto	u1747
  1358  000566  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1359  000568  D7FC               	goto	u1747
  1360  00056A  4A10               	infsnz	butnEvent@c_535,f,c
  1361  00056C  2A11               	incf	butnEvent@c_535+1,f,c
  1362  00056E  BE11               	btfsc	butnEvent@c_535+1,7,c
  1363  000570  D7F5               	goto	l2013
  1364  000572  5011               	movf	butnEvent@c_535+1,w,c
  1365  000574  E101               	bnz	u1490
  1366  000576  D7EE               	goto	L8
  1367  000578                     u1490:
  1368  000578                     l124:
  1369                           
  1370                           ;main.c: 163: if (PORTGbits.RG0 == 0)
  1371  000578  B086               	btfsc	3974,0,c	;volatile
  1372  00057A  D005               	goto	l2023
  1373                           
  1374                           ;main.c: 164: {
  1375                           ;main.c: 165: return 5;
  1376  00057C  0E00               	movlw	0
  1377  00057E  6E02               	movwf	?_butnEvent+1,c
  1378  000580  0E05               	movlw	5
  1379  000582  6E01               	movwf	?_butnEvent,c
  1380                           
  1381                           ;main.c: 166: } else {
  1382  000584  0012               	return	
  1383  000586                     l2023:
  1384                           
  1385                           ;main.c: 167: return 0;
  1386  000586  0E00               	movlw	0
  1387  000588  6E02               	movwf	?_butnEvent+1,c
  1388  00058A  0E00               	movlw	0
  1389  00058C  6E01               	movwf	?_butnEvent,c
  1390  00058E  0012               	return	
  1391  000590                     __end_of_butnEvent:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _VolumeUp *****************
  1399 ;; Defined at:
  1400 ;;		line 746 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  dir             1   31[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1414 ;;      Params:         0       0       0       0
  1415 ;;      Locals:         1       0       0       0
  1416 ;;      Temps:          0       0       0       0
  1417 ;;      Totals:         1       0       0       0
  1418 ;;Total ram usage:        1 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    7
  1421 ;; This function calls:
  1422 ;;		_delay_10ms
  1423 ;;		_seek
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text6
  1430  000F1E                     __ptext6:
  1431                           	opt stack 0
  1432  000F1E                     _VolumeUp:
  1433                           	opt stack 23
  1434                           
  1435                           ;main.c: 747: char dir = "u";
  1436                           
  1437                           ;incstack = 0
  1438  000F1E  0E5A               	movlw	low STR_1
  1439  000F20  6E20               	movwf	VolumeUp@dir,c
  1440                           
  1441                           ;main.c: 748: seek(dir);
  1442  000F22  5020               	movf	VolumeUp@dir,w,c
  1443  000F24  EC93  F003         	call	_seek
  1444                           
  1445                           ;main.c: 751: PORTCbits.RC6 = 1;
  1446  000F28  8C82               	bsf	3970,6,c	;volatile
  1447                           
  1448                           ;main.c: 752: delay_10ms(10);
  1449  000F2A  0E00               	movlw	0
  1450  000F2C  6E02               	movwf	delay_10ms@n+1,c
  1451  000F2E  0E0A               	movlw	10
  1452  000F30  6E01               	movwf	delay_10ms@n,c
  1453  000F32  EC51  F007         	call	_delay_10ms	;wreg free
  1454                           
  1455                           ;main.c: 753: PORTCbits.RC6 = 0;
  1456  000F36  9C82               	bcf	3970,6,c	;volatile
  1457  000F38  0012               	return	
  1458  000F3A                     __end_of_VolumeUp:
  1459                           	opt stack 0
  1460                           tblptru	equ	0xFF8
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           status	equ	0xFD8
  1464                           
  1465 ;; *************** function _VolumeDown *****************
  1466 ;; Defined at:
  1467 ;;		line 758 in file "main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  dir             1   31[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      unsigned char 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1481 ;;      Params:         0       0       0       0
  1482 ;;      Locals:         1       0       0       0
  1483 ;;      Temps:          0       0       0       0
  1484 ;;      Totals:         1       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    7
  1488 ;; This function calls:
  1489 ;;		_delay_10ms
  1490 ;;		_seek
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text7
  1497  000F3A                     __ptext7:
  1498                           	opt stack 0
  1499  000F3A                     _VolumeDown:
  1500                           	opt stack 23
  1501                           
  1502                           ;main.c: 759: char dir = "d";
  1503                           
  1504                           ;incstack = 0
  1505  000F3A  0E58               	movlw	low STR_2
  1506  000F3C  6E20               	movwf	VolumeDown@dir,c
  1507                           
  1508                           ;main.c: 760: seek(dir);
  1509  000F3E  5020               	movf	VolumeDown@dir,w,c
  1510  000F40  EC93  F003         	call	_seek
  1511                           
  1512                           ;main.c: 763: PORTCbits.RC7 = 1;
  1513  000F44  8E82               	bsf	3970,7,c	;volatile
  1514                           
  1515                           ;main.c: 764: delay_10ms(10);
  1516  000F46  0E00               	movlw	0
  1517  000F48  6E02               	movwf	delay_10ms@n+1,c
  1518  000F4A  0E0A               	movlw	10
  1519  000F4C  6E01               	movwf	delay_10ms@n,c
  1520  000F4E  EC51  F007         	call	_delay_10ms	;wreg free
  1521                           
  1522                           ;main.c: 765: PORTCbits.RC7 = 0;
  1523  000F52  9E82               	bcf	3970,7,c	;volatile
  1524  000F54  0012               	return	
  1525  000F56                     __end_of_VolumeDown:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _seek *****************
  1533 ;; Defined at:
  1534 ;;		line 380 in file "main.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  direction       1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  direction       1   30[COMRAM] unsigned char 
  1539 ;;  curChannel      2   28[COMRAM] unsigned short 
  1540 ;;  temp            2   26[COMRAM] unsigned short 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2  194[None  ] unsigned short 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1550 ;;      Params:         0       0       0       0
  1551 ;;      Locals:         5       0       0       0
  1552 ;;      Temps:          0       0       0       0
  1553 ;;      Totals:         5       0       0       0
  1554 ;;Total ram usage:        5 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    6
  1557 ;; This function calls:
  1558 ;;		_FMwrite
  1559 ;;		_frequency
  1560 ;;		_setBitInRegister
  1561 ;;		_setHardmute
  1562 ;;		_setSeekDirection
  1563 ;;		_tuneWithAutoHiLo
  1564 ;; This function is called by:
  1565 ;;		_VolumeUp
  1566 ;;		_VolumeDown
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text8
  1571  000726                     __ptext8:
  1572                           	opt stack 0
  1573  000726                     _seek:
  1574                           	opt stack 23
  1575                           
  1576                           ;incstack = 0
  1577                           ;seek@direction stored from wreg
  1578  000726  6E1F               	movwf	seek@direction,c
  1579                           
  1580                           ;main.c: 395: unsigned short temp = 0, curChannel;
  1581  000728  0E00               	movlw	0
  1582  00072A  6E1C               	movwf	seek@temp+1,c
  1583  00072C  0E00               	movlw	0
  1584  00072E  6E1B               	movwf	seek@temp,c
  1585                           
  1586                           ;main.c: 398: setHardmute(1);
  1587  000730  0E01               	movlw	1
  1588  000732  EC3E  F007         	call	_setHardmute
  1589                           
  1590                           ;main.c: 400: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1591  000736  0E56               	movlw	low (_tune_bit+2)
  1592  000738  6EF6               	movwf	tblptrl,c
  1593  00073A  0E03               	movlw	high (_tune_bit+2)
  1594  00073C  6EF7               	movwf	tblptrh,c
  1595  00073E                     	if	0	;tblptru may be non-zero
  1596  00073E                     	endif
  1597  00073E                     	if	0	;tblptru may be non-zero
  1598  00073E                     	endif
  1599  00073E  0008               	tblrd		*
  1600  000740  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1601  000744  0E00               	movlw	0
  1602  000746  6E09               	movwf	setBitInRegister@bitState,c
  1603  000748  0E54               	movlw	low _tune_bit
  1604  00074A  6EF6               	movwf	tblptrl,c
  1605  00074C                     	if	1	;There is more than 1 active tblptr byte
  1606  00074C  0E03               	movlw	high _tune_bit
  1607  00074E  6EF7               	movwf	tblptrh,c
  1608  000750                     	endif
  1609  000750                     	if	0	;There are less than 3 active tblptr bytes
  1610  000750                     	endif
  1611  000750  0008               	tblrd		*
  1612  000752  50F5               	movf	tablat,w,c
  1613  000754  EC2A  F005         	call	_setBitInRegister
  1614                           
  1615                           ;main.c: 405: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1616  000758  0E4A               	movlw	low (_seek_bit+2)
  1617  00075A  6EF6               	movwf	tblptrl,c
  1618  00075C  0E03               	movlw	high (_seek_bit+2)
  1619  00075E  6EF7               	movwf	tblptrh,c
  1620  000760                     	if	0	;tblptru may be non-zero
  1621  000760                     	endif
  1622  000760                     	if	0	;tblptru may be non-zero
  1623  000760                     	endif
  1624  000760  0008               	tblrd		*
  1625  000762  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1626  000766  0E00               	movlw	0
  1627  000768  6E09               	movwf	setBitInRegister@bitState,c
  1628  00076A  0E48               	movlw	low _seek_bit
  1629  00076C  6EF6               	movwf	tblptrl,c
  1630  00076E                     	if	1	;There is more than 1 active tblptr byte
  1631  00076E  0E03               	movlw	high _seek_bit
  1632  000770  6EF7               	movwf	tblptrh,c
  1633  000772                     	endif
  1634  000772                     	if	0	;There are less than 3 active tblptr bytes
  1635  000772                     	endif
  1636  000772  0008               	tblrd		*
  1637  000774  50F5               	movf	tablat,w,c
  1638  000776  EC2A  F005         	call	_setBitInRegister
  1639                           
  1640                           ;main.c: 408: setSeekDirection(direction);
  1641  00077A  501F               	movf	seek@direction,w,c
  1642  00077C  ECB4  F006         	call	_setSeekDirection
  1643                           
  1644                           ;main.c: 411: setBitInRegister(seek_bit[0], seek_bit[1], 1);
  1645  000780  0E4A               	movlw	low (_seek_bit+2)
  1646  000782  6EF6               	movwf	tblptrl,c
  1647  000784  0E03               	movlw	high (_seek_bit+2)
  1648  000786  6EF7               	movwf	tblptrh,c
  1649  000788                     	if	0	;tblptru may be non-zero
  1650  000788                     	endif
  1651  000788                     	if	0	;tblptru may be non-zero
  1652  000788                     	endif
  1653  000788  0008               	tblrd		*
  1654  00078A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1655  00078E  0E01               	movlw	1
  1656  000790  6E09               	movwf	setBitInRegister@bitState,c
  1657  000792  0E48               	movlw	low _seek_bit
  1658  000794  6EF6               	movwf	tblptrl,c
  1659  000796                     	if	1	;There is more than 1 active tblptr byte
  1660  000796  0E03               	movlw	high _seek_bit
  1661  000798  6EF7               	movwf	tblptrh,c
  1662  00079A                     	endif
  1663  00079A                     	if	0	;There are less than 3 active tblptr bytes
  1664  00079A                     	endif
  1665  00079A  0008               	tblrd		*
  1666  00079C  50F5               	movf	tablat,w,c
  1667  00079E  EC2A  F005         	call	_setBitInRegister
  1668                           
  1669                           ;main.c: 414: while (regImg[2] == 0)
  1670  0007A2  D004               	goto	l195
  1671  0007A4                     l1851:
  1672                           
  1673                           ;main.c: 415: regImg[2] = regImg[0x13] & 0x0020;
  1674  0007A4  0E20               	movlw	32
  1675  0007A6  144D               	andwf	_regImg+38,w,c
  1676  0007A8  6E2B               	movwf	_regImg+4,c
  1677  0007AA  6A2C               	clrf	_regImg+5,c
  1678  0007AC                     l195:
  1679  0007AC  502B               	movf	_regImg+4,w,c
  1680  0007AE  102C               	iorwf	_regImg+5,w,c
  1681  0007B0  B4D8               	btfsc	status,2,c
  1682  0007B2  D7F8               	goto	l1851
  1683                           
  1684                           ;main.c: 418: regImg[2] = regImg[0x13] & 0x0010;
  1685  0007B4  0E10               	movlw	16
  1686  0007B6  144D               	andwf	_regImg+38,w,c
  1687  0007B8  6E2B               	movwf	_regImg+4,c
  1688  0007BA  6A2C               	clrf	_regImg+5,c
  1689                           
  1690                           ;main.c: 420: if (regImg[2] != 0)
  1691  0007BC  502B               	movf	_regImg+4,w,c
  1692  0007BE  102C               	iorwf	_regImg+5,w,c
  1693  0007C0  A4D8               	btfss	status,2,c
  1694                           
  1695                           ;main.c: 421: tuneWithAutoHiLo();
  1696  0007C2  ECC8  F002         	call	_tuneWithAutoHiLo	;wreg free
  1697                           
  1698                           ;main.c: 424: setHardmute(0);
  1699  0007C6  0E00               	movlw	0
  1700  0007C8  EC3E  F007         	call	_setHardmute
  1701                           
  1702                           ;main.c: 426: curChannel = frequency() - 690;
  1703  0007CC  EC04  F007         	call	_frequency	;wreg free
  1704  0007D0  0E4E               	movlw	78
  1705  0007D2  240C               	addwf	?_frequency,w,c
  1706  0007D4  6E1D               	movwf	seek@curChannel,c
  1707  0007D6  0EFD               	movlw	253
  1708  0007D8  200D               	addwfc	?_frequency+1,w,c
  1709  0007DA  6E1E               	movwf	seek@curChannel+1,c
  1710                           
  1711                           ;main.c: 427: regImg[2] = regImg[2] & 0xFE00;
  1712  0007DC  0E00               	movlw	0
  1713  0007DE  142B               	andwf	_regImg+4,w,c
  1714  0007E0  6E2B               	movwf	_regImg+4,c
  1715  0007E2  0EFE               	movlw	254
  1716  0007E4  142C               	andwf	_regImg+5,w,c
  1717  0007E6  6E2C               	movwf	_regImg+5,c
  1718                           
  1719                           ;main.c: 428: regImg[2] |= curChannel;
  1720  0007E8  501D               	movf	seek@curChannel,w,c
  1721  0007EA  122B               	iorwf	_regImg+4,f,c
  1722  0007EC  501E               	movf	seek@curChannel+1,w,c
  1723  0007EE  122C               	iorwf	_regImg+5,f,c
  1724                           
  1725                           ;main.c: 429: FMwrite(2);
  1726  0007F0  0E02               	movlw	2
  1727  0007F2  ECDB  F005         	call	_FMwrite
  1728                           
  1729                           ;main.c: 432: return frequency();
  1730                           ;	Return value of _seek is never used
  1731  0007F6  EC04  F007         	call	_frequency	;wreg free
  1732  0007FA  0012               	return	
  1733  0007FC                     __end_of_seek:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function _tuneWithAutoHiLo *****************
  1744 ;; Defined at:
  1745 ;;		line 475 in file "main.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  curChannel      2   22[COMRAM] unsigned short 
  1750 ;;  rssi_hi         1   25[COMRAM] unsigned char 
  1751 ;;  rssi_lo         1   24[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1761 ;;      Params:         0       0       0       0
  1762 ;;      Locals:         4       0       0       0
  1763 ;;      Temps:          0       0       0       0
  1764 ;;      Totals:         4       0       0       0
  1765 ;;Total ram usage:        4 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    5
  1768 ;; This function calls:
  1769 ;;		_FMwrite
  1770 ;;		_frequency
  1771 ;;		_readLOInjection
  1772 ;;		_setBitInRegister
  1773 ;;		_setHardmute
  1774 ;; This function is called by:
  1775 ;;		_seek
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text9
  1780  000590                     __ptext9:
  1781                           	opt stack 0
  1782  000590                     _tuneWithAutoHiLo:
  1783                           	opt stack 23
  1784                           
  1785                           ;main.c: 503: unsigned char rssi_lo, rssi_hi;
  1786                           ;main.c: 504: unsigned short curChannel;
  1787                           ;main.c: 507: setHardmute(1);
  1788                           
  1789                           ;incstack = 0
  1790  000590  0E01               	movlw	1
  1791  000592  EC3E  F007         	call	_setHardmute
  1792                           
  1793                           ;main.c: 509: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  1794  000596  0E56               	movlw	low (_tune_bit+2)
  1795  000598  6EF6               	movwf	tblptrl,c
  1796  00059A  0E03               	movlw	high (_tune_bit+2)
  1797  00059C  6EF7               	movwf	tblptrh,c
  1798  00059E                     	if	0	;tblptru may be non-zero
  1799  00059E                     	endif
  1800  00059E                     	if	0	;tblptru may be non-zero
  1801  00059E                     	endif
  1802  00059E  0008               	tblrd		*
  1803  0005A0  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1804  0005A4  0E00               	movlw	0
  1805  0005A6  6E09               	movwf	setBitInRegister@bitState,c
  1806  0005A8  0E54               	movlw	low _tune_bit
  1807  0005AA  6EF6               	movwf	tblptrl,c
  1808  0005AC                     	if	1	;There is more than 1 active tblptr byte
  1809  0005AC  0E03               	movlw	high _tune_bit
  1810  0005AE  6EF7               	movwf	tblptrh,c
  1811  0005B0                     	endif
  1812  0005B0                     	if	0	;There are less than 3 active tblptr bytes
  1813  0005B0                     	endif
  1814  0005B0  0008               	tblrd		*
  1815  0005B2  50F5               	movf	tablat,w,c
  1816  0005B4  EC2A  F005         	call	_setBitInRegister
  1817                           
  1818                           ;main.c: 512: setBitInRegister(seek_bit[0], seek_bit[1], 0);
  1819  0005B8  0E4A               	movlw	low (_seek_bit+2)
  1820  0005BA  6EF6               	movwf	tblptrl,c
  1821  0005BC  0E03               	movlw	high (_seek_bit+2)
  1822  0005BE  6EF7               	movwf	tblptrh,c
  1823  0005C0                     	if	0	;tblptru may be non-zero
  1824  0005C0                     	endif
  1825  0005C0                     	if	0	;tblptru may be non-zero
  1826  0005C0                     	endif
  1827  0005C0  0008               	tblrd		*
  1828  0005C2  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1829  0005C6  0E00               	movlw	0
  1830  0005C8  6E09               	movwf	setBitInRegister@bitState,c
  1831  0005CA  0E48               	movlw	low _seek_bit
  1832  0005CC  6EF6               	movwf	tblptrl,c
  1833  0005CE                     	if	1	;There is more than 1 active tblptr byte
  1834  0005CE  0E03               	movlw	high _seek_bit
  1835  0005D0  6EF7               	movwf	tblptrh,c
  1836  0005D2                     	endif
  1837  0005D2                     	if	0	;There are less than 3 active tblptr bytes
  1838  0005D2                     	endif
  1839  0005D2  0008               	tblrd		*
  1840  0005D4  50F5               	movf	tablat,w,c
  1841  0005D6  EC2A  F005         	call	_setBitInRegister
  1842                           
  1843                           ;main.c: 515: curChannel = frequency() - 690;
  1844  0005DA  EC04  F007         	call	_frequency	;wreg free
  1845  0005DE  0E4E               	movlw	78
  1846  0005E0  240C               	addwf	?_frequency,w,c
  1847  0005E2  6E17               	movwf	tuneWithAutoHiLo@curChannel,c
  1848  0005E4  0EFD               	movlw	253
  1849  0005E6  200D               	addwfc	?_frequency+1,w,c
  1850  0005E8  6E18               	movwf	tuneWithAutoHiLo@curChannel+1,c
  1851                           
  1852                           ;main.c: 516: regImg[2] = regImg[2] & 0xFE00;
  1853  0005EA  0E00               	movlw	0
  1854  0005EC  142B               	andwf	_regImg+4,w,c
  1855  0005EE  6E2B               	movwf	_regImg+4,c
  1856  0005F0  0EFE               	movlw	254
  1857  0005F2  142C               	andwf	_regImg+5,w,c
  1858  0005F4  6E2C               	movwf	_regImg+5,c
  1859                           
  1860                           ;main.c: 517: regImg[2] |= curChannel;
  1861  0005F6  5017               	movf	tuneWithAutoHiLo@curChannel,w,c
  1862  0005F8  122B               	iorwf	_regImg+4,f,c
  1863  0005FA  5018               	movf	tuneWithAutoHiLo@curChannel+1,w,c
  1864  0005FC  122C               	iorwf	_regImg+5,f,c
  1865                           
  1866                           ;main.c: 518: FMwrite(2);
  1867  0005FE  0E02               	movlw	2
  1868  000600  ECDB  F005         	call	_FMwrite
  1869                           
  1870                           ;main.c: 521: rssi_lo = readLOInjection(0);
  1871  000604  0E00               	movlw	0
  1872  000606  EC89  F005         	call	_readLOInjection
  1873  00060A  6E19               	movwf	tuneWithAutoHiLo@rssi_lo,c
  1874                           
  1875                           ;main.c: 524: rssi_hi = readLOInjection(1);
  1876  00060C  0E01               	movlw	1
  1877  00060E  EC89  F005         	call	_readLOInjection
  1878  000612  6E1A               	movwf	tuneWithAutoHiLo@rssi_hi,c
  1879                           
  1880                           ;main.c: 527: if (rssi_hi > rssi_lo) {
  1881  000614  501A               	movf	tuneWithAutoHiLo@rssi_hi,w,c
  1882  000616  5C19               	subwf	tuneWithAutoHiLo@rssi_lo,w,c
  1883  000618  B0D8               	btfsc	status,0,c
  1884  00061A  D034               	goto	l1807
  1885                           
  1886                           ;main.c: 529: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 1);
  1887  00061C  0E3E               	movlw	low (_hiloctrl1_bit+2)
  1888  00061E  6EF6               	movwf	tblptrl,c
  1889  000620  0E03               	movlw	high (_hiloctrl1_bit+2)
  1890  000622  6EF7               	movwf	tblptrh,c
  1891  000624                     	if	0	;tblptru may be non-zero
  1892  000624                     	endif
  1893  000624                     	if	0	;tblptru may be non-zero
  1894  000624                     	endif
  1895  000624  0008               	tblrd		*
  1896  000626  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1897  00062A  0E01               	movlw	1
  1898  00062C  6E09               	movwf	setBitInRegister@bitState,c
  1899  00062E  0E3C               	movlw	low _hiloctrl1_bit
  1900  000630  6EF6               	movwf	tblptrl,c
  1901  000632                     	if	1	;There is more than 1 active tblptr byte
  1902  000632  0E03               	movlw	high _hiloctrl1_bit
  1903  000634  6EF7               	movwf	tblptrh,c
  1904  000636                     	endif
  1905  000636                     	if	0	;There are less than 3 active tblptr bytes
  1906  000636                     	endif
  1907  000636  0008               	tblrd		*
  1908  000638  50F5               	movf	tablat,w,c
  1909  00063A  EC2A  F005         	call	_setBitInRegister
  1910                           
  1911                           ;main.c: 530: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 1);
  1912  00063E  0E42               	movlw	low (_hiloctrl2_bit+2)
  1913  000640  6EF6               	movwf	tblptrl,c
  1914  000642  0E03               	movlw	high (_hiloctrl2_bit+2)
  1915  000644  6EF7               	movwf	tblptrh,c
  1916  000646                     	if	0	;tblptru may be non-zero
  1917  000646                     	endif
  1918  000646                     	if	0	;tblptru may be non-zero
  1919  000646                     	endif
  1920  000646  0008               	tblrd		*
  1921  000648  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1922  00064C  0E01               	movlw	1
  1923  00064E  6E09               	movwf	setBitInRegister@bitState,c
  1924  000650  0E40               	movlw	low _hiloctrl2_bit
  1925  000652  6EF6               	movwf	tblptrl,c
  1926  000654                     	if	1	;There is more than 1 active tblptr byte
  1927  000654  0E03               	movlw	high _hiloctrl2_bit
  1928  000656  6EF7               	movwf	tblptrh,c
  1929  000658                     	endif
  1930  000658                     	if	0	;There are less than 3 active tblptr bytes
  1931  000658                     	endif
  1932  000658  0008               	tblrd		*
  1933  00065A  50F5               	movf	tablat,w,c
  1934  00065C  EC2A  F005         	call	_setBitInRegister
  1935                           
  1936                           ;main.c: 531: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 0);
  1937  000660  0E46               	movlw	low (_hiloside_bit+2)
  1938  000662  6EF6               	movwf	tblptrl,c
  1939  000664  0E03               	movlw	high (_hiloside_bit+2)
  1940  000666  6EF7               	movwf	tblptrh,c
  1941  000668                     	if	0	;tblptru may be non-zero
  1942  000668                     	endif
  1943  000668                     	if	0	;tblptru may be non-zero
  1944  000668                     	endif
  1945  000668  0008               	tblrd		*
  1946  00066A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1947  00066E  0E00               	movlw	0
  1948  000670  6E09               	movwf	setBitInRegister@bitState,c
  1949  000672  0E44               	movlw	low _hiloside_bit
  1950  000674  6EF6               	movwf	tblptrl,c
  1951  000676                     	if	1	;There is more than 1 active tblptr byte
  1952  000676  0E03               	movlw	high _hiloside_bit
  1953  000678  6EF7               	movwf	tblptrh,c
  1954  00067A                     	endif
  1955  00067A                     	if	0	;There are less than 3 active tblptr bytes
  1956  00067A                     	endif
  1957  00067A  0008               	tblrd		*
  1958  00067C  50F5               	movf	tablat,w,c
  1959  00067E  EC2A  F005         	call	_setBitInRegister
  1960                           
  1961                           ;main.c: 532: } else {
  1962  000682  D033               	goto	l211
  1963  000684                     l1807:
  1964                           
  1965                           ;main.c: 534: setBitInRegister(hiloctrl1_bit[0], hiloctrl1_bit[1], 0);
  1966  000684  0E3E               	movlw	low (_hiloctrl1_bit+2)
  1967  000686  6EF6               	movwf	tblptrl,c
  1968  000688  0E03               	movlw	high (_hiloctrl1_bit+2)
  1969  00068A  6EF7               	movwf	tblptrh,c
  1970  00068C                     	if	0	;tblptru may be non-zero
  1971  00068C                     	endif
  1972  00068C                     	if	0	;tblptru may be non-zero
  1973  00068C                     	endif
  1974  00068C  0008               	tblrd		*
  1975  00068E  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  1976  000692  0E00               	movlw	0
  1977  000694  6E09               	movwf	setBitInRegister@bitState,c
  1978  000696  0E3C               	movlw	low _hiloctrl1_bit
  1979  000698  6EF6               	movwf	tblptrl,c
  1980  00069A                     	if	1	;There is more than 1 active tblptr byte
  1981  00069A  0E03               	movlw	high _hiloctrl1_bit
  1982  00069C  6EF7               	movwf	tblptrh,c
  1983  00069E                     	endif
  1984  00069E                     	if	0	;There are less than 3 active tblptr bytes
  1985  00069E                     	endif
  1986  00069E  0008               	tblrd		*
  1987  0006A0  50F5               	movf	tablat,w,c
  1988  0006A2  EC2A  F005         	call	_setBitInRegister
  1989                           
  1990                           ;main.c: 535: setBitInRegister(hiloctrl2_bit[0], hiloctrl2_bit[1], 0);
  1991  0006A6  0E42               	movlw	low (_hiloctrl2_bit+2)
  1992  0006A8  6EF6               	movwf	tblptrl,c
  1993  0006AA  0E03               	movlw	high (_hiloctrl2_bit+2)
  1994  0006AC  6EF7               	movwf	tblptrh,c
  1995  0006AE                     	if	0	;tblptru may be non-zero
  1996  0006AE                     	endif
  1997  0006AE                     	if	0	;tblptru may be non-zero
  1998  0006AE                     	endif
  1999  0006AE  0008               	tblrd		*
  2000  0006B0  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2001  0006B4  0E00               	movlw	0
  2002  0006B6  6E09               	movwf	setBitInRegister@bitState,c
  2003  0006B8  0E40               	movlw	low _hiloctrl2_bit
  2004  0006BA  6EF6               	movwf	tblptrl,c
  2005  0006BC                     	if	1	;There is more than 1 active tblptr byte
  2006  0006BC  0E03               	movlw	high _hiloctrl2_bit
  2007  0006BE  6EF7               	movwf	tblptrh,c
  2008  0006C0                     	endif
  2009  0006C0                     	if	0	;There are less than 3 active tblptr bytes
  2010  0006C0                     	endif
  2011  0006C0  0008               	tblrd		*
  2012  0006C2  50F5               	movf	tablat,w,c
  2013  0006C4  EC2A  F005         	call	_setBitInRegister
  2014                           
  2015                           ;main.c: 536: setBitInRegister(hiloside_bit[0], hiloside_bit[1], 1);
  2016  0006C8  0E46               	movlw	low (_hiloside_bit+2)
  2017  0006CA  6EF6               	movwf	tblptrl,c
  2018  0006CC  0E03               	movlw	high (_hiloside_bit+2)
  2019  0006CE  6EF7               	movwf	tblptrh,c
  2020  0006D0                     	if	0	;tblptru may be non-zero
  2021  0006D0                     	endif
  2022  0006D0                     	if	0	;tblptru may be non-zero
  2023  0006D0                     	endif
  2024  0006D0  0008               	tblrd		*
  2025  0006D2  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2026  0006D6  0E01               	movlw	1
  2027  0006D8  6E09               	movwf	setBitInRegister@bitState,c
  2028  0006DA  0E44               	movlw	low _hiloside_bit
  2029  0006DC  6EF6               	movwf	tblptrl,c
  2030  0006DE                     	if	1	;There is more than 1 active tblptr byte
  2031  0006DE  0E03               	movlw	high _hiloside_bit
  2032  0006E0  6EF7               	movwf	tblptrh,c
  2033  0006E2                     	endif
  2034  0006E2                     	if	0	;There are less than 3 active tblptr bytes
  2035  0006E2                     	endif
  2036  0006E2  0008               	tblrd		*
  2037  0006E4  50F5               	movf	tablat,w,c
  2038  0006E6  EC2A  F005         	call	_setBitInRegister
  2039  0006EA                     l211:
  2040                           
  2041                           ;main.c: 537: }
  2042                           ;main.c: 540: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2043  0006EA  0E56               	movlw	low (_tune_bit+2)
  2044  0006EC  6EF6               	movwf	tblptrl,c
  2045  0006EE  0E03               	movlw	high (_tune_bit+2)
  2046  0006F0  6EF7               	movwf	tblptrh,c
  2047  0006F2                     	if	0	;tblptru may be non-zero
  2048  0006F2                     	endif
  2049  0006F2                     	if	0	;tblptru may be non-zero
  2050  0006F2                     	endif
  2051  0006F2  0008               	tblrd		*
  2052  0006F4  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2053  0006F8  0E01               	movlw	1
  2054  0006FA  6E09               	movwf	setBitInRegister@bitState,c
  2055  0006FC  0E54               	movlw	low _tune_bit
  2056  0006FE  6EF6               	movwf	tblptrl,c
  2057  000700                     	if	1	;There is more than 1 active tblptr byte
  2058  000700  0E03               	movlw	high _tune_bit
  2059  000702  6EF7               	movwf	tblptrh,c
  2060  000704                     	endif
  2061  000704                     	if	0	;There are less than 3 active tblptr bytes
  2062  000704                     	endif
  2063  000704  0008               	tblrd		*
  2064  000706  50F5               	movf	tablat,w,c
  2065  000708  EC2A  F005         	call	_setBitInRegister
  2066                           
  2067                           ;main.c: 543: while (regImg[2] == 0)
  2068  00070C  D004               	goto	l212
  2069  00070E                     l1809:
  2070                           
  2071                           ;main.c: 544: regImg[2] = regImg[0x13] & 0x0020;
  2072  00070E  0E20               	movlw	32
  2073  000710  144D               	andwf	_regImg+38,w,c
  2074  000712  6E2B               	movwf	_regImg+4,c
  2075  000714  6A2C               	clrf	_regImg+5,c
  2076  000716                     l212:
  2077  000716  502B               	movf	_regImg+4,w,c
  2078  000718  102C               	iorwf	_regImg+5,w,c
  2079  00071A  B4D8               	btfsc	status,2,c
  2080  00071C  D7F8               	goto	l1809
  2081                           
  2082                           ;main.c: 547: setHardmute(0);
  2083  00071E  0E00               	movlw	0
  2084  000720  EC3E  F007         	call	_setHardmute
  2085  000724  0012               	return		;funcret
  2086  000726                     __end_of_tuneWithAutoHiLo:
  2087                           	opt stack 0
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _setHardmute *****************
  2097 ;; Defined at:
  2098 ;;		line 374 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  bitState        1    wreg     unsigned char 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  bitState        1   17[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       0       0       0
  2113 ;;      Locals:         1       0       0       0
  2114 ;;      Temps:          0       0       0       0
  2115 ;;      Totals:         1       0       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    4
  2119 ;; This function calls:
  2120 ;;		_setBitInRegister
  2121 ;; This function is called by:
  2122 ;;		_seek
  2123 ;;		_tuneWithAutoHiLo
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128  000E7C                     __ptext10:
  2129                           	opt stack 0
  2130  000E7C                     _setHardmute:
  2131                           	opt stack 23
  2132                           
  2133                           ;incstack = 0
  2134                           ;setHardmute@bitState stored from wreg
  2135  000E7C  6E12               	movwf	setHardmute@bitState,c
  2136                           
  2137                           ;main.c: 375: setBitInRegister(hardmute_bit[0], hardmute_bit[1], bitState);
  2138  000E7E  0E3A               	movlw	low (_hardmute_bit+2)
  2139  000E80  6EF6               	movwf	tblptrl,c
  2140  000E82  0E03               	movlw	high (_hardmute_bit+2)
  2141  000E84  6EF7               	movwf	tblptrh,c
  2142  000E86                     	if	0	;tblptru may be non-zero
  2143  000E86                     	endif
  2144  000E86                     	if	0	;tblptru may be non-zero
  2145  000E86                     	endif
  2146  000E86  0008               	tblrd		*
  2147  000E88  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2148  000E8C  C012  F009         	movff	setHardmute@bitState,setBitInRegister@bitState
  2149  000E90  0E38               	movlw	low _hardmute_bit
  2150  000E92  6EF6               	movwf	tblptrl,c
  2151  000E94                     	if	1	;There is more than 1 active tblptr byte
  2152  000E94  0E03               	movlw	high _hardmute_bit
  2153  000E96  6EF7               	movwf	tblptrh,c
  2154  000E98                     	endif
  2155  000E98                     	if	0	;There are less than 3 active tblptr bytes
  2156  000E98                     	endif
  2157  000E98  0008               	tblrd		*
  2158  000E9A  50F5               	movf	tablat,w,c
  2159  000E9C  EC2A  F005         	call	_setBitInRegister
  2160  000EA0  0012               	return		;funcret
  2161  000EA2                     __end_of_setHardmute:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function _readLOInjection *****************
  2172 ;; Defined at:
  2173 ;;		line 437 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  loHi            1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  loHi            1   20[COMRAM] unsigned char 
  2178 ;;  rssi_val        1   21[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      unsigned char 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2188 ;;      Params:         0       0       0       0
  2189 ;;      Locals:         2       0       0       0
  2190 ;;      Temps:          3       0       0       0
  2191 ;;      Totals:         5       0       0       0
  2192 ;;Total ram usage:        5 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    4
  2195 ;; This function calls:
  2196 ;;		_FMwrite
  2197 ;;		_setBitInRegister
  2198 ;; This function is called by:
  2199 ;;		_tuneWithAutoHiLo
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text11
  2204  000B12                     __ptext11:
  2205                           	opt stack 0
  2206  000B12                     _readLOInjection:
  2207                           	opt stack 23
  2208                           
  2209                           ;incstack = 0
  2210                           ;readLOInjection@loHi stored from wreg
  2211  000B12  6E15               	movwf	readLOInjection@loHi,c
  2212                           
  2213                           ;main.c: 447: unsigned char rssi_val = 0;
  2214  000B14  0E00               	movlw	0
  2215  000B16  6E16               	movwf	readLOInjection@rssi_val,c
  2216                           
  2217                           ;main.c: 450: if (loHi == 1)
  2218  000B18  0415               	decf	readLOInjection@loHi,w,c
  2219  000B1A  A4D8               	btfss	status,2,c
  2220  000B1C  D006               	goto	l1753
  2221                           
  2222                           ;main.c: 451: regImg[11] = regImg[11] | ~(0x7FFA);
  2223  000B1E  0E05               	movlw	5
  2224  000B20  103D               	iorwf	_regImg+22,w,c
  2225  000B22  6E3D               	movwf	_regImg+22,c
  2226  000B24  0E80               	movlw	128
  2227  000B26  103E               	iorwf	_regImg+23,w,c
  2228  000B28  D005               	goto	L9
  2229  000B2A                     l1753:
  2230                           
  2231                           ;main.c: 452: else
  2232                           ;main.c: 453: regImg[11] = regImg[11] & 0x7FFA;
  2233  000B2A  0EFA               	movlw	250
  2234  000B2C  143D               	andwf	_regImg+22,w,c
  2235  000B2E  6E3D               	movwf	_regImg+22,c
  2236  000B30  0E7F               	movlw	127
  2237  000B32  143E               	andwf	_regImg+23,w,c
  2238  000B34                     L9:
  2239  000B34  6E3E               	movwf	_regImg+23,c
  2240                           
  2241                           ;main.c: 455: FMwrite(11);
  2242  000B36  0E0B               	movlw	11
  2243  000B38  ECDB  F005         	call	_FMwrite
  2244                           
  2245                           ;main.c: 458: setBitInRegister(tune_bit[0], tune_bit[1], 1);
  2246  000B3C  0E56               	movlw	low (_tune_bit+2)
  2247  000B3E  6EF6               	movwf	tblptrl,c
  2248  000B40  0E03               	movlw	high (_tune_bit+2)
  2249  000B42  6EF7               	movwf	tblptrh,c
  2250  000B44                     	if	0	;tblptru may be non-zero
  2251  000B44                     	endif
  2252  000B44                     	if	0	;tblptru may be non-zero
  2253  000B44                     	endif
  2254  000B44  0008               	tblrd		*
  2255  000B46  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2256  000B4A  0E01               	movlw	1
  2257  000B4C  6E09               	movwf	setBitInRegister@bitState,c
  2258  000B4E  0E54               	movlw	low _tune_bit
  2259  000B50  6EF6               	movwf	tblptrl,c
  2260  000B52                     	if	1	;There is more than 1 active tblptr byte
  2261  000B52  0E03               	movlw	high _tune_bit
  2262  000B54  6EF7               	movwf	tblptrh,c
  2263  000B56                     	endif
  2264  000B56                     	if	0	;There are less than 3 active tblptr bytes
  2265  000B56                     	endif
  2266  000B56  0008               	tblrd		*
  2267  000B58  50F5               	movf	tablat,w,c
  2268  000B5A  EC2A  F005         	call	_setBitInRegister
  2269                           
  2270                           ;main.c: 461: while (regImg[11] == 0)
  2271  000B5E  D004               	goto	l204
  2272  000B60                     l1759:
  2273                           
  2274                           ;main.c: 462: regImg[11] = regImg[0x13] & 0x0020;
  2275  000B60  0E20               	movlw	32
  2276  000B62  144D               	andwf	_regImg+38,w,c
  2277  000B64  6E3D               	movwf	_regImg+22,c
  2278  000B66  6A3E               	clrf	_regImg+23,c
  2279  000B68                     l204:
  2280  000B68  503D               	movf	_regImg+22,w,c
  2281  000B6A  103E               	iorwf	_regImg+23,w,c
  2282  000B6C  B4D8               	btfsc	status,2,c
  2283  000B6E  D7F8               	goto	l1759
  2284                           
  2285                           ;main.c: 465: rssi_val = (regImg[0x12] & 0xFE00) >> 9;
  2286  000B70  EE20  F04B         	lfsr	2,_regImg+36
  2287  000B74  CFDE F012          	movff	postinc2,??_readLOInjection
  2288  000B78  CFDD F013          	movff	postdec2,??_readLOInjection+1
  2289  000B7C  0E09               	movlw	9
  2290  000B7E  6E14               	movwf	(??_readLOInjection+2)& (0+255),c
  2291  000B80                     u1085:
  2292  000B80  90D8               	bcf	status,0,c
  2293  000B82  3213               	rrcf	??_readLOInjection+1,f,c
  2294  000B84  3212               	rrcf	??_readLOInjection,f,c
  2295  000B86  2E14               	decfsz	(??_readLOInjection+2)& (0+255),f,c
  2296  000B88  D7FB               	goto	u1085
  2297  000B8A  5012               	movf	??_readLOInjection,w,c
  2298  000B8C  0B7F               	andlw	127
  2299  000B8E  6E16               	movwf	readLOInjection@rssi_val,c
  2300                           
  2301                           ;main.c: 468: setBitInRegister(tune_bit[0], tune_bit[1], 0);
  2302  000B90  0E56               	movlw	low (_tune_bit+2)
  2303  000B92  6EF6               	movwf	tblptrl,c
  2304  000B94  0E03               	movlw	high (_tune_bit+2)
  2305  000B96  6EF7               	movwf	tblptrh,c
  2306  000B98                     	if	0	;tblptru may be non-zero
  2307  000B98                     	endif
  2308  000B98                     	if	0	;tblptru may be non-zero
  2309  000B98                     	endif
  2310  000B98  0008               	tblrd		*
  2311  000B9A  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2312  000B9E  0E00               	movlw	0
  2313  000BA0  6E09               	movwf	setBitInRegister@bitState,c
  2314  000BA2  0E54               	movlw	low _tune_bit
  2315  000BA4  6EF6               	movwf	tblptrl,c
  2316  000BA6                     	if	1	;There is more than 1 active tblptr byte
  2317  000BA6  0E03               	movlw	high _tune_bit
  2318  000BA8  6EF7               	movwf	tblptrh,c
  2319  000BAA                     	endif
  2320  000BAA                     	if	0	;There are less than 3 active tblptr bytes
  2321  000BAA                     	endif
  2322  000BAA  0008               	tblrd		*
  2323  000BAC  50F5               	movf	tablat,w,c
  2324  000BAE  EC2A  F005         	call	_setBitInRegister
  2325                           
  2326                           ;main.c: 470: return rssi_val;
  2327  000BB2  5016               	movf	readLOInjection@rssi_val,w,c
  2328  000BB4  0012               	return	
  2329  000BB6                     __end_of_readLOInjection:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           postinc2	equ	0xFDE
  2338                           postdec2	equ	0xFDD
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _frequency *****************
  2342 ;; Defined at:
  2343 ;;		line 550 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  data            2   18[COMRAM] unsigned short 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2   11[COMRAM] unsigned short 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2357 ;;      Params:         2       0       0       0
  2358 ;;      Locals:         2       0       0       0
  2359 ;;      Temps:          5       0       0       0
  2360 ;;      Totals:         9       0       0       0
  2361 ;;Total ram usage:        9 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    3
  2364 ;; This function calls:
  2365 ;;		_FMread
  2366 ;; This function is called by:
  2367 ;;		_seek
  2368 ;;		_tuneWithAutoHiLo
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text12
  2373  000E08                     __ptext12:
  2374                           	opt stack 0
  2375  000E08                     _frequency:
  2376                           	opt stack 24
  2377                           
  2378                           ;main.c: 551: unsigned short data;
  2379                           ;main.c: 552: FMread(0x13, &data);
  2380                           
  2381                           ;incstack = 0
  2382  000E08  0E13               	movlw	low frequency@data
  2383  000E0A  6E03               	movwf	FMread@data,c
  2384  000E0C  0E00               	movlw	high frequency@data
  2385  000E0E  6E04               	movwf	FMread@data+1,c
  2386  000E10  0E13               	movlw	19
  2387  000E12  ECFE  F003         	call	_FMread
  2388                           
  2389                           ;main.c: 553: return (((data & 0xFF80) >> 7) + 690);
  2390  000E16  0EFF               	movlw	255
  2391  000E18  6E0E               	movwf	??_frequency& (0+255),c
  2392  000E1A  0E01               	movlw	1
  2393  000E1C  6E0F               	movwf	(??_frequency+1)& (0+255),c
  2394  000E1E  C013  F010         	movff	frequency@data,??_frequency+2
  2395  000E22  C014  F011         	movff	frequency@data+1,??_frequency+3
  2396  000E26  0E07               	movlw	7
  2397  000E28  6E12               	movwf	(??_frequency+4)& (0+255),c
  2398  000E2A                     u1055:
  2399  000E2A  90D8               	bcf	status,0,c
  2400  000E2C  3211               	rrcf	??_frequency+3,f,c
  2401  000E2E  3210               	rrcf	??_frequency+2,f,c
  2402  000E30  2E12               	decfsz	(??_frequency+4)& (0+255),f,c
  2403  000E32  D7FB               	goto	u1055
  2404  000E34  500E               	movf	??_frequency,w,c
  2405  000E36  1610               	andwf	??_frequency+2,f,c
  2406  000E38  500F               	movf	??_frequency+1,w,c
  2407  000E3A  1611               	andwf	??_frequency+3,f,c
  2408  000E3C  0EB2               	movlw	178
  2409  000E3E  2410               	addwf	??_frequency+2,w,c
  2410  000E40  6E0C               	movwf	?_frequency,c
  2411  000E42  0E02               	movlw	2
  2412  000E44  2011               	addwfc	??_frequency+3,w,c
  2413  000E46  6E0D               	movwf	?_frequency+1,c
  2414  000E48  0012               	return	
  2415  000E4A                     __end_of_frequency:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           postinc0	equ	0xFEE
  2422                           wreg	equ	0xFE8
  2423                           postinc2	equ	0xFDE
  2424                           postdec2	equ	0xFDD
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _setSeekDirection *****************
  2428 ;; Defined at:
  2429 ;;		line 366 in file "main.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  direction       1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  direction       1   17[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2443 ;;      Params:         0       0       0       0
  2444 ;;      Locals:         1       0       0       0
  2445 ;;      Temps:          0       0       0       0
  2446 ;;      Totals:         1       0       0       0
  2447 ;;Total ram usage:        1 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    4
  2450 ;; This function calls:
  2451 ;;		_setBitInRegister
  2452 ;; This function is called by:
  2453 ;;		_seek
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text13
  2458  000D68                     __ptext13:
  2459                           	opt stack 0
  2460  000D68                     _setSeekDirection:
  2461                           	opt stack 24
  2462                           
  2463                           ;incstack = 0
  2464                           ;setSeekDirection@direction stored from wreg
  2465  000D68  6E12               	movwf	setSeekDirection@direction,c
  2466                           
  2467                           ;main.c: 368: if (direction == 'd')
  2468  000D6A  0E64               	movlw	100
  2469  000D6C  1812               	xorwf	setSeekDirection@direction,w,c
  2470  000D6E  A4D8               	btfss	status,2,c
  2471  000D70  D012               	goto	l1785
  2472                           
  2473                           ;main.c: 369: setBitInRegister(seekup_bit[0], seekup_bit[1], 0);
  2474  000D72  0E4E               	movlw	low (_seekup_bit+2)
  2475  000D74  6EF6               	movwf	tblptrl,c
  2476  000D76  0E03               	movlw	high (_seekup_bit+2)
  2477  000D78  6EF7               	movwf	tblptrh,c
  2478  000D7A                     	if	0	;tblptru may be non-zero
  2479  000D7A                     	endif
  2480  000D7A                     	if	0	;tblptru may be non-zero
  2481  000D7A                     	endif
  2482  000D7A  0008               	tblrd		*
  2483  000D7C  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2484  000D80  0E00               	movlw	0
  2485  000D82  6E09               	movwf	setBitInRegister@bitState,c
  2486  000D84  0E4C               	movlw	low _seekup_bit
  2487  000D86  6EF6               	movwf	tblptrl,c
  2488  000D88                     	if	1	;There is more than 1 active tblptr byte
  2489  000D88  0E03               	movlw	high _seekup_bit
  2490  000D8A  6EF7               	movwf	tblptrh,c
  2491  000D8C                     	endif
  2492  000D8C                     	if	0	;There are less than 3 active tblptr bytes
  2493  000D8C                     	endif
  2494  000D8C  0008               	tblrd		*
  2495  000D8E  50F5               	movf	tablat,w,c
  2496  000D90  EC2A  F005         	call	_setBitInRegister
  2497  000D94  0012               	return	
  2498  000D96                     l1785:
  2499                           
  2500                           ;main.c: 370: else if (direction == 'u')
  2501  000D96  0E75               	movlw	117
  2502  000D98  1812               	xorwf	setSeekDirection@direction,w,c
  2503  000D9A  A4D8               	btfss	status,2,c
  2504  000D9C  0012               	return	
  2505                           
  2506                           ;main.c: 371: setBitInRegister(seekup_bit[0], seekup_bit[1], 1);
  2507  000D9E  0E4E               	movlw	low (_seekup_bit+2)
  2508  000DA0  6EF6               	movwf	tblptrl,c
  2509  000DA2  0E03               	movlw	high (_seekup_bit+2)
  2510  000DA4  6EF7               	movwf	tblptrh,c
  2511  000DA6                     	if	0	;tblptru may be non-zero
  2512  000DA6                     	endif
  2513  000DA6                     	if	0	;tblptru may be non-zero
  2514  000DA6                     	endif
  2515  000DA6  0008               	tblrd		*
  2516  000DA8  CFF5 F008          	movff	tablat,setBitInRegister@bitRegister
  2517  000DAC  0E01               	movlw	1
  2518  000DAE  6E09               	movwf	setBitInRegister@bitState,c
  2519  000DB0  0E4C               	movlw	low _seekup_bit
  2520  000DB2  6EF6               	movwf	tblptrl,c
  2521  000DB4                     	if	1	;There is more than 1 active tblptr byte
  2522  000DB4  0E03               	movlw	high _seekup_bit
  2523  000DB6  6EF7               	movwf	tblptrh,c
  2524  000DB8                     	endif
  2525  000DB8                     	if	0	;There are less than 3 active tblptr bytes
  2526  000DB8                     	endif
  2527  000DB8  0008               	tblrd		*
  2528  000DBA  50F5               	movf	tablat,w,c
  2529  000DBC  EC2A  F005         	call	_setBitInRegister
  2530  000DC0  0012               	return	
  2531  000DC2                     __end_of_setSeekDirection:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postinc2	equ	0xFDE
  2540                           postdec2	equ	0xFDD
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _setBitInRegister *****************
  2544 ;; Defined at:
  2545 ;;		line 354 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  address         1    wreg     unsigned char 
  2548 ;;  bitRegister     1    7[COMRAM] unsigned char 
  2549 ;;  bitState        1    8[COMRAM] unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  address         1   16[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2561 ;;      Params:         2       0       0       0
  2562 ;;      Locals:         1       0       0       0
  2563 ;;      Temps:          7       0       0       0
  2564 ;;      Totals:        10       0       0       0
  2565 ;;Total ram usage:       10 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    3
  2568 ;; This function calls:
  2569 ;;		_FMwrite
  2570 ;; This function is called by:
  2571 ;;		_setSeekDirection
  2572 ;;		_setHardmute
  2573 ;;		_seek
  2574 ;;		_readLOInjection
  2575 ;;		_tuneWithAutoHiLo
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text14
  2580  000A54                     __ptext14:
  2581                           	opt stack 0
  2582  000A54                     _setBitInRegister:
  2583                           	opt stack 23
  2584                           
  2585                           ;incstack = 0
  2586                           ;setBitInRegister@address stored from wreg
  2587  000A54  6E11               	movwf	setBitInRegister@address,c
  2588                           
  2589                           ;main.c: 356: if (bitState == 1)
  2590  000A56  0409               	decf	setBitInRegister@bitState,w,c
  2591  000A58  A4D8               	btfss	status,2,c
  2592  000A5A  D02A               	goto	l1735
  2593                           
  2594                           ;main.c: 357: regImg[address] = regImg[address] | (1 << bitRegister);
  2595  000A5C  5011               	movf	setBitInRegister@address,w,c
  2596  000A5E  0D02               	mullw	2
  2597  000A60  0E27               	movlw	low _regImg
  2598  000A62  24F3               	addwf	prodl,w,c
  2599  000A64  6ED9               	movwf	fsr2l,c
  2600  000A66  0E00               	movlw	high _regImg
  2601  000A68  20F4               	addwfc	prodh,w,c
  2602  000A6A  6EDA               	movwf	fsr2h,c
  2603  000A6C  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2604  000A70  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2605  000A74  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2606  000A78  0E01               	movlw	1
  2607  000A7A  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2608  000A7C  0E00               	movlw	0
  2609  000A7E  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2610  000A80  2A0C               	incf	??_setBitInRegister+2,f,c
  2611  000A82  D003               	goto	u1034
  2612  000A84                     u1035:
  2613  000A84  90D8               	bcf	status,0,c
  2614  000A86  360D               	rlcf	??_setBitInRegister+3,f,c
  2615  000A88  360E               	rlcf	??_setBitInRegister+4,f,c
  2616  000A8A                     u1034:
  2617  000A8A  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2618  000A8C  D7FB               	goto	u1035
  2619  000A8E  500A               	movf	??_setBitInRegister,w,c
  2620  000A90  120D               	iorwf	??_setBitInRegister+3,f,c
  2621  000A92  500B               	movf	??_setBitInRegister+1,w,c
  2622  000A94  120E               	iorwf	??_setBitInRegister+4,f,c
  2623  000A96  5011               	movf	setBitInRegister@address,w,c
  2624  000A98  0D02               	mullw	2
  2625  000A9A  0E27               	movlw	low _regImg
  2626  000A9C  24F3               	addwf	prodl,w,c
  2627  000A9E  6ED9               	movwf	fsr2l,c
  2628  000AA0  0E00               	movlw	high _regImg
  2629  000AA2  20F4               	addwfc	prodh,w,c
  2630  000AA4  6EDA               	movwf	fsr2h,c
  2631  000AA6  C00D  FFDE         	movff	??_setBitInRegister+3,postinc2
  2632  000AAA  C00E  FFDD         	movff	??_setBitInRegister+4,postdec2
  2633  000AAE  D02D               	goto	l1737
  2634  000AB0                     l1735:
  2635                           
  2636                           ;main.c: 358: else
  2637                           ;main.c: 359: regImg[address] = regImg[address] & ~(1 << bitRegister);
  2638  000AB0  5011               	movf	setBitInRegister@address,w,c
  2639  000AB2  0D02               	mullw	2
  2640  000AB4  0E27               	movlw	low _regImg
  2641  000AB6  24F3               	addwf	prodl,w,c
  2642  000AB8  6ED9               	movwf	fsr2l,c
  2643  000ABA  0E00               	movlw	high _regImg
  2644  000ABC  20F4               	addwfc	prodh,w,c
  2645  000ABE  6EDA               	movwf	fsr2h,c
  2646  000AC0  CFDE F00A          	movff	postinc2,??_setBitInRegister
  2647  000AC4  CFDD F00B          	movff	postdec2,??_setBitInRegister+1
  2648  000AC8  C008  F00C         	movff	setBitInRegister@bitRegister,??_setBitInRegister+2
  2649  000ACC  0E01               	movlw	1
  2650  000ACE  6E0D               	movwf	(??_setBitInRegister+3)& (0+255),c
  2651  000AD0  0E00               	movlw	0
  2652  000AD2  6E0E               	movwf	(??_setBitInRegister+4)& (0+255),c
  2653  000AD4  2A0C               	incf	??_setBitInRegister+2,f,c
  2654  000AD6  D003               	goto	u1044
  2655  000AD8                     u1045:
  2656  000AD8  90D8               	bcf	status,0,c
  2657  000ADA  360D               	rlcf	??_setBitInRegister+3,f,c
  2658  000ADC  360E               	rlcf	??_setBitInRegister+4,f,c
  2659  000ADE                     u1044:
  2660  000ADE  2E0C               	decfsz	??_setBitInRegister+2,f,c
  2661  000AE0  D7FB               	goto	u1045
  2662  000AE2  1C0D               	comf	??_setBitInRegister+3,w,c
  2663  000AE4  6E0F               	movwf	(??_setBitInRegister+5)& (0+255),c
  2664  000AE6  1C0E               	comf	??_setBitInRegister+4,w,c
  2665  000AE8  6E10               	movwf	(??_setBitInRegister+6)& (0+255),c
  2666  000AEA  500A               	movf	??_setBitInRegister,w,c
  2667  000AEC  160F               	andwf	??_setBitInRegister+5,f,c
  2668  000AEE  500B               	movf	??_setBitInRegister+1,w,c
  2669  000AF0  1610               	andwf	??_setBitInRegister+6,f,c
  2670  000AF2  5011               	movf	setBitInRegister@address,w,c
  2671  000AF4  0D02               	mullw	2
  2672  000AF6  0E27               	movlw	low _regImg
  2673  000AF8  24F3               	addwf	prodl,w,c
  2674  000AFA  6ED9               	movwf	fsr2l,c
  2675  000AFC  0E00               	movlw	high _regImg
  2676  000AFE  20F4               	addwfc	prodh,w,c
  2677  000B00  6EDA               	movwf	fsr2h,c
  2678  000B02  C00F  FFDE         	movff	??_setBitInRegister+5,postinc2
  2679  000B06  C010  FFDD         	movff	??_setBitInRegister+6,postdec2
  2680  000B0A                     l1737:
  2681                           
  2682                           ;main.c: 361: FMwrite(address);
  2683  000B0A  5011               	movf	setBitInRegister@address,w,c
  2684  000B0C  ECDB  F005         	call	_FMwrite
  2685  000B10  0012               	return		;funcret
  2686  000B12                     __end_of_setBitInRegister:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           postinc0	equ	0xFEE
  2695                           wreg	equ	0xFE8
  2696                           postinc2	equ	0xFDE
  2697                           postdec2	equ	0xFDD
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _SeekUP *****************
  2703 ;; Defined at:
  2704 ;;		line 776 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2718 ;;      Params:         0       0       0       0
  2719 ;;      Locals:         0       0       0       0
  2720 ;;      Temps:          0       0       0       0
  2721 ;;      Totals:         0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    1
  2725 ;; This function calls:
  2726 ;;		_delay_10ms
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text15
  2733  000F88                     __ptext15:
  2734                           	opt stack 0
  2735  000F88                     _SeekUP:
  2736                           	opt stack 29
  2737                           
  2738                           ;main.c: 778: PORTCbits.RC7 = 1;
  2739                           
  2740                           ;incstack = 0
  2741  000F88  8E82               	bsf	3970,7,c	;volatile
  2742                           
  2743                           ;main.c: 779: delay_10ms(10);
  2744  000F8A  0E00               	movlw	0
  2745  000F8C  6E02               	movwf	delay_10ms@n+1,c
  2746  000F8E  0E0A               	movlw	10
  2747  000F90  6E01               	movwf	delay_10ms@n,c
  2748  000F92  EC51  F007         	call	_delay_10ms	;wreg free
  2749                           
  2750                           ;main.c: 780: PORTCbits.RC7 = 0;
  2751  000F96  9E82               	bcf	3970,7,c	;volatile
  2752  000F98  0012               	return	
  2753  000F9A                     __end_of_SeekUP:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodh	equ	0xFF4
  2760                           prodl	equ	0xFF3
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           fsr2h	equ	0xFDA
  2766                           fsr2l	equ	0xFD9
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _SeekDOWN *****************
  2770 ;; Defined at:
  2771 ;;		line 785 in file "main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2785 ;;      Params:         0       0       0       0
  2786 ;;      Locals:         0       0       0       0
  2787 ;;      Temps:          0       0       0       0
  2788 ;;      Totals:         0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    1
  2792 ;; This function calls:
  2793 ;;		_delay_10ms
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text16
  2800  000F9A                     __ptext16:
  2801                           	opt stack 0
  2802  000F9A                     _SeekDOWN:
  2803                           	opt stack 29
  2804                           
  2805                           ;main.c: 787: PORTCbits.RC7 = 1;
  2806                           
  2807                           ;incstack = 0
  2808  000F9A  8E82               	bsf	3970,7,c	;volatile
  2809                           
  2810                           ;main.c: 788: delay_10ms(10);
  2811  000F9C  0E00               	movlw	0
  2812  000F9E  6E02               	movwf	delay_10ms@n+1,c
  2813  000FA0  0E0A               	movlw	10
  2814  000FA2  6E01               	movwf	delay_10ms@n,c
  2815  000FA4  EC51  F007         	call	_delay_10ms	;wreg free
  2816                           
  2817                           ;main.c: 789: PORTCbits.RC7 = 0;
  2818  000FA8  9E82               	bcf	3970,7,c	;volatile
  2819  000FAA  0012               	return	
  2820  000FAC                     __end_of_SeekDOWN:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postinc2	equ	0xFDE
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _delay_10ms *****************
  2837 ;; Defined at:
  2838 ;;		line 868 in file "main.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  n               2    0[COMRAM] unsigned int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2852 ;;      Params:         2       0       0       0
  2853 ;;      Locals:         0       0       0       0
  2854 ;;      Temps:          1       0       0       0
  2855 ;;      Totals:         3       0       0       0
  2856 ;;Total ram usage:        3 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_nextChannel
  2862 ;;		_previousChannel
  2863 ;;		_VolumeUp
  2864 ;;		_VolumeDown
  2865 ;;		_SeekUP
  2866 ;;		_SeekDOWN
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text17
  2871  000EA2                     __ptext17:
  2872                           	opt stack 0
  2873  000EA2                     _delay_10ms:
  2874                           	opt stack 29
  2875                           
  2876                           ;main.c: 869: while (n-- != 0) {
  2877                           
  2878                           ;incstack = 0
  2879  000EA2  D007               	goto	l1895
  2880  000EA4                     l1893:
  2881                           
  2882                           ;main.c: 870: _delay((unsigned long)((12)*(8000000/4000.0)));
  2883  000EA4  0E20               	movlw	32
  2884  000EA6  6E03               	movwf	??_delay_10ms& (0+255),c
  2885  000EA8  0E2A               	movlw	42
  2886  000EAA                     u1757:
  2887  000EAA  2EE8               	decfsz	wreg,f,c
  2888  000EAC  D7FE               	goto	u1757
  2889  000EAE  2E03               	decfsz	??_delay_10ms& (0+255),f,c
  2890  000EB0  D7FC               	goto	u1757
  2891  000EB2                     l1895:
  2892  000EB2  0601               	decf	delay_10ms@n,f,c
  2893  000EB4  A0D8               	btfss	status,0,c
  2894  000EB6  0602               	decf	delay_10ms@n+1,f,c
  2895  000EB8  2801               	incf	delay_10ms@n,w,c
  2896  000EBA  E1F4               	bnz	l1893
  2897  000EBC  2802               	incf	delay_10ms@n+1,w,c
  2898  000EBE  B4D8               	btfsc	status,2,c
  2899  000EC0  0012               	return	
  2900  000EC2  D7F0               	goto	l1893
  2901  000EC4                     __end_of_delay_10ms:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _MuteHard *****************
  2918 ;; Defined at:
  2919 ;;		line 770 in file "main.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  down            1    wreg     unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  down            1    0[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2933 ;;      Params:         0       0       0       0
  2934 ;;      Locals:         0       0       0       0
  2935 ;;      Temps:          0       0       0       0
  2936 ;;      Totals:         0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text18
  2947  000FD0                     __ptext18:
  2948                           	opt stack 0
  2949  000FD0                     _MuteHard:
  2950                           	opt stack 30
  2951                           
  2952                           ;main.c: 773: return 0;
  2953                           ;	Return value of _MuteHard is never used
  2954                           
  2955                           ;incstack = 0
  2956  000FD0  0012               	return		;funcret
  2957  000FD2                     __end_of_MuteHard:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           postinc2	equ	0xFDE
  2968                           postdec2	equ	0xFDD
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _Init *****************
  2974 ;; Defined at:
  2975 ;;		line 207 in file "main.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  i               2    0        int 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2989 ;;      Params:         0       0       0       0
  2990 ;;      Locals:         0       0       0       0
  2991 ;;      Temps:          0       0       0       0
  2992 ;;      Totals:         0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		_OpenI2C
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text19
  3004  000CAA                     __ptext19:
  3005                           	opt stack 0
  3006  000CAA                     _Init:
  3007                           	opt stack 29
  3008                           
  3009                           ;main.c: 209: int i;
  3010                           ;main.c: 211: OSCCON = 0b01110010;
  3011                           
  3012                           ;incstack = 0
  3013  000CAA  0E72               	movlw	114
  3014  000CAC  6ED3               	movwf	4051,c	;volatile
  3015                           
  3016                           ;main.c: 212: LCDSE0 = 0b11111111;
  3017  000CAE  010F               	movlb	15	; () banked
  3018  000CB0  695A               	setf	90,b	;volatile
  3019                           
  3020                           ; BSR set to: 15
  3021                           ;main.c: 213: LCDSE1 = 0b11111111;
  3022  000CB2  010F               	movlb	15	; () banked
  3023  000CB4  695B               	setf	91,b	;volatile
  3024                           
  3025                           ; BSR set to: 15
  3026                           ;main.c: 214: LCDSE2 = 0b11111111;
  3027  000CB6  010F               	movlb	15	; () banked
  3028  000CB8  695C               	setf	92,b	;volatile
  3029                           
  3030                           ;main.c: 215: LCDSE3 = 0b00000000;
  3031  000CBA  0E00               	movlw	0
  3032  000CBC  010F               	movlb	15	; () banked
  3033  000CBE  6F5D               	movwf	93,b	;volatile
  3034                           
  3035                           ;main.c: 216: LCDCON = 0b10001000;
  3036  000CC0  0E88               	movlw	136
  3037  000CC2  010F               	movlb	15	; () banked
  3038  000CC4  6F59               	movwf	89,b	;volatile
  3039                           
  3040                           ;main.c: 217: LCDPS = 0b00110110;
  3041  000CC6  0E36               	movlw	54
  3042  000CC8  010F               	movlb	15	; () banked
  3043  000CCA  6F58               	movwf	88,b	;volatile
  3044                           
  3045                           ;main.c: 218: ADCON1 = 0b00111111;
  3046  000CCC  0E3F               	movlw	63
  3047  000CCE  6EC1               	movwf	4033,c	;volatile
  3048                           
  3049                           ;main.c: 219: TRISA = 0b00000011;
  3050  000CD0  0E03               	movlw	3
  3051  000CD2  6E92               	movwf	3986,c	;volatile
  3052                           
  3053                           ;main.c: 220: TRISB = 0b00100001;
  3054  000CD4  0E21               	movlw	33
  3055  000CD6  6E93               	movwf	3987,c	;volatile
  3056                           
  3057                           ;main.c: 221: TRISC = 0b00011000;
  3058  000CD8  0E18               	movlw	24
  3059  000CDA  6E94               	movwf	3988,c	;volatile
  3060                           
  3061                           ; BSR set to: 15
  3062                           ;main.c: 222: TRISG = 0b11111111;
  3063  000CDC  6898               	setf	3992,c	;volatile
  3064                           
  3065                           ;main.c: 223: PORTA = 0;
  3066  000CDE  0E00               	movlw	0
  3067  000CE0  6E80               	movwf	3968,c	;volatile
  3068                           
  3069                           ;main.c: 224: PORTB = 0;
  3070  000CE2  0E00               	movlw	0
  3071  000CE4  6E81               	movwf	3969,c	;volatile
  3072                           
  3073                           ;main.c: 225: PORTC = 0;
  3074  000CE6  0E00               	movlw	0
  3075  000CE8  6E82               	movwf	3970,c	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078                           ;main.c: 226: INTCONbits.TMR0IF = 0;
  3079  000CEA  94F2               	bcf	intcon,2,c	;volatile
  3080                           
  3081                           ;main.c: 228: T0CON = 0b00001000;
  3082  000CEC  0E08               	movlw	8
  3083  000CEE  6ED5               	movwf	4053,c	;volatile
  3084                           
  3085                           ;main.c: 229: TMR0H = 0;
  3086  000CF0  0E00               	movlw	0
  3087  000CF2  6ED7               	movwf	4055,c	;volatile
  3088                           
  3089                           ;main.c: 230: TMR0L = 0;
  3090  000CF4  0E00               	movlw	0
  3091  000CF6  6ED6               	movwf	4054,c	;volatile
  3092                           
  3093                           ; BSR set to: 15
  3094                           ;main.c: 231: T0CONbits.TMR0ON = 1;
  3095  000CF8  8ED5               	bsf	4053,7,c	;volatile
  3096                           
  3097                           ; BSR set to: 15
  3098                           ;main.c: 232: OpenI2C(0b00001000, 0b10000000);
  3099  000CFA  0E80               	movlw	128
  3100  000CFC  6E01               	movwf	OpenI2C@slew,c
  3101  000CFE  0E08               	movlw	8
  3102  000D00  EC80  F007         	call	_OpenI2C
  3103                           
  3104                           ;main.c: 233: SSPADD = 0x3F;
  3105  000D04  0E3F               	movlw	63
  3106  000D06  6EC8               	movwf	4040,c	;volatile
  3107  000D08  0012               	return	
  3108  000D0A                     __end_of_Init:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function _OpenI2C *****************
  3126 ;; Defined at:
  3127 ;;		line 14 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_open.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  sync_mode       1    wreg     unsigned char 
  3130 ;;  slew            1    0[COMRAM] unsigned char 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3142 ;;      Params:         1       0       0       0
  3143 ;;      Locals:         1       0       0       0
  3144 ;;      Temps:          0       0       0       0
  3145 ;;      Totals:         2       0       0       0
  3146 ;;Total ram usage:        2 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_Init
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text20
  3156  000F00                     __ptext20:
  3157                           	opt stack 0
  3158  000F00                     _OpenI2C:
  3159                           	opt stack 29
  3160                           
  3161                           ;incstack = 0
  3162                           ;OpenI2C@sync_mode stored from wreg
  3163  000F00  6E02               	movwf	OpenI2C@sync_mode,c
  3164  000F02  0E3F               	movlw	63
  3165  000F04  16C7               	andwf	4039,f,c	;volatile
  3166  000F06  0E00               	movlw	0
  3167  000F08  6EC6               	movwf	4038,c	;volatile
  3168  000F0A  0E00               	movlw	0
  3169  000F0C  6EC5               	movwf	4037,c	;volatile
  3170  000F0E  5002               	movf	OpenI2C@sync_mode,w,c
  3171  000F10  12C6               	iorwf	4038,f,c	;volatile
  3172  000F12  5001               	movf	OpenI2C@slew,w,c
  3173  000F14  12C7               	iorwf	4039,f,c	;volatile
  3174  000F16  8694               	bsf	3988,3,c	;volatile
  3175  000F18  8894               	bsf	3988,4,c	;volatile
  3176  000F1A  8AC6               	bsf	4038,5,c	;volatile
  3177  000F1C  0012               	return		;funcret
  3178  000F1E                     __end_of_OpenI2C:
  3179                           	opt stack 0
  3180                           tblptru	equ	0xFF8
  3181                           tblptrh	equ	0xFF7
  3182                           tblptrl	equ	0xFF6
  3183                           tablat	equ	0xFF5
  3184                           prodh	equ	0xFF4
  3185                           prodl	equ	0xFF3
  3186                           intcon	equ	0xFF2
  3187                           postinc0	equ	0xFEE
  3188                           wreg	equ	0xFE8
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _FMvers *****************
  3196 ;; Defined at:
  3197 ;;		line 693 in file "main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  3200 ;;		 -> main@ui(2), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      unsigned char 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3212 ;;      Params:         2       0       0       0
  3213 ;;      Locals:         0       0       0       0
  3214 ;;      Temps:          0       0       0       0
  3215 ;;      Totals:         2       0       0       0
  3216 ;;Total ram usage:        2 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    3
  3219 ;; This function calls:
  3220 ;;		_FMread
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text21
  3227  000FBE                     __ptext21:
  3228                           	opt stack 0
  3229  000FBE                     _FMvers:
  3230                           	opt stack 27
  3231                           
  3232                           ;main.c: 694: if (FMread(0x1C, vsn) != 0) return 1;
  3233                           
  3234                           ;incstack = 0
  3235  000FBE  C00C  F003         	movff	FMvers@vsn,FMread@data
  3236  000FC2  C00D  F004         	movff	FMvers@vsn+1,FMread@data+1
  3237  000FC6  0E1C               	movlw	28
  3238  000FC8  ECFE  F003         	call	_FMread
  3239                           
  3240                           ;	Return value of _FMvers is never used
  3241  000FCC  0012               	return	
  3242  000FCE                     __end_of_FMvers:
  3243                           	opt stack 0
  3244                           tblptru	equ	0xFF8
  3245                           tblptrh	equ	0xFF7
  3246                           tblptrl	equ	0xFF6
  3247                           tablat	equ	0xFF5
  3248                           prodh	equ	0xFF4
  3249                           prodl	equ	0xFF3
  3250                           intcon	equ	0xFF2
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           postinc2	equ	0xFDE
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _FMinit *****************
  3260 ;; Defined at:
  3261 ;;		line 587 in file "main.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  dat             2   17[COMRAM] unsigned int 
  3266 ;;  ad              1   19[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3276 ;;      Params:         0       0       0       0
  3277 ;;      Locals:         3       0       0       0
  3278 ;;      Temps:          0       0       0       0
  3279 ;;      Totals:         3       0       0       0
  3280 ;;Total ram usage:        3 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    4
  3283 ;; This function calls:
  3284 ;;		_FMready
  3285 ;;		_FMwrite
  3286 ;;		_dly
  3287 ;;		_showFreq
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text22
  3294  00098E                     __ptext22:
  3295                           	opt stack 0
  3296  00098E                     _FMinit:
  3297                           	opt stack 26
  3298                           
  3299                           ;main.c: 589: unsigned char ad;
  3300                           ;main.c: 590: unsigned int dat;
  3301                           ;main.c: 593: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  3302                           
  3303                           ;incstack = 0
  3304  00098E  0E00               	movlw	0
  3305  000990  6E14               	movwf	FMinit@ad,c
  3306  000992                     l2049:
  3307  000992  0E11               	movlw	17
  3308  000994  6414               	cpfsgt	FMinit@ad,c
  3309  000996  D001               	goto	l2053
  3310  000998  D018               	goto	l226
  3311  00099A                     l2053:
  3312  00099A  5014               	movf	FMinit@ad,w,c
  3313  00099C  0D02               	mullw	2
  3314  00099E  0E01               	movlw	low _regDflt
  3315  0009A0  24F3               	addwf	prodl,w,c
  3316  0009A2  6EF6               	movwf	tblptrl,c
  3317  0009A4  0E03               	movlw	high _regDflt
  3318  0009A6  20F4               	addwfc	prodh,w,c
  3319  0009A8  6EF7               	movwf	tblptrh,c
  3320  0009AA                     	if	0	;There are less than 3 active tblptr bytes
  3321  0009AA                     	endif
  3322  0009AA  5014               	movf	FMinit@ad,w,c
  3323  0009AC  0D02               	mullw	2
  3324  0009AE  0E27               	movlw	low _regImg
  3325  0009B0  24F3               	addwf	prodl,w,c
  3326  0009B2  6ED9               	movwf	fsr2l,c
  3327  0009B4  0E00               	movlw	high _regImg
  3328  0009B6  20F4               	addwfc	prodh,w,c
  3329  0009B8  6EDA               	movwf	fsr2h,c
  3330  0009BA  0009               	tblrd		*+
  3331  0009BC  CFF5 FFDE          	movff	tablat,postinc2
  3332  0009C0  0008               	tblrd		*
  3333  0009C2  CFF5 FFDD          	movff	tablat,postdec2
  3334  0009C6  2A14               	incf	FMinit@ad,f,c
  3335  0009C8  D7E4               	goto	l2049
  3336  0009CA                     l226:
  3337                           
  3338                           ;main.c: 595: dat = regImg[0];
  3339  0009CA  C027  F012         	movff	_regImg,FMinit@dat
  3340  0009CE  C028  F013         	movff	_regImg+1,FMinit@dat+1
  3341                           
  3342                           ;main.c: 596: regImg[0] &= ~1;
  3343  0009D2  9027               	bcf	_regImg,0,c
  3344                           
  3345                           ;main.c: 597: if (FMwrite(0) != 0) return 1;
  3346  0009D4  0E00               	movlw	0
  3347  0009D6  ECDB  F005         	call	_FMwrite
  3348  0009DA  0900               	iorlw	0
  3349  0009DC  B4D8               	btfsc	status,2,c
  3350  0009DE  D002               	goto	l2067
  3351  0009E0  0E01               	movlw	1
  3352  0009E2  0012               	return	
  3353  0009E4                     l2067:
  3354                           
  3355                           ;main.c: 598: for (ad = 1; ad < 18; ad++) {
  3356  0009E4  0E01               	movlw	1
  3357  0009E6  6E14               	movwf	FMinit@ad,c
  3358  0009E8                     l2069:
  3359  0009E8  0E11               	movlw	17
  3360  0009EA  6414               	cpfsgt	FMinit@ad,c
  3361  0009EC  D001               	goto	l2073
  3362  0009EE  D00A               	goto	l2083
  3363  0009F0                     l2073:
  3364                           
  3365                           ;main.c: 599: if (FMwrite(ad) != 0)return 1;
  3366  0009F0  5014               	movf	FMinit@ad,w,c
  3367  0009F2  ECDB  F005         	call	_FMwrite
  3368  0009F6  0900               	iorlw	0
  3369  0009F8  B4D8               	btfsc	status,2,c
  3370  0009FA  D002               	goto	l2079
  3371  0009FC  0E01               	movlw	1
  3372  0009FE  0012               	return	
  3373  000A00                     l2079:
  3374  000A00  2A14               	incf	FMinit@ad,f,c
  3375  000A02  D7F2               	goto	l2069
  3376  000A04                     l2083:
  3377                           
  3378                           ;main.c: 600: }
  3379                           ;main.c: 602: regImg[0] = dat | 1;
  3380  000A04  0E01               	movlw	1
  3381  000A06  1012               	iorwf	FMinit@dat,w,c
  3382  000A08  6E27               	movwf	_regImg,c
  3383  000A0A  5013               	movf	FMinit@dat+1,w,c
  3384  000A0C  6E28               	movwf	_regImg+1,c
  3385                           
  3386                           ;main.c: 603: if (FMwrite(0) != 0) return 1;
  3387  000A0E  0E00               	movlw	0
  3388  000A10  ECDB  F005         	call	_FMwrite
  3389  000A14  0900               	iorlw	0
  3390  000A16  B4D8               	btfsc	status,2,c
  3391  000A18  D002               	goto	l2091
  3392  000A1A  0E01               	movlw	1
  3393  000A1C  0012               	return	
  3394  000A1E                     l2091:
  3395                           
  3396                           ;main.c: 604: dly(20);
  3397  000A1E  0E00               	movlw	0
  3398  000A20  6E02               	movwf	dly@d+1,c
  3399  000A22  0E14               	movlw	20
  3400  000A24  6E01               	movwf	dly@d,c
  3401  000A26  EC25  F007         	call	_dly	;wreg free
  3402                           
  3403                           ;main.c: 605: while (FMready(&dat), !dat) dly(2);
  3404  000A2A  D006               	goto	l2095
  3405  000A2C                     l2093:
  3406  000A2C  0E00               	movlw	0
  3407  000A2E  6E02               	movwf	dly@d+1,c
  3408  000A30  0E02               	movlw	2
  3409  000A32  6E01               	movwf	dly@d,c
  3410  000A34  EC25  F007         	call	_dly	;wreg free
  3411  000A38                     l2095:
  3412  000A38  0E12               	movlw	low FMinit@dat
  3413  000A3A  6E0C               	movwf	FMready@rdy,c
  3414  000A3C  0E00               	movlw	high FMinit@dat
  3415  000A3E  6E0D               	movwf	FMready@rdy+1,c
  3416  000A40  ECE1  F006         	call	_FMready	;wreg free
  3417  000A44  5012               	movf	FMinit@dat,w,c
  3418  000A46  1013               	iorwf	FMinit@dat+1,w,c
  3419  000A48  B4D8               	btfsc	status,2,c
  3420  000A4A  D7F0               	goto	l2093
  3421                           
  3422                           ;main.c: 606: showFreq();
  3423  000A4C  ECE9  F007         	call	_showFreq	;wreg free
  3424                           
  3425                           ;main.c: 607: return 0;
  3426  000A50  0E00               	movlw	0
  3427  000A52  0012               	return	
  3428  000A54                     __end_of_FMinit:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function _showFreq *****************
  3446 ;; Defined at:
  3447 ;;		line 821 in file "main.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      unsigned char 
  3454 ;; Registers used:
  3455 ;;		None
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3461 ;;      Params:         0       0       0       0
  3462 ;;      Locals:         0       0       0       0
  3463 ;;      Temps:          0       0       0       0
  3464 ;;      Totals:         0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_FMinit
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text23
  3475  000FD2                     __ptext23:
  3476                           	opt stack 0
  3477  000FD2                     _showFreq:
  3478                           	opt stack 29
  3479                           
  3480                           ;main.c: 823: ;
  3481                           ;main.c: 824: return 0;
  3482                           ;	Return value of _showFreq is never used
  3483                           
  3484                           ;incstack = 0
  3485  000FD2  0012               	return		;funcret
  3486  000FD4                     __end_of_showFreq:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon	equ	0xFF2
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postinc2	equ	0xFDE
  3498                           postdec2	equ	0xFDD
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _dly *****************
  3504 ;; Defined at:
  3505 ;;		line 176 in file "main.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  d               2    0[COMRAM] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  i               2    2[COMRAM] int 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3519 ;;      Params:         2       0       0       0
  3520 ;;      Locals:         2       0       0       0
  3521 ;;      Temps:          0       0       0       0
  3522 ;;      Totals:         4       0       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_FMinit
  3529 ;;		_FMfrequenc
  3530 ;;		_main
  3531 ;;		_setVolume
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text24
  3536  000E4A                     __ptext24:
  3537                           	opt stack 0
  3538  000E4A                     _dly:
  3539                           	opt stack 28
  3540                           
  3541                           ;main.c: 178: int i = 0;
  3542                           
  3543                           ;incstack = 0
  3544  000E4A  0E00               	movlw	0
  3545  000E4C  6E04               	movwf	dly@i+1,c
  3546  000E4E  0E00               	movlw	0
  3547  000E50  6E03               	movwf	dly@i,c
  3548                           
  3549                           ;main.c: 180: for (; d; --d)
  3550  000E52  D00F               	goto	l1779
  3551  000E54                     l1771:
  3552                           
  3553                           ;main.c: 181: for (i = 100; i; --i);
  3554  000E54  0E00               	movlw	0
  3555  000E56  6E04               	movwf	dly@i+1,c
  3556  000E58  0E64               	movlw	100
  3557  000E5A  6E03               	movwf	dly@i,c
  3558  000E5C  D003               	goto	l1775
  3559  000E5E                     l1773:
  3560  000E5E  0603               	decf	dly@i,f,c
  3561  000E60  A0D8               	btfss	status,0,c
  3562  000E62  0604               	decf	dly@i+1,f,c
  3563  000E64                     l1775:
  3564  000E64  5003               	movf	dly@i,w,c
  3565  000E66  1004               	iorwf	dly@i+1,w,c
  3566  000E68  A4D8               	btfss	status,2,c
  3567  000E6A  D7F9               	goto	l1773
  3568  000E6C  0601               	decf	dly@d,f,c
  3569  000E6E  A0D8               	btfss	status,0,c
  3570  000E70  0602               	decf	dly@d+1,f,c
  3571  000E72                     l1779:
  3572  000E72  5001               	movf	dly@d,w,c
  3573  000E74  1002               	iorwf	dly@d+1,w,c
  3574  000E76  B4D8               	btfsc	status,2,c
  3575  000E78  0012               	return	
  3576  000E7A  D7EC               	goto	l1771
  3577  000E7C                     __end_of_dly:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           postinc0	equ	0xFEE
  3587                           wreg	equ	0xFE8
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _FMwrite *****************
  3595 ;; Defined at:
  3596 ;;		line 275 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  adr             1    wreg     unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  adr             1    6[COMRAM] unsigned char 
  3601 ;;  regstr          2    0        unsigned int 
  3602 ;;  secndByt        1    5[COMRAM] unsigned char 
  3603 ;;  firstByt        1    4[COMRAM] unsigned char 
  3604 ;;  rpy             1    0        unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3614 ;;      Params:         0       0       0       0
  3615 ;;      Locals:         3       0       0       0
  3616 ;;      Temps:          2       0       0       0
  3617 ;;      Totals:         5       0       0       0
  3618 ;;Total ram usage:        5 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    2
  3621 ;; This function calls:
  3622 ;;		_IdleI2C
  3623 ;;		_WriteI2C
  3624 ;; This function is called by:
  3625 ;;		_setBitInRegister
  3626 ;;		_seek
  3627 ;;		_readLOInjection
  3628 ;;		_tuneWithAutoHiLo
  3629 ;;		_FMinit
  3630 ;;		_FMfrequenc
  3631 ;;		_setVolume
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text25
  3636  000BB6                     __ptext25:
  3637                           	opt stack 0
  3638  000BB6                     _FMwrite:
  3639                           	opt stack 26
  3640                           
  3641                           ;incstack = 0
  3642                           ;FMwrite@adr stored from wreg
  3643  000BB6  6E07               	movwf	FMwrite@adr,c
  3644                           
  3645                           ;main.c: 277: unsigned int regstr;
  3646                           ;main.c: 278: unsigned char firstByt;
  3647                           ;main.c: 279: unsigned char secndByt;
  3648                           ;main.c: 280: unsigned char rpy;
  3649                           ;main.c: 282: firstByt = regImg[adr] >> 8;
  3650  000BB8  5007               	movf	FMwrite@adr,w,c
  3651  000BBA  0D02               	mullw	2
  3652  000BBC  0E27               	movlw	low _regImg
  3653  000BBE  24F3               	addwf	prodl,w,c
  3654  000BC0  6ED9               	movwf	fsr2l,c
  3655  000BC2  0E00               	movlw	high _regImg
  3656  000BC4  20F4               	addwfc	prodh,w,c
  3657  000BC6  6EDA               	movwf	fsr2h,c
  3658  000BC8  CFDE F003          	movff	postinc2,??_FMwrite
  3659  000BCC  CFDD F004          	movff	postdec2,??_FMwrite+1
  3660  000BD0  C004  F003         	movff	??_FMwrite+1,??_FMwrite
  3661  000BD4  6A04               	clrf	??_FMwrite+1,c
  3662  000BD6  5003               	movf	??_FMwrite,w,c
  3663  000BD8  6E05               	movwf	FMwrite@firstByt,c
  3664                           
  3665                           ;main.c: 283: secndByt = regImg[adr];
  3666  000BDA  5007               	movf	FMwrite@adr,w,c
  3667  000BDC  0D02               	mullw	2
  3668  000BDE  0E27               	movlw	low _regImg
  3669  000BE0  24F3               	addwf	prodl,w,c
  3670  000BE2  6ED9               	movwf	fsr2l,c
  3671  000BE4  0E00               	movlw	high _regImg
  3672  000BE6  20F4               	addwfc	prodh,w,c
  3673  000BE8  6EDA               	movwf	fsr2h,c
  3674  000BEA  50DF               	movf	indf2,w,c
  3675  000BEC  6E06               	movwf	FMwrite@secndByt,c
  3676                           
  3677                           ;main.c: 285: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3678  000BEE  80C5               	bsf	4037,0,c	;volatile
  3679  000BF0                     l152:
  3680  000BF0  B0C5               	btfsc	4037,0,c	;volatile
  3681  000BF2  D7FE               	goto	l152
  3682                           
  3683                           ;main.c: 286: IdleI2C();
  3684  000BF4  ECD6  F007         	call	_IdleI2C	;wreg free
  3685                           
  3686                           ;main.c: 289: if (WriteI2C(0x20)) return 1;
  3687  000BF8  0E20               	movlw	32
  3688  000BFA  EC85  F006         	call	_WriteI2C
  3689  000BFE  0900               	iorlw	0
  3690  000C00  B4D8               	btfsc	status,2,c
  3691  000C02  D002               	goto	l1065
  3692  000C04  0E01               	movlw	1
  3693  000C06  0012               	return	
  3694  000C08                     l1065:
  3695                           
  3696                           ;main.c: 290: IdleI2C();
  3697  000C08  ECD6  F007         	call	_IdleI2C	;wreg free
  3698                           
  3699                           ;main.c: 291: WriteI2C(adr);
  3700  000C0C  5007               	movf	FMwrite@adr,w,c
  3701  000C0E  EC85  F006         	call	_WriteI2C
  3702                           
  3703                           ;main.c: 292: IdleI2C();
  3704  000C12  ECD6  F007         	call	_IdleI2C	;wreg free
  3705                           
  3706                           ;main.c: 293: WriteI2C(firstByt);
  3707  000C16  5005               	movf	FMwrite@firstByt,w,c
  3708  000C18  EC85  F006         	call	_WriteI2C
  3709                           
  3710                           ;main.c: 294: IdleI2C();
  3711  000C1C  ECD6  F007         	call	_IdleI2C	;wreg free
  3712                           
  3713                           ;main.c: 295: WriteI2C(secndByt);
  3714  000C20  5006               	movf	FMwrite@secndByt,w,c
  3715  000C22  EC85  F006         	call	_WriteI2C
  3716                           
  3717                           ;main.c: 296: IdleI2C();
  3718  000C26  ECD6  F007         	call	_IdleI2C	;wreg free
  3719                           
  3720                           ;main.c: 297: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3721  000C2A  84C5               	bsf	4037,2,c	;volatile
  3722  000C2C                     l157:
  3723  000C2C  B4C5               	btfsc	4037,2,c	;volatile
  3724  000C2E  D7FE               	goto	l157
  3725                           
  3726                           ;main.c: 298: IdleI2C();
  3727  000C30  ECD6  F007         	call	_IdleI2C	;wreg free
  3728                           
  3729                           ;main.c: 299: return 0;
  3730  000C34  0E00               	movlw	0
  3731  000C36  0012               	return	
  3732  000C38                     __end_of_FMwrite:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           prodh	equ	0xFF4
  3739                           prodl	equ	0xFF3
  3740                           intcon	equ	0xFF2
  3741                           postinc0	equ	0xFEE
  3742                           wreg	equ	0xFE8
  3743                           indf2	equ	0xFDF
  3744                           postinc2	equ	0xFDE
  3745                           postdec2	equ	0xFDD
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _FMready *****************
  3751 ;; Defined at:
  3752 ;;		line 567 in file "main.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  3755 ;;		 -> FMfrequenc@dat(2), setVolume@dat(2), FMinit@dat(2), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  sts             2   15[COMRAM] unsigned int 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      unsigned char 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3767 ;;      Params:         2       0       0       0
  3768 ;;      Locals:         2       0       0       0
  3769 ;;      Temps:          2       0       0       0
  3770 ;;      Totals:         6       0       0       0
  3771 ;;Total ram usage:        6 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    3
  3774 ;; This function calls:
  3775 ;;		_FMread
  3776 ;; This function is called by:
  3777 ;;		_FMinit
  3778 ;;		_FMfrequenc
  3779 ;;		_setVolume
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text26
  3784  000DC2                     __ptext26:
  3785                           	opt stack 0
  3786  000DC2                     _FMready:
  3787                           	opt stack 25
  3788                           
  3789                           ;main.c: 569: unsigned int sts;
  3790                           ;main.c: 571: if (FMread(0x13, &sts) != 0) return 1;
  3791                           
  3792                           ;incstack = 0
  3793  000DC2  0E10               	movlw	low FMready@sts
  3794  000DC4  6E03               	movwf	FMread@data,c
  3795  000DC6  0E00               	movlw	high FMready@sts
  3796  000DC8  6E04               	movwf	FMread@data+1,c
  3797  000DCA  0E13               	movlw	19
  3798  000DCC  ECFE  F003         	call	_FMread
  3799  000DD0  0900               	iorlw	0
  3800  000DD2  B4D8               	btfsc	status,2,c
  3801  000DD4  D002               	goto	l1819
  3802  000DD6  0E01               	movlw	1
  3803  000DD8  0012               	return	
  3804  000DDA                     l1819:
  3805                           
  3806                           ;main.c: 572: sts &= 0x0020;
  3807  000DDA  0E20               	movlw	32
  3808  000DDC  1610               	andwf	FMready@sts,f,c
  3809  000DDE  0E00               	movlw	0
  3810  000DE0  1611               	andwf	FMready@sts+1,f,c
  3811                           
  3812                           ;main.c: 573: *rdy = sts ? 1 : 0;
  3813  000DE2  5010               	movf	FMready@sts,w,c
  3814  000DE4  1011               	iorwf	FMready@sts+1,w,c
  3815  000DE6  B4D8               	btfsc	status,2,c
  3816  000DE8  D002               	goto	u1160
  3817  000DEA  0E01               	movlw	1
  3818  000DEC  D001               	goto	u1170
  3819  000DEE                     u1160:
  3820  000DEE  0E00               	movlw	0
  3821  000DF0                     u1170:
  3822  000DF0  6E0E               	movwf	??_FMready& (0+255),c
  3823  000DF2  6A0F               	clrf	(??_FMready+1)& (0+255),c
  3824  000DF4  C00C  FFD9         	movff	FMready@rdy,fsr2l
  3825  000DF8  C00D  FFDA         	movff	FMready@rdy+1,fsr2h
  3826  000DFC  C00E  FFDE         	movff	??_FMready,postinc2
  3827  000E00  C00F  FFDD         	movff	??_FMready+1,postdec2
  3828                           
  3829                           ;main.c: 574: return 0;
  3830  000E04  0E00               	movlw	0
  3831  000E06  0012               	return	
  3832  000E08                     __end_of_FMready:
  3833                           	opt stack 0
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _FMread *****************
  3851 ;; Defined at:
  3852 ;;		line 317 in file "main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  regAddr         1    wreg     unsigned char 
  3855 ;;  data            2    2[COMRAM] PTR unsigned int 
  3856 ;;		 -> main@ui(2), FMready@sts(2), frequency@data(2), 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  regAddr         1    8[COMRAM] unsigned char 
  3859 ;;  secndByt        1   10[COMRAM] unsigned char 
  3860 ;;  firstByt        1    9[COMRAM] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      unsigned char 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3870 ;;      Params:         2       0       0       0
  3871 ;;      Locals:         3       0       0       0
  3872 ;;      Temps:          4       0       0       0
  3873 ;;      Totals:         9       0       0       0
  3874 ;;Total ram usage:        9 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    2
  3877 ;; This function calls:
  3878 ;;		_IdleI2C
  3879 ;;		_ReadI2C
  3880 ;;		_WriteI2C
  3881 ;; This function is called by:
  3882 ;;		_frequency
  3883 ;;		_FMready
  3884 ;;		_FMvers
  3885 ;;		_FMid
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text27
  3890  0007FC                     __ptext27:
  3891                           	opt stack 0
  3892  0007FC                     _FMread:
  3893                           	opt stack 25
  3894                           
  3895                           ;incstack = 0
  3896                           ;FMread@regAddr stored from wreg
  3897  0007FC  6E09               	movwf	FMread@regAddr,c
  3898                           
  3899                           ;main.c: 319: unsigned char firstByt;
  3900                           ;main.c: 320: unsigned char secndByt;
  3901                           ;main.c: 322: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3902  0007FE  80C5               	bsf	4037,0,c	;volatile
  3903  000800                     l162:
  3904  000800  B0C5               	btfsc	4037,0,c	;volatile
  3905  000802  D7FE               	goto	l162
  3906                           
  3907                           ;main.c: 323: IdleI2C();
  3908  000804  ECD6  F007         	call	_IdleI2C	;wreg free
  3909                           
  3910                           ;main.c: 326: if (WriteI2C(0x20)) return 1;
  3911  000808  0E20               	movlw	32
  3912  00080A  EC85  F006         	call	_WriteI2C
  3913  00080E  0900               	iorlw	0
  3914  000810  B4D8               	btfsc	status,2,c
  3915  000812  D002               	goto	l1699
  3916  000814  0E01               	movlw	1
  3917  000816  0012               	return	
  3918  000818                     l1699:
  3919                           
  3920                           ;main.c: 327: IdleI2C();
  3921  000818  ECD6  F007         	call	_IdleI2C	;wreg free
  3922                           
  3923                           ;main.c: 328: WriteI2C(regAddr);
  3924  00081C  5009               	movf	FMread@regAddr,w,c
  3925  00081E  EC85  F006         	call	_WriteI2C
  3926                           
  3927                           ;main.c: 329: IdleI2C();
  3928  000822  ECD6  F007         	call	_IdleI2C	;wreg free
  3929                           
  3930                           ;main.c: 330: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3931  000826  82C5               	bsf	4037,1,c	;volatile
  3932  000828                     l167:
  3933  000828  B2C5               	btfsc	4037,1,c	;volatile
  3934  00082A  D7FE               	goto	l167
  3935                           
  3936                           ;main.c: 331: IdleI2C();
  3937  00082C  ECD6  F007         	call	_IdleI2C	;wreg free
  3938                           
  3939                           ;main.c: 332: WriteI2C(0x20 + 0x01);
  3940  000830  0E21               	movlw	33
  3941  000832  EC85  F006         	call	_WriteI2C
  3942                           
  3943                           ;main.c: 333: IdleI2C();
  3944  000836  ECD6  F007         	call	_IdleI2C	;wreg free
  3945                           
  3946                           ;main.c: 334: firstByt = ReadI2C();
  3947  00083A  ECAB  F007         	call	_ReadI2C	;wreg free
  3948  00083E  6E0A               	movwf	FMread@firstByt,c
  3949                           
  3950                           ;main.c: 335: IdleI2C();
  3951  000840  ECD6  F007         	call	_IdleI2C	;wreg free
  3952                           
  3953                           ;main.c: 336: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3954  000844  9AC5               	bcf	4037,5,c	;volatile
  3955  000846  88C5               	bsf	4037,4,c	;volatile
  3956  000848                     l170:
  3957  000848  B8C5               	btfsc	4037,4,c	;volatile
  3958  00084A  D7FE               	goto	l170
  3959                           
  3960                           ;main.c: 337: IdleI2C();
  3961  00084C  ECD6  F007         	call	_IdleI2C	;wreg free
  3962                           
  3963                           ;main.c: 338: secndByt = ReadI2C();
  3964  000850  ECAB  F007         	call	_ReadI2C	;wreg free
  3965  000854  6E0B               	movwf	FMread@secndByt,c
  3966                           
  3967                           ;main.c: 339: IdleI2C();
  3968  000856  ECD6  F007         	call	_IdleI2C	;wreg free
  3969                           
  3970                           ;main.c: 340: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3971  00085A  8AC5               	bsf	4037,5,c	;volatile
  3972  00085C  88C5               	bsf	4037,4,c	;volatile
  3973  00085E                     l173:
  3974  00085E  B8C5               	btfsc	4037,4,c	;volatile
  3975  000860  D7FE               	goto	l173
  3976                           
  3977                           ;main.c: 341: IdleI2C();
  3978  000862  ECD6  F007         	call	_IdleI2C	;wreg free
  3979                           
  3980                           ;main.c: 342: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3981  000866  84C5               	bsf	4037,2,c	;volatile
  3982  000868                     l176:
  3983  000868  B4C5               	btfsc	4037,2,c	;volatile
  3984  00086A  D7FE               	goto	l176
  3985                           
  3986                           ;main.c: 343: IdleI2C();
  3987  00086C  ECD6  F007         	call	_IdleI2C	;wreg free
  3988                           
  3989                           ;main.c: 344: *data = firstByt;
  3990  000870  500A               	movf	FMread@firstByt,w,c
  3991  000872  6E05               	movwf	??_FMread& (0+255),c
  3992  000874  6A06               	clrf	(??_FMread+1)& (0+255),c
  3993  000876  C003  FFD9         	movff	FMread@data,fsr2l
  3994  00087A  C004  FFDA         	movff	FMread@data+1,fsr2h
  3995  00087E  C005  FFDE         	movff	??_FMread,postinc2
  3996  000882  C006  FFDD         	movff	??_FMread+1,postdec2
  3997                           
  3998                           ;main.c: 345: *data <<= 8;
  3999  000886  C003  FFD9         	movff	FMread@data,fsr2l
  4000  00088A  C004  FFDA         	movff	FMread@data+1,fsr2h
  4001  00088E  50DE               	movf	postinc2,w,c
  4002  000890  6EDD               	movwf	postdec2,c
  4003  000892  6ADF               	clrf	indf2,c
  4004                           
  4005                           ;main.c: 346: *data = *data | secndByt;
  4006  000894  C003  FFD9         	movff	FMread@data,fsr2l
  4007  000898  C004  FFDA         	movff	FMread@data+1,fsr2h
  4008  00089C  CFDE F005          	movff	postinc2,??_FMread
  4009  0008A0  CFDD F006          	movff	postdec2,??_FMread+1
  4010  0008A4  500B               	movf	FMread@secndByt,w,c
  4011  0008A6  6E07               	movwf	(??_FMread+2)& (0+255),c
  4012  0008A8  6A08               	clrf	(??_FMread+3)& (0+255),c
  4013  0008AA  5005               	movf	??_FMread,w,c
  4014  0008AC  1207               	iorwf	??_FMread+2,f,c
  4015  0008AE  5006               	movf	??_FMread+1,w,c
  4016  0008B0  1208               	iorwf	??_FMread+3,f,c
  4017  0008B2  C003  FFD9         	movff	FMread@data,fsr2l
  4018  0008B6  C004  FFDA         	movff	FMread@data+1,fsr2h
  4019  0008BA  C007  FFDE         	movff	??_FMread+2,postinc2
  4020  0008BE  C008  FFDD         	movff	??_FMread+3,postdec2
  4021                           
  4022                           ;main.c: 348: return 0;
  4023  0008C2  0E00               	movlw	0
  4024  0008C4  0012               	return	
  4025  0008C6                     __end_of_FMread:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           indf2	equ	0xFDF
  4037                           postinc2	equ	0xFDE
  4038                           postdec2	equ	0xFDD
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043 ;; *************** function _WriteI2C *****************
  4044 ;; Defined at:
  4045 ;;		line 12 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_writ.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  data_out        1    wreg     unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  data_out        1    1[COMRAM] unsigned char 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      char 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4059 ;;      Params:         0       0       0       0
  4060 ;;      Locals:         1       0       0       0
  4061 ;;      Temps:          0       0       0       0
  4062 ;;      Totals:         1       0       0       0
  4063 ;;Total ram usage:        1 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    1
  4066 ;; This function calls:
  4067 ;;		_IdleI2C
  4068 ;; This function is called by:
  4069 ;;		_FMwrite
  4070 ;;		_FMread
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text28
  4075  000D0A                     __ptext28:
  4076                           	opt stack 0
  4077  000D0A                     _WriteI2C:
  4078                           	opt stack 26
  4079                           
  4080                           ;incstack = 0
  4081                           ;WriteI2C@data_out stored from wreg
  4082  000D0A  6E02               	movwf	WriteI2C@data_out,c
  4083  000D0C  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  4084  000D10  AEC6               	btfss	4038,7,c	;volatile
  4085  000D12  D002               	goto	l1019
  4086  000D14  0EFF               	movlw	255
  4087  000D16  0012               	return	
  4088  000D18                     l1019:
  4089  000D18  50C6               	movf	4038,w,c	;volatile
  4090  000D1A  0B0F               	andlw	15
  4091  000D1C  0A08               	xorlw	8
  4092  000D1E  B4D8               	btfsc	status,2,c
  4093  000D20  D00F               	goto	l1037
  4094  000D22  50C6               	movf	4038,w,c	;volatile
  4095  000D24  0B0F               	andlw	15
  4096  000D26  0A0B               	xorlw	11
  4097  000D28  B4D8               	btfsc	status,2,c
  4098  000D2A  D00A               	goto	l1037
  4099  000D2C  88C6               	bsf	4038,4,c	;volatile
  4100  000D2E                     l376:
  4101  000D2E  A69E               	btfss	3998,3,c	;volatile
  4102  000D30  D7FE               	goto	l376
  4103  000D32  A4C7               	btfss	4039,2,c	;volatile
  4104  000D34  B0C7               	btfsc	4039,0,c	;volatile
  4105  000D36  D002               	goto	l1033
  4106  000D38  0EFE               	movlw	254
  4107  000D3A  0012               	return	
  4108  000D3C                     l1033:
  4109  000D3C  0E00               	movlw	0
  4110  000D3E  0012               	return	
  4111  000D40                     l1037:
  4112  000D40  50C6               	movf	4038,w,c	;volatile
  4113  000D42  0B0F               	andlw	15
  4114  000D44  0A08               	xorlw	8
  4115  000D46  B4D8               	btfsc	status,2,c
  4116  000D48  D005               	goto	l385
  4117  000D4A  50C6               	movf	4038,w,c	;volatile
  4118  000D4C  0B0F               	andlw	15
  4119  000D4E  0A0B               	xorlw	11
  4120  000D50  A4D8               	btfss	status,2,c
  4121  000D52  0012               	return	
  4122  000D54                     l385:
  4123  000D54  B0C7               	btfsc	4039,0,c	;volatile
  4124  000D56  D7FE               	goto	l385
  4125  000D58  ECD6  F007         	call	_IdleI2C	;wreg free
  4126  000D5C  ACC5               	btfss	4037,6,c	;volatile
  4127  000D5E  D002               	goto	l1051
  4128  000D60  0EFE               	movlw	254
  4129  000D62  0012               	return	
  4130  000D64                     l1051:
  4131  000D64  0E00               	movlw	0
  4132  000D66  0012               	return	
  4133  000D68                     __end_of_WriteI2C:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           intcon	equ	0xFF2
  4142                           postinc0	equ	0xFEE
  4143                           wreg	equ	0xFE8
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _IdleI2C *****************
  4152 ;; Defined at:
  4153 ;;		line 24 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_idle.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4167 ;;      Params:         0       0       0       0
  4168 ;;      Locals:         0       0       0       0
  4169 ;;      Temps:          1       0       0       0
  4170 ;;      Totals:         1       0       0       0
  4171 ;;Total ram usage:        1 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_FMwrite
  4177 ;;		_FMread
  4178 ;;		_WriteI2C
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text29
  4183  000FAC                     __ptext29:
  4184                           	opt stack 0
  4185  000FAC                     _IdleI2C:
  4186                           	opt stack 26
  4187  000FAC                     l1005:
  4188  000FAC  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  4189  000FB0  0E1F               	movlw	31
  4190  000FB2  1601               	andwf	??_IdleI2C,f,c
  4191  000FB4  A4D8               	btfss	status,2,c
  4192  000FB6  D7FA               	goto	l1005
  4193  000FB8  A4C7               	btfss	4039,2,c	;volatile
  4194  000FBA  0012               	return	
  4195  000FBC  D7F7               	goto	l1005
  4196  000FBE                     __end_of_IdleI2C:
  4197                           	opt stack 0
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           intcon	equ	0xFF2
  4205                           postinc0	equ	0xFEE
  4206                           wreg	equ	0xFE8
  4207                           indf2	equ	0xFDF
  4208                           postinc2	equ	0xFDE
  4209                           postdec2	equ	0xFDD
  4210                           fsr2h	equ	0xFDA
  4211                           fsr2l	equ	0xFD9
  4212                           status	equ	0xFD8
  4213                           
  4214 ;; *************** function _ReadI2C *****************
  4215 ;; Defined at:
  4216 ;;		line 11 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_read.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      unsigned char 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4230 ;;      Params:         0       0       0       0
  4231 ;;      Locals:         0       0       0       0
  4232 ;;      Temps:          0       0       0       0
  4233 ;;      Totals:         0       0       0       0
  4234 ;;Total ram usage:        0 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_FMread
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text30
  4244  000F56                     __ptext30:
  4245                           	opt stack 0
  4246  000F56                     _ReadI2C:
  4247                           	opt stack 26
  4248                           
  4249                           ;incstack = 0
  4250  000F56  50C6               	movf	4038,w,c	;volatile
  4251  000F58  0B0F               	andlw	15
  4252  000F5A  0A08               	xorlw	8
  4253  000F5C  B4D8               	btfsc	status,2,c
  4254  000F5E  D004               	goto	l351
  4255  000F60  50C6               	movf	4038,w,c	;volatile
  4256  000F62  0B0F               	andlw	15
  4257  000F64  0A0B               	xorlw	11
  4258  000F66  B4D8               	btfsc	status,2,c
  4259  000F68                     l351:
  4260  000F68  86C5               	bsf	4037,3,c	;volatile
  4261  000F6A                     l352:
  4262  000F6A  A0C7               	btfss	4039,0,c	;volatile
  4263  000F6C  D7FE               	goto	l352
  4264  000F6E  50C9               	movf	4041,w,c	;volatile
  4265  000F70  0012               	return	
  4266  000F72                     __end_of_ReadI2C:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           indf2	equ	0xFDF
  4278                           postinc2	equ	0xFDE
  4279                           postdec2	equ	0xFDD
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           intcon	equ	0xFF2
  4290                           postinc0	equ	0xFEE
  4291                           wreg	equ	0xFE8
  4292                           indf2	equ	0xFDF
  4293                           postinc2	equ	0xFDE
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299                           	psect	rparam
  4300  0000                     tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           postinc0	equ	0xFEE
  4308                           wreg	equ	0xFE8
  4309                           indf2	equ	0xFDF
  4310                           postinc2	equ	0xFDE
  4311                           postdec2	equ	0xFDD
  4312                           fsr2h	equ	0xFDA
  4313                           fsr2l	equ	0xFD9
  4314                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    87
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), setVolume@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), frequency@data(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_VolumeDown
    _main->_VolumeUp
    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _VolumeUp->_seek
    _VolumeDown->_seek
    _seek->_tuneWithAutoHiLo
    _tuneWithAutoHiLo->_readLOInjection
    _setHardmute->_setBitInRegister
    _readLOInjection->_setBitInRegister
    _frequency->_FMread
    _setSeekDirection->_setBitInRegister
    _setBitInRegister->_FMwrite
    _SeekUP->_delay_10ms
    _SeekDOWN->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   41895
                                             32 COMRAM     6     6      0
                         _FMfrequenc
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                           _SeekDOWN
                             _SeekUP
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    1840
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    1840
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1434
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           19    17      2     416
                                              0 COMRAM    19    17      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0   16556
                                             31 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0   16556
                                             31 COMRAM     1     1      0
                         _delay_10ms
                               _seek
 ---------------------------------------------------------------------------------
 (2) _seek                                                 5     5      0   16127
                                             26 COMRAM     5     5      0
                            _FMwrite
                          _frequency
                   _setBitInRegister
                        _setHardmute
                   _setSeekDirection
                   _tuneWithAutoHiLo
 ---------------------------------------------------------------------------------
 (3) _tuneWithAutoHiLo                                     4     4      0    8121
                                             22 COMRAM     4     4      0
                            _FMwrite
                          _frequency
                    _readLOInjection
                   _setBitInRegister
                        _setHardmute
 ---------------------------------------------------------------------------------
 (4) _setHardmute                                          1     1      0    2464
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _readLOInjection                                      5     5      0    2578
                                             17 COMRAM     5     5      0
                            _FMwrite
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (4) _frequency                                            9     7      2     478
                                             11 COMRAM     9     7      2
                             _FMread
 ---------------------------------------------------------------------------------
 (3) _setSeekDirection                                     1     1      0    2486
                                             17 COMRAM     1     1      0
                   _setBitInRegister
 ---------------------------------------------------------------------------------
 (5) _setBitInRegister                                    10     8      2    2442
                                              7 COMRAM    10     8      2
                            _FMwrite
 ---------------------------------------------------------------------------------
 (1) _SeekUP                                               0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _SeekDOWN                                             0     0      0     406
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     406
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     513
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1378
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     368
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2     693
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     427
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMfrequenc
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _SeekDOWN
     _delay_10ms
   _SeekUP
     _delay_10ms
   _VolumeDown
     _delay_10ms
     _seek
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _VolumeUp
     _delay_10ms
     _seek
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _frequency
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _setBitInRegister
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _setHardmute
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _setSeekDirection
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _tuneWithAutoHiLo
         _FMwrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _frequency
           _FMread
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _readLOInjection
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _setBitInRegister
           _FMwrite
             _IdleI2C
             _WriteI2C
               _IdleI2C
         _setHardmute
           _setBitInRegister
             _FMwrite
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _butnEvent
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      4A       1       77.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       8        0.0%
DATA                 0      0      4A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Feb 19 00:48:03 2017

    readLOInjection@rssi_val 0016                  __CFG_CP$OFF 000000                  _SSPSTATbits 000FC7  
                         l95 0400                           l97 0396                  __CFG_BORV$3 000000  
                        l100 03D8                          l112 04F0                          l104 04A0  
                        l114 04D8                          l106 0438                          l211 06EA  
                        l204 0B68                          l212 0716                          l124 0578  
                        l117 0540                          l109 0478                          l119 0528  
                        l152 0BF0                          l170 0848                          l162 0800  
                        l226 09CA                          l173 085E                          l157 0C2C  
                        l351 0F68                          l167 0828                          l352 0F6A  
                        l176 0868                          l195 07AC                          l376 0D2E  
                        l288 0FCE                          l385 0D54                          _dly 0E4A  
               _softmute_bit 0350                          prod 000FF3                          wreg 000FE8  
               __CFG_WDT$OFF 000000                         l1005 0FAC                         l1033 0D3C  
                       l1051 0D64                         l1019 0D18                         l2003 0536  
                       l1037 0D40                         l2013 055C                         l2023 0586  
                       l1065 0C08                         l2053 099A                         l2221 090A  
                       l2231 0930                         l2223 0918                         l2073 09F0  
                       l2049 0992                         l2233 0938                         l2225 091E  
                       l2241 094A                         l2091 0A1E                         l2083 0A04  
                       l2067 09E4                         l2235 093E                         l2227 0924  
                       l2093 0A2C                         l2069 09E8                         l2237 0944  
                       l2229 092A                         l2095 0A38                         l2079 0A00  
                       l1735 0AB0                         l1807 0684                         l1737 0B0A  
                       l1753 0B2A                         l1809 070E                         l1921 03E4  
                       l1905 037A                         l1819 0DDA                         l1771 0E54  
                       l1851 07A4                         l1915 03BA                         l1773 0E5E  
                       l1775 0E64                         l1759 0B60                         l1927 03EE  
                       l1785 0D96                         l1961 048E                         ?_dly 0001  
                       l1699 0818                         l1779 0E72                         l1955 0484  
                       l1939 041C                         l1893 0EA4                         l1973 04BC  
                       l1949 045C                         l1895 0EB2                         l1983 04E6  
                       l1993 050C                         STR_1 035A                         STR_2 0358  
                       u1034 0A8A                         u1035 0A84                         u1044 0ADE  
                       u1300 03D8                         u1045 0AD8                         u1055 0E2A  
                       u1160 0DEE                         u1170 0DF0                         u1410 04D8  
                       u1340 0438                         u1085 0B80                         u1270 0396  
                       u1450 0528                         u1370 0478                         u1490 0578  
                       u1707 0422                         u1660 08EE                         u1717 0462  
                       u1727 04C2                         u1737 0512                         u1747 0562  
                       u1757 0EAA                         u1687 0380                         u1697 03C0  
                       _Init 0CAA              __end_of_FMready 0E08                         _main 08C6  
                       _seek 0726                         dly@d 0001                         dly@i 0003  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
            __end_of_FMwrite 0C38                         prodh 000FF4                         prodl 000FF3  
              seek@direction 001F                         start 0000                __CFG_IESO$OFF 000000  
            __end_of_IdleI2C 0FBE                __CFG_MCLRE$ON 000000                 ___param_bank 000010  
            __end_of_ReadI2C 0F72      tuneWithAutoHiLo@rssi_hi 001A              __end_of_OpenI2C 0F1E  
    tuneWithAutoHiLo@rssi_lo 0019                        ??_dly 0003                        ?_Init 0001  
                      ?_main 0001                        ?_seek 0001                        _T0CON 000FD5  
                      _LCDPS 000F58                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISG 000F98                __CFG_PWRT$OFF 000000               __CFG_FCMEN$OFF 000000  
            __end_of_regDflt 0325                        _errfm 0FCE                  ?_FMfrequenc 0012  
              _hiloctrl1_bit 033C                _hiloctrl2_bit 0340               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        status 000FD8               seek@curChannel 001D  
               ?_nextChannel 0001              __initialization 0F72                 __end_of_Init 0D0A  
               __end_of_main 098E                 __end_of_seek 07FC                 ?_setHardmute 0001  
           __end_of_SeekDOWN 0FAC                       ??_Init 0003                       ??_main 0021  
setBitInRegister@bitRegister 0008                       ??_seek 001B                __activetblptr 000002  
           __end_of_MuteHard 0FD2                       _ADCON1 000FC1                    ??_FMready 000E  
                     ?_errfm 0001            ?_setSeekDirection 0001             __end_of_WriteI2C 0D68  
                  ??_FMwrite 0003             __end_of_VolumeUp 0F3A                       _LCDCON 000F59  
                     _LCDSE0 000F5A                       _LCDSE1 000F5B                       _LCDSE2 000F5C  
                     _LCDSE3 000F5D                  OpenI2C@slew 0001                    ??_IdleI2C 0001  
                     _OSCCON 000FD3           ??_setSeekDirection 0012          readLOInjection@loHi 0015  
                     _FMinit 098E                       _FMread 07FC                       _SSPADD 000FC8  
                     _SSPBUF 000FC9                       _FMvers 0FBE                    ??_ReadI2C 0001  
                  ??_OpenI2C 0002                       _SeekUP 0F88               __CFG_XINST$OFF 000000  
          ?_tuneWithAutoHiLo 0001           ??_tuneWithAutoHiLo 0017   tuneWithAutoHiLo@curChannel 0017  
        __size_of_FMfrequenc 0072                       _regImg 0027                       clear_0 0F78  
       __end_of_hardmute_bit 033C             __end_of_seek_bit 034C                       main@ui 0025  
           __end_of_showFreq 0FD4                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          butnEvent@timereturn 0012  
           __end_of_tune_bit 0358            ?_setBitInRegister 0008                   __accesstop 0060  
    __end_of__initialization 0F7E           ??_setBitInRegister 000A                ___rparam_used 000001  
                 _VolumeDown 0F3A               __pcstackCOMRAM 0001                __end_of_errfm 0FD0  
             setVolume@F6699 0325     __size_of_readLOInjection 00A4              __CFG_OSC$INTIO7 000000  
                    ??_errfm 0001     __size_of_previousChannel 001E           __size_of_butnEvent 0232  
                 _delay_10ms 0EA2                      ?_FMinit 0001                      ?_FMread 0003  
                  ?_SeekDOWN 0001                      ?_FMvers 000C           __size_of_frequency 0042  
                    ?_SeekUP 0001                    ?_MuteHard 0001         __end_of_hiloside_bit 0348  
       __size_of_nextChannel 001E       __end_ofsetVolume@F6699 0338                    ?_WriteI2C 0001  
                  ?_VolumeUp 0001         __size_of_setHardmute 0026                    FMinit@dat 0012  
                    _FMready 0DC2                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
               ??_FMfrequenc 0014                      _SSPSTAT 000FC7                      _FMwrite 0BB6  
                    _IdleI2C 0FAC                   ??_SeekDOWN 0004              __size_of_FMinit 00C6  
            __size_of_FMread 00CA                    FMvers@vsn 000C                      _ReadI2C 0F56  
            __size_of_FMvers 0010                      _OpenI2C 0F00                      __Hparam 0000  
                    __Lparam 0000                  ?_VolumeDown 0001                   ??_MuteHard 0001  
            __size_of_SeekUP 0012                    ?_showFreq 0001                 __psmallconst 0300  
            __CFG_STVREN$OFF 000000                      __pcinit 0F72                   ??_WriteI2C 0002  
          __end_of_butnEvent 0590           __end_of_FMfrequenc 0CAA                   ??_VolumeUp 0020  
                    __ramtop 0300                      __ptext0 08C6                      __ptext1 0EC4  
                    __ptext2 0EE2                      __ptext3 0C38                      __ptext4 0FCE  
                    __ptext5 035E                      __ptext6 0F1E                      __ptext7 0F3A  
                    __ptext8 0726                      __ptext9 0590                    _T0CONbits 000FD5  
          __end_of_frequency 0E4A                      _regDflt 0301                 __size_of_dly 0032  
                    main@evt 0023            ??_readLOInjection 0012         end_of_initialization 0F7E  
                ?_delay_10ms 0001                 _hardmute_bit 0338                __Lmediumconst 0000  
                 _seekup_bit 034C            ??_previousChannel 001C                  FMfrequenc@f 0012  
                 ??_showFreq 0001                      postdec2 000FDD    __size_of_setSeekDirection 005A  
                    postinc0 000FEE                      postinc2 000FDE                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTGbits 000F86  
  __size_of_tuneWithAutoHiLo 0196                    _TRISCbits 000F94          __size_of_VolumeDown 001C  
              VolumeDown@dir 0020               __end_of_FMinit 0A54               __end_of_FMread 08C6  
             __end_of_FMvers 0FCE               __end_of_SeekUP 0F9A    __size_of_setBitInRegister 00BE  
        setHardmute@bitState 0012          __size_of_delay_10ms 0022                   butnEvent@c 0004  
        start_initialization 0F72                  __end_of_dly 0E7C             WriteI2C@data_out 0002  
               _hiloside_bit 0344                     ??_FMinit 0012                     ??_FMread 0005  
                   ??_FMvers 000E            __size_of_SeekDOWN 0012                     ??_SeekUP 0004  
          __size_of_MuteHard 0002            __size_of_WriteI2C 005E            __size_of_VolumeUp 001C  
                __pbssCOMRAM 0027                  VolumeUp@dir 0020                     ?_FMready 000C  
      __end_of_hiloctrl1_bit 0340        __end_of_hiloctrl2_bit 0344                     ?_FMwrite 0001  
                   ?_IdleI2C 0001                     ?_ReadI2C 0001                     ?_OpenI2C 0001  
              ??_nextChannel 001C                 ??_VolumeDown 0020             _setSeekDirection 0D68  
              ??_setHardmute 0012            __size_of_showFreq 0002                     FMinit@ad 0014  
            _readLOInjection 0B12                  __smallconst 0300                    _butnEvent 035E  
            FMwrite@firstByt 0005             _tuneWithAutoHiLo 0590              _previousChannel 0EC4  
                  _frequency 0E08                     _LCDDATA0 000F60           __end_of_VolumeDown 0F56  
            FMwrite@secndByt 0006               __size_of_errfm 0002                 ??_delay_10ms 0003  
               MuteHard@down 0001                frequency@data 0013               FMread@firstByt 000A  
                 FMread@data 0003                     _PIR1bits 000F9E             _setBitInRegister 0A54  
             FMread@secndByt 000B                   FMready@rdy 000C                   FMready@sts 0010  
        __end_of_nextChannel 0F00           __end_of_delay_10ms 0EC4                   ?_butnEvent 0001  
        __end_of_setHardmute 0EA2                   ?_frequency 000C             __size_of_FMready 0046  
           __size_of_FMwrite 0082             OpenI2C@sync_mode 0002                     _SeekDOWN 0F9A  
           __size_of_IdleI2C 0012         __end_of_softmute_bit 0354             __size_of_ReadI2C 001C  
                   __Hrparam 0000             __size_of_OpenI2C 001E                     _MuteHard 0FD0  
                   __Lrparam 0000      __end_of_readLOInjection 0BB6                   FMwrite@adr 0007  
                   _WriteI2C 0D0A                     _VolumeUp 0F1E      __end_of_previousChannel 0EE2  
  setSeekDirection@direction 0012     setBitInRegister@bitState 0009                     __ptext10 0E7C  
                   __ptext11 0B12                     __ptext20 0F00                     __ptext12 0E08  
                   __ptext21 0FBE                     __ptext13 0D68                     __ptext30 0F56  
                   __ptext22 098E                     __ptext14 0A54                     __ptext23 0FD2  
                   __ptext15 0F88                     __ptext24 0E4A                     __ptext16 0F9A  
                   __ptext25 0BB6                     __ptext17 0EA2                     __ptext26 0DC2  
                   __ptext18 0FD0                     __ptext27 07FC                     __ptext19 0CAA  
                   __ptext28 0D0A                     __ptext29 0FAC                  delay_10ms@n 0001  
              __size_of_Init 0060                __size_of_main 00C8                __size_of_seek 00D6  
                   _seek_bit 0348                FMread@regAddr 0009                  _nextChannel 0EE2  
                   _showFreq 0FD2                FMfrequenc@dat 001A                  _setHardmute 0E7C  
                   _tune_bit 0354                  ??_butnEvent 0003                   _INTCONbits 000FF2  
         __end_of_seekup_bit 0350                  ??_frequency 000E     __end_of_setSeekDirection 0DC2  
                   seek@temp 001B      setBitInRegister@address 0011     __end_of_tuneWithAutoHiLo 0726  
               FMfrequenc@cn 0018             ?_readLOInjection 0001             ?_previousChannel 0001  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5     __end_of_setBitInRegister 0B12  
                 _FMfrequenc 0C38               butnEvent@c_516 0006               butnEvent@c_517 0008  
             butnEvent@c_518 000A               butnEvent@c_535 0010               butnEvent@c_527 000C  
             butnEvent@c_528 000E  
