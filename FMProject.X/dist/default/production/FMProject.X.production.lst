

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Feb 17 11:56:18 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	smallconst
    35  000300                     __psmallconst:
    36                           	opt stack 0
    37  000300  00                 	db	0
    38  000301                     _regDflt:
    39                           	opt stack 0
    40  000301  FFFF               	dw	65535
    41  000303  5B15               	dw	23317
    42  000305  D0B9               	dw	53433
    43  000307  A010               	dw	40976
    44  000309  0780               	dw	1920
    45  00030B  28AB               	dw	10411
    46  00030D  6400               	dw	25600
    47  00030F  1EE7               	dw	7911
    48  000311  7141               	dw	28993
    49  000313  007D               	dw	125
    50  000315  82C6               	dw	33478
    51  000317  4F55               	dw	20309
    52  000319  970C               	dw	38668
    53  00031B  B845               	dw	47173
    54  00031D  FC2D               	dw	64557
    55  00031F  8097               	dw	32919
    56  000321  04A1               	dw	1185
    57  000323  DF6A               	dw	57194
    58  000325                     __end_of_regDflt:
    59                           	opt stack 0
    60  0000                     _LCDCON	set	3929
    61  0000                     _LCDPS	set	3928
    62  0000                     _LCDSE0	set	3930
    63  0000                     _LCDSE1	set	3931
    64  0000                     _LCDSE2	set	3932
    65  0000                     _LCDSE3	set	3933
    66  0000                     _ADCON1	set	4033
    67  0000                     _INTCONbits	set	4082
    68  0000                     _OSCCON	set	4051
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTGbits	set	3974
    77  0000                     _SSPADD	set	4040
    78  0000                     _SSPBUF	set	4041
    79  0000                     _SSPCON1	set	4038
    80  0000                     _SSPCON1bits	set	4038
    81  0000                     _SSPCON2	set	4037
    82  0000                     _SSPCON2bits	set	4037
    83  0000                     _SSPSTAT	set	4039
    84  0000                     _SSPSTATbits	set	4039
    85  0000                     _T0CON	set	4053
    86  0000                     _T0CONbits	set	4053
    87  0000                     _TMR0H	set	4055
    88  0000                     _TMR0L	set	4054
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISG	set	3992
    94  0000                     _LCDDATA0	set	3936
    95                           
    96                           ; #config settings
    97  000325  00                 	db	0	; dummy byte at the end
    98  0000                     
    99                           	psect	cinit
   100  0009BC                     __pcinit:
   101                           	opt stack 0
   102  0009BC                     start_initialization:
   103                           	opt stack 0
   104  0009BC                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (36 bytes)
   108  0009BC  EE00  F001         	lfsr	0,__pbssCOMRAM
   109  0009C0  0E24               	movlw	36
   110  0009C2                     clear_0:
   111  0009C2  6AEE               	clrf	postinc0,c
   112  0009C4  06E8               	decf	wreg,f,c
   113  0009C6  E1FD               	bnz	clear_0
   114  0009C8                     end_of_initialization:
   115                           	opt stack 0
   116  0009C8                     __end_of__initialization:
   117                           	opt stack 0
   118  0009C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  0009CA  6EF8               	movwf	tblptru,c
   120  0009CC  0100               	movlb	0
   121  0009CE  EF25  F003         	goto	_main	;jump to C main() function
   122                           tblptru	equ	0xFF8
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           
   126                           	psect	bssCOMRAM
   127  000001                     __pbssCOMRAM:
   128                           	opt stack 0
   129  000001                     _regImg:
   130                           	opt stack 0
   131  000001                     	ds	36
   132                           tblptru	equ	0xFF8
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           
   136                           	psect	cstackCOMRAM
   137  000025                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000025                     ??_IdleI2C:
   140  000025                     ?_butnEvent:
   141                           	opt stack 0
   142  000025                     ?_buttontn:
   143                           	opt stack 0
   144  000025                     OpenI2C@slew:
   145                           	opt stack 0
   146  000025                     dly@d:
   147                           	opt stack 0
   148  000025                     delay_10ms@n:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x0
   152  000025                     	ds	1
   153  000026                     OpenI2C@sync_mode:
   154                           	opt stack 0
   155  000026                     WriteI2C@data_out:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x1
   159  000026                     	ds	1
   160  000027                     ??_delay_10ms:
   161  000027                     ??_butnEvent:
   162  000027                     ??_FMwrite:
   163  000027                     ??_buttontn:
   164  000027                     dly@i:
   165                           	opt stack 0
   166  000027                     FMread@data:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0x2
   170  000027                     	ds	1
   171  000028                     butnEvent@c:
   172                           	opt stack 0
   173  000028                     buttontn@c:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x3
   177  000028                     	ds	1
   178  000029                     ??_FMread:
   179  000029                     FMwrite@firstByt:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x4
   183  000029                     	ds	1
   184  00002A                     FMwrite@secndByt:
   185                           	opt stack 0
   186  00002A                     butnEvent@c_507:
   187                           	opt stack 0
   188  00002A                     buttontn@c_601:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x5
   192  00002A                     	ds	1
   193  00002B                     FMwrite@adr:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x6
   197  00002B                     	ds	1
   198  00002C                     butnEvent@c_516:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x7
   202  00002C                     	ds	1
   203  00002D                     FMread@regAddr:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x8
   207  00002D                     	ds	1
   208  00002E                     FMread@firstByt:
   209                           	opt stack 0
   210  00002E                     butnEvent@c_517:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x9
   214  00002E                     	ds	1
   215  00002F                     FMread@secndByt:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0xA
   219  00002F                     	ds	1
   220  000030                     butnEvent@c_524:
   221                           	opt stack 0
   222  000030                     FMready@rdy:
   223                           	opt stack 0
   224  000030                     FMvers@vsn:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0xB
   228  000030                     	ds	2
   229  000032                     ??_FMready:
   230  000032                     
   231                           ; 1 bytes @ 0xD
   232  000032                     	ds	2
   233  000034                     FMready@sts:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0xF
   237  000034                     	ds	2
   238  000036                     FMinit@dat:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x11
   242  000036                     	ds	2
   243  000038                     FMinit@ad:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x13
   247  000038                     	ds	1
   248  000039                     ??_main:
   249                           
   250                           ; 1 bytes @ 0x14
   251  000039                     	ds	2
   252  00003B                     main@k:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x16
   256  00003B                     	ds	2
   257  00003D                     main@evt:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x18
   261  00003D                     	ds	2
   262  00003F                     main@ui:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1A
   266  00003F                     	ds	2
   267                           tblptru	equ	0xFF8
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 555 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  ui              2   26[COMRAM] unsigned int 
   281 ;;  evt             2   24[COMRAM] unsigned int 
   282 ;;  k               2   22[COMRAM] int 
   283 ;;  btn             1    0        unsigned char 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   293 ;;      Params:         0       0       0       0
   294 ;;      Locals:         6       0       0       0
   295 ;;      Temps:          2       0       0       0
   296 ;;      Totals:         8       0       0       0
   297 ;;Total ram usage:        8 bytes
   298 ;; Hardware stack levels required when called:    5
   299 ;; This function calls:
   300 ;;		_FMinit
   301 ;;		_FMvers
   302 ;;		_Init
   303 ;;		_MuteHard
   304 ;;		_VolumeDown
   305 ;;		_VolumeUp
   306 ;;		_butnEvent
   307 ;;		_buttontn
   308 ;;		_dly
   309 ;;		_errfm
   310 ;;		_nextChannel
   311 ;;		_previousChannel
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text0
   318  00064A                     __ptext0:
   319                           	opt stack 0
   320  00064A                     _main:
   321                           	opt stack 26
   322                           
   323                           ;main.c: 557: unsigned char btn;
   324                           ;main.c: 558: unsigned int evt;
   325                           ;main.c: 559: unsigned int ui;
   326                           ;main.c: 560: int k;
   327                           ;main.c: 561: dly(20);
   328                           
   329                           ;incstack = 0
   330  00064A  0E00               	movlw	0
   331  00064C  6E26               	movwf	dly@d+1,c
   332  00064E  0E14               	movlw	20
   333  000650  6E25               	movwf	dly@d,c
   334  000652  EC97  F004         	call	_dly	;wreg free
   335                           
   336                           ;main.c: 562: Init();
   337  000656  EC15  F004         	call	_Init	;wreg free
   338                           
   339                           ;main.c: 563: PORTCbits.RC6 = 0;
   340  00065A  9C82               	bcf	3970,6,c	;volatile
   341                           
   342                           ;main.c: 564: PORTCbits.RC7 = 0;
   343  00065C  9E82               	bcf	3970,7,c	;volatile
   344  00065E                     l224:
   345                           
   346                           ;main.c: 566: k = buttontn();
   347  00065E  EC84  F003         	call	_buttontn	;wreg free
   348  000662  C025  F03B         	movff	?_buttontn,main@k
   349  000666  C026  F03C         	movff	?_buttontn+1,main@k+1
   350                           
   351                           ;main.c: 567: switch (k) {
   352  00066A  D006               	goto	l1864
   353  00066C                     l1858:
   354  00066C  ECF2  F004         	call	_nextChannel	;wreg free
   355                           
   356                           ;main.c: 569: break;
   357  000670  D7F6               	goto	l224
   358  000672                     l1860:
   359  000672  ECE9  F004         	call	_previousChannel	;wreg free
   360                           
   361                           ;main.c: 573: }
   362                           
   363                           ;main.c: 571: default: break;
   364  000676  D7F3               	goto	l224
   365  000678                     l1864:
   366  000678  C03B  F039         	movff	main@k,??_main
   367  00067C  C03C  F03A         	movff	main@k+1,??_main+1
   368                           
   369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   370                           ; Switch size 1, requested type "space"
   371                           ; Number of cases is 1, Range of values is 0 to 0
   372                           ; switch strategies available:
   373                           ; Name         Instructions Cycles
   374                           ; simple_byte            4     3 (average)
   375                           ;	Chosen strategy is simple_byte
   376  000680  503A               	movf	??_main+1,w,c
   377  000682  0A00               	xorlw	0	; case 0
   378  000684  A4D8               	btfss	status,2,c
   379  000686  D7EB               	goto	l224
   380                           
   381                           ; Switch size 1, requested type "space"
   382                           ; Number of cases is 2, Range of values is 1 to 2
   383                           ; switch strategies available:
   384                           ; Name         Instructions Cycles
   385                           ; simple_byte            7     4 (average)
   386                           ;	Chosen strategy is simple_byte
   387  000688  5039               	movf	??_main,w,c
   388  00068A  0A01               	xorlw	1	; case 1
   389  00068C  B4D8               	btfsc	status,2,c
   390  00068E  D7EE               	goto	l1858
   391  000690  0A03               	xorlw	3	; case 2
   392  000692  B4D8               	btfsc	status,2,c
   393  000694  D7EE               	goto	l1860
   394  000696  D7E3               	goto	l224
   395  000698                     l1876:
   396                           
   397                           ;main.c: 582: if (evt == 1) {
   398  000698  EC93  F001         	call	_butnEvent	;wreg free
   399  00069C  C025  F03D         	movff	?_butnEvent,main@evt
   400  0006A0  C026  F03E         	movff	?_butnEvent+1,main@evt+1
   401                           
   402                           ;main.c: 583: }
   403                           ;main.c: 584: switch (evt) {
   404  0006A4  D015               	goto	l1892
   405  0006A6                     l1878:
   406  0006A6  ECF2  F004         	call	_nextChannel	;wreg free
   407                           
   408                           ;main.c: 586: break;
   409  0006AA  D7F6               	goto	l1876
   410  0006AC                     l1880:
   411  0006AC  ECE9  F004         	call	_previousChannel	;wreg free
   412                           
   413                           ;main.c: 588: break;
   414  0006B0  D7F3               	goto	l1876
   415  0006B2                     l1882:
   416  0006B2  0E00               	movlw	0
   417  0006B4  EC0D  F005         	call	_VolumeUp
   418                           
   419                           ;main.c: 590: break;
   420  0006B8  D7EF               	goto	l1876
   421  0006BA                     l1884:
   422  0006BA  0E00               	movlw	0
   423  0006BC  EC0E  F005         	call	_VolumeDown
   424                           
   425                           ;main.c: 592: break;
   426  0006C0  D7EB               	goto	l1876
   427  0006C2                     l1886:
   428  0006C2  0E00               	movlw	0
   429  0006C4  EC0F  F005         	call	_MuteHard
   430                           
   431                           ;main.c: 594: break;
   432  0006C8  D7E7               	goto	l1876
   433  0006CA                     l1888:
   434  0006CA  EC0C  F005         	call	_errfm	;wreg free
   435                           
   436                           ;main.c: 600: }
   437                           
   438                           ;main.c: 599: default: break;
   439                           
   440                           ;main.c: 597: break;
   441  0006CE  D7E4               	goto	l1876
   442  0006D0                     l1892:
   443  0006D0  C03D  F039         	movff	main@evt,??_main
   444  0006D4  C03E  F03A         	movff	main@evt+1,??_main+1
   445                           
   446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   447                           ; Switch size 1, requested type "space"
   448                           ; Number of cases is 1, Range of values is 0 to 0
   449                           ; switch strategies available:
   450                           ; Name         Instructions Cycles
   451                           ; simple_byte            4     3 (average)
   452                           ;	Chosen strategy is simple_byte
   453  0006D8  503A               	movf	??_main+1,w,c
   454  0006DA  0A00               	xorlw	0	; case 0
   455  0006DC  A4D8               	btfss	status,2,c
   456  0006DE  D7DC               	goto	l1876
   457                           
   458                           ; Switch size 1, requested type "space"
   459                           ; Number of cases is 6, Range of values is 1 to 8
   460                           ; switch strategies available:
   461                           ; Name         Instructions Cycles
   462                           ; simple_byte           19    10 (average)
   463                           ;	Chosen strategy is simple_byte
   464  0006E0  5039               	movf	??_main,w,c
   465  0006E2  0A01               	xorlw	1	; case 1
   466  0006E4  B4D8               	btfsc	status,2,c
   467  0006E6  D7DF               	goto	l1878
   468  0006E8  0A03               	xorlw	3	; case 2
   469  0006EA  B4D8               	btfsc	status,2,c
   470  0006EC  D7DF               	goto	l1880
   471  0006EE  0A01               	xorlw	1	; case 3
   472  0006F0  B4D8               	btfsc	status,2,c
   473  0006F2  D7DF               	goto	l1882
   474  0006F4  0A07               	xorlw	7	; case 4
   475  0006F6  B4D8               	btfsc	status,2,c
   476  0006F8  D7E0               	goto	l1884
   477  0006FA  0A01               	xorlw	1	; case 5
   478  0006FC  B4D8               	btfsc	status,2,c
   479  0006FE  D7E1               	goto	l1886
   480  000700  0A0D               	xorlw	13	; case 8
   481  000702  B4D8               	btfsc	status,2,c
   482  000704  D7E2               	goto	l1888
   483                           
   484                           ;main.c: 601: }
   485  000706  D7C8               	goto	l1876
   486  000708                     __end_of_main:
   487                           	opt stack 0
   488                           tblptru	equ	0xFF8
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           status	equ	0xFD8
   492                           
   493 ;; *************** function _previousChannel *****************
   494 ;; Defined at:
   495 ;;		line 468 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      unsigned char 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   509 ;;      Params:         0       0       0       0
   510 ;;      Locals:         0       0       0       0
   511 ;;      Temps:          0       0       0       0
   512 ;;      Totals:         0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		_delay_10ms
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text1
   524  0009D2                     __ptext1:
   525                           	opt stack 0
   526  0009D2                     _previousChannel:
   527                           	opt stack 29
   528                           
   529                           ;main.c: 469: PORTCbits.RC7 = 1;
   530                           
   531                           ;incstack = 0
   532  0009D2  8E82               	bsf	3970,7,c	;volatile
   533                           
   534                           ;main.c: 470: delay_10ms(10);
   535  0009D4  0E00               	movlw	0
   536  0009D6  6E26               	movwf	delay_10ms@n+1,c
   537  0009D8  0E0A               	movlw	10
   538  0009DA  6E25               	movwf	delay_10ms@n,c
   539  0009DC  ECB0  F004         	call	_delay_10ms	;wreg free
   540                           
   541                           ;main.c: 471: PORTCbits.RC7 = 0;
   542  0009E0  9E82               	bcf	3970,7,c	;volatile
   543  0009E2  0012               	return	
   544  0009E4                     __end_of_previousChannel:
   545                           	opt stack 0
   546                           tblptru	equ	0xFF8
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           status	equ	0xFD8
   550                           
   551 ;; *************** function _nextChannel *****************
   552 ;; Defined at:
   553 ;;		line 459 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      unsigned char 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   567 ;;      Params:         0       0       0       0
   568 ;;      Locals:         0       0       0       0
   569 ;;      Temps:          0       0       0       0
   570 ;;      Totals:         0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    1
   574 ;; This function calls:
   575 ;;		_delay_10ms
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text2
   582  0009E4                     __ptext2:
   583                           	opt stack 0
   584  0009E4                     _nextChannel:
   585                           	opt stack 29
   586                           
   587                           ;main.c: 460: PORTCbits.RC6 = 1;
   588                           
   589                           ;incstack = 0
   590  0009E4  8C82               	bsf	3970,6,c	;volatile
   591                           
   592                           ;main.c: 461: delay_10ms(10);
   593  0009E6  0E00               	movlw	0
   594  0009E8  6E26               	movwf	delay_10ms@n+1,c
   595  0009EA  0E0A               	movlw	10
   596  0009EC  6E25               	movwf	delay_10ms@n,c
   597  0009EE  ECB0  F004         	call	_delay_10ms	;wreg free
   598                           
   599                           ;main.c: 462: PORTCbits.RC6 = 0;
   600  0009F2  9C82               	bcf	3970,6,c	;volatile
   601  0009F4  0012               	return	
   602  0009F6                     __end_of_nextChannel:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           status	equ	0xFD8
   608                           
   609 ;; *************** function _delay_10ms *****************
   610 ;; Defined at:
   611 ;;		line 604 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  n               2    0[COMRAM] unsigned int 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   625 ;;      Params:         2       0       0       0
   626 ;;      Locals:         0       0       0       0
   627 ;;      Temps:          1       0       0       0
   628 ;;      Totals:         3       0       0       0
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_nextChannel
   635 ;;		_previousChannel
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text3
   640  000960                     __ptext3:
   641                           	opt stack 0
   642  000960                     _delay_10ms:
   643                           	opt stack 29
   644                           
   645                           ;main.c: 605: while (n-- != 0) {
   646                           
   647                           ;incstack = 0
   648  000960  D007               	goto	l1580
   649  000962                     l1578:
   650                           
   651                           ;main.c: 606: _delay((unsigned long)((12)*(8000000/4000.0)));
   652  000962  0E20               	movlw	32
   653  000964  6E27               	movwf	??_delay_10ms& (0+255),c
   654  000966  0E2A               	movlw	42
   655  000968                     u1327:
   656  000968  2EE8               	decfsz	wreg,f,c
   657  00096A  D7FE               	goto	u1327
   658  00096C  2E27               	decfsz	??_delay_10ms& (0+255),f,c
   659  00096E  D7FC               	goto	u1327
   660  000970                     l1580:
   661  000970  0625               	decf	delay_10ms@n,f,c
   662  000972  A0D8               	btfss	status,0,c
   663  000974  0626               	decf	delay_10ms@n+1,f,c
   664  000976  2825               	incf	delay_10ms@n,w,c
   665  000978  E1F4               	bnz	l1578
   666  00097A  2826               	incf	delay_10ms@n+1,w,c
   667  00097C  B4D8               	btfsc	status,2,c
   668  00097E  0012               	return	
   669  000980  D7F0               	goto	l1578
   670  000982                     __end_of_delay_10ms:
   671                           	opt stack 0
   672                           tblptru	equ	0xFF8
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _errfm *****************
   678 ;; Defined at:
   679 ;;		line 505 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		None
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   693 ;;      Params:         0       0       0       0
   694 ;;      Locals:         0       0       0       0
   695 ;;      Temps:          0       0       0       0
   696 ;;      Totals:         0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text4
   707  000A18                     __ptext4:
   708                           	opt stack 0
   709  000A18                     _errfm:
   710                           	opt stack 30
   711  000A18                     l203:
   712  000A18  D7FF               	goto	l203
   713  000A1A                     __end_of_errfm:
   714                           	opt stack 0
   715                           tblptru	equ	0xFF8
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _buttontn *****************
   721 ;; Defined at:
   722 ;;		line 530 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  c               2    5[COMRAM] int 
   727 ;;  c               2    3[COMRAM] int 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2    0[COMRAM] int 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         2       0       0       0
   738 ;;      Locals:         4       0       0       0
   739 ;;      Temps:          1       0       0       0
   740 ;;      Totals:         7       0       0       0
   741 ;;Total ram usage:        7 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text5
   751  000708                     __ptext5:
   752                           	opt stack 0
   753  000708                     _buttontn:
   754                           	opt stack 30
   755                           
   756                           ;main.c: 531: if (PORTAbits.RA0 == 0)
   757                           
   758                           ;incstack = 0
   759  000708  B080               	btfsc	3968,0,c	;volatile
   760  00070A  D026               	goto	l211
   761                           
   762                           ;main.c: 532: {
   763                           ;main.c: 533: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   764  00070C  0E00               	movlw	0
   765  00070E  6E29               	movwf	buttontn@c+1,c
   766  000710  0E00               	movlw	0
   767  000712  6E28               	movwf	buttontn@c,c
   768  000714  BE29               	btfsc	buttontn@c+1,7,c
   769  000716  D006               	goto	l1792
   770  000718  5029               	movf	buttontn@c+1,w,c
   771  00071A  E112               	bnz	l213
   772  00071C  0E0B               	movlw	11
   773  00071E  5C28               	subwf	buttontn@c,w,c
   774  000720  B0D8               	btfsc	status,0,c
   775  000722  D00E               	goto	l213
   776  000724                     l1792:
   777  000724  0E0D               	movlw	13
   778  000726  6E27               	movwf	??_buttontn& (0+255),c
   779  000728  0EFC               	movlw	252
   780  00072A                     u1337:
   781  00072A  2EE8               	decfsz	wreg,f,c
   782  00072C  D7FE               	goto	u1337
   783  00072E  2E27               	decfsz	??_buttontn& (0+255),f,c
   784  000730  D7FC               	goto	u1337
   785  000732  4A28               	infsnz	buttontn@c,f,c
   786  000734  2A29               	incf	buttontn@c+1,f,c
   787  000736  BE29               	btfsc	buttontn@c+1,7,c
   788  000738  D7F5               	goto	l1792
   789  00073A  5029               	movf	buttontn@c+1,w,c
   790  00073C  E101               	bnz	u1200
   791  00073E  D7EE               	goto	L1
   792  000740                     u1200:
   793  000740                     l213:
   794                           
   795                           ;main.c: 534: if (PORTAbits.RA0 == 0)
   796  000740  B080               	btfsc	3968,0,c	;volatile
   797  000742  D005               	goto	l1802
   798                           
   799                           ;main.c: 535: {
   800                           ;main.c: 536: return 1;
   801  000744  0E00               	movlw	0
   802  000746  6E26               	movwf	?_buttontn+1,c
   803  000748  0E01               	movlw	1
   804  00074A  6E25               	movwf	?_buttontn,c
   805  00074C  0012               	return	
   806  00074E                     l1802:
   807                           
   808                           ;main.c: 539: return 0;
   809  00074E  0E00               	movlw	0
   810  000750  6E26               	movwf	?_buttontn+1,c
   811  000752  0E00               	movlw	0
   812  000754  6E25               	movwf	?_buttontn,c
   813  000756  0012               	return	
   814  000758                     l211:
   815                           
   816                           ;main.c: 540: }
   817                           ;main.c: 541: }
   818                           ;main.c: 543: if (PORTAbits.RA1 == 0)
   819  000758  B280               	btfsc	3968,1,c	;volatile
   820  00075A  0012               	return	
   821                           
   822                           ;main.c: 544: {
   823                           ;main.c: 545: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   824  00075C  0E00               	movlw	0
   825  00075E  6E2B               	movwf	buttontn@c_601+1,c
   826  000760  0E00               	movlw	0
   827  000762  6E2A               	movwf	buttontn@c_601,c
   828  000764  BE2B               	btfsc	buttontn@c_601+1,7,c
   829  000766  D006               	goto	l1812
   830  000768  502B               	movf	buttontn@c_601+1,w,c
   831  00076A  E112               	bnz	l219
   832  00076C  0E0B               	movlw	11
   833  00076E  5C2A               	subwf	buttontn@c_601,w,c
   834  000770  B0D8               	btfsc	status,0,c
   835  000772  D00E               	goto	l219
   836  000774                     l1812:
   837  000774  0E0D               	movlw	13
   838  000776  6E27               	movwf	??_buttontn& (0+255),c
   839  000778  0EFC               	movlw	252
   840  00077A                     u1347:
   841  00077A  2EE8               	decfsz	wreg,f,c
   842  00077C  D7FE               	goto	u1347
   843  00077E  2E27               	decfsz	??_buttontn& (0+255),f,c
   844  000780  D7FC               	goto	u1347
   845  000782  4A2A               	infsnz	buttontn@c_601,f,c
   846  000784  2A2B               	incf	buttontn@c_601+1,f,c
   847  000786  BE2B               	btfsc	buttontn@c_601+1,7,c
   848  000788  D7F5               	goto	l1812
   849  00078A  502B               	movf	buttontn@c_601+1,w,c
   850  00078C  E101               	bnz	u1240
   851  00078E  D7EE               	goto	L2
   852  000790                     u1240:
   853  000790                     l219:
   854                           
   855                           ;main.c: 546: if (PORTAbits.RA1 == 0)
   856  000790  B280               	btfsc	3968,1,c	;volatile
   857  000792  D005               	goto	l1822
   858                           
   859                           ;main.c: 547: {
   860                           ;main.c: 548: return 2;
   861  000794  0E00               	movlw	0
   862  000796  6E26               	movwf	?_buttontn+1,c
   863  000798  0E02               	movlw	2
   864  00079A  6E25               	movwf	?_buttontn,c
   865                           
   866                           ;main.c: 549: } else {
   867  00079C  0012               	return	
   868  00079E                     l1822:
   869                           
   870                           ;main.c: 550: return 0;
   871  00079E  0E00               	movlw	0
   872  0007A0  6E26               	movwf	?_buttontn+1,c
   873  0007A2  0E00               	movlw	0
   874  0007A4  6E25               	movwf	?_buttontn,c
   875  0007A6  0012               	return	
   876  0007A8                     __end_of_buttontn:
   877                           	opt stack 0
   878                           tblptru	equ	0xFF8
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _butnEvent *****************
   884 ;; Defined at:
   885 ;;		line 80 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  c               2   11[COMRAM] int 
   890 ;;  c               2    9[COMRAM] int 
   891 ;;  c               2    7[COMRAM] int 
   892 ;;  c               2    5[COMRAM] int 
   893 ;;  c               2    3[COMRAM] int 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2    0[COMRAM] unsigned int 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   903 ;;      Params:         2       0       0       0
   904 ;;      Locals:        10       0       0       0
   905 ;;      Temps:          1       0       0       0
   906 ;;      Totals:        13       0       0       0
   907 ;;Total ram usage:       13 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text6
   917  000326                     __ptext6:
   918                           	opt stack 0
   919  000326                     _butnEvent:
   920                           	opt stack 30
   921                           
   922                           ;main.c: 82: if (PORTAbits.RA0 == 0)
   923                           
   924                           ;incstack = 0
   925  000326  B080               	btfsc	3968,0,c	;volatile
   926  000328  D028               	goto	l75
   927                           
   928                           ;main.c: 83: {
   929                           ;main.c: 84: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   930  00032A  0E00               	movlw	0
   931  00032C  6E29               	movwf	butnEvent@c+1,c
   932  00032E  0E00               	movlw	0
   933  000330  6E28               	movwf	butnEvent@c,c
   934  000332  BE29               	btfsc	butnEvent@c+1,7,c
   935  000334  D006               	goto	l1590
   936  000336  5029               	movf	butnEvent@c+1,w,c
   937  000338  E112               	bnz	l77
   938  00033A  0E0B               	movlw	11
   939  00033C  5C28               	subwf	butnEvent@c,w,c
   940  00033E  B0D8               	btfsc	status,0,c
   941  000340  D00E               	goto	l77
   942  000342                     l1590:
   943  000342  0E0D               	movlw	13
   944  000344  6E27               	movwf	??_butnEvent& (0+255),c
   945  000346  0EFC               	movlw	252
   946  000348                     u1357:
   947  000348  2EE8               	decfsz	wreg,f,c
   948  00034A  D7FE               	goto	u1357
   949  00034C  2E27               	decfsz	??_butnEvent& (0+255),f,c
   950  00034E  D7FC               	goto	u1357
   951  000350  4A28               	infsnz	butnEvent@c,f,c
   952  000352  2A29               	incf	butnEvent@c+1,f,c
   953  000354  BE29               	btfsc	butnEvent@c+1,7,c
   954  000356  D7F5               	goto	l1590
   955  000358  5029               	movf	butnEvent@c+1,w,c
   956  00035A  E101               	bnz	u920
   957  00035C  D7EE               	goto	L3
   958  00035E                     u920:
   959  00035E                     l77:
   960                           
   961                           ;main.c: 85: if (PORTAbits.RA0 == 0)
   962  00035E  B080               	btfsc	3968,0,c	;volatile
   963  000360  D006               	goto	l78
   964                           
   965                           ;main.c: 86: {
   966                           ;main.c: 88: PORTCbits.RC6 = 1;
   967  000362  8C82               	bsf	3970,6,c	;volatile
   968                           
   969                           ;main.c: 89: return 1;
   970  000364  0E00               	movlw	0
   971  000366  6E26               	movwf	?_butnEvent+1,c
   972  000368  0E01               	movlw	1
   973  00036A  6E25               	movwf	?_butnEvent,c
   974  00036C  0012               	return	
   975  00036E                     l78:
   976                           
   977                           ;main.c: 94: PORTCbits.RC6 = 0;
   978  00036E  9C82               	bcf	3970,6,c	;volatile
   979                           
   980                           ;main.c: 95: return 0;
   981  000370  0E00               	movlw	0
   982  000372  6E26               	movwf	?_butnEvent+1,c
   983  000374  0E00               	movlw	0
   984  000376  6E25               	movwf	?_butnEvent,c
   985  000378  0012               	return	
   986  00037A                     l75:
   987                           
   988                           ;main.c: 97: }
   989                           ;main.c: 98: }
   990                           ;main.c: 100: if (PORTAbits.RA1 == 0)
   991  00037A  B280               	btfsc	3968,1,c	;volatile
   992  00037C  D026               	goto	l81
   993                           
   994                           ;main.c: 101: {
   995                           ;main.c: 102: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   996  00037E  0E00               	movlw	0
   997  000380  6E2B               	movwf	butnEvent@c_507+1,c
   998  000382  0E00               	movlw	0
   999  000384  6E2A               	movwf	butnEvent@c_507,c
  1000  000386  BE2B               	btfsc	butnEvent@c_507+1,7,c
  1001  000388  D006               	goto	l1612
  1002  00038A  502B               	movf	butnEvent@c_507+1,w,c
  1003  00038C  E112               	bnz	l83
  1004  00038E  0E0B               	movlw	11
  1005  000390  5C2A               	subwf	butnEvent@c_507,w,c
  1006  000392  B0D8               	btfsc	status,0,c
  1007  000394  D00E               	goto	l83
  1008  000396                     l1612:
  1009  000396  0E0D               	movlw	13
  1010  000398  6E27               	movwf	??_butnEvent& (0+255),c
  1011  00039A  0EFC               	movlw	252
  1012  00039C                     u1367:
  1013  00039C  2EE8               	decfsz	wreg,f,c
  1014  00039E  D7FE               	goto	u1367
  1015  0003A0  2E27               	decfsz	??_butnEvent& (0+255),f,c
  1016  0003A2  D7FC               	goto	u1367
  1017  0003A4  4A2A               	infsnz	butnEvent@c_507,f,c
  1018  0003A6  2A2B               	incf	butnEvent@c_507+1,f,c
  1019  0003A8  BE2B               	btfsc	butnEvent@c_507+1,7,c
  1020  0003AA  D7F5               	goto	l1612
  1021  0003AC  502B               	movf	butnEvent@c_507+1,w,c
  1022  0003AE  E101               	bnz	u960
  1023  0003B0  D7EE               	goto	L4
  1024  0003B2                     u960:
  1025  0003B2                     l83:
  1026                           
  1027                           ;main.c: 103: if (PORTAbits.RA1 == 0)
  1028  0003B2  B280               	btfsc	3968,1,c	;volatile
  1029  0003B4  D005               	goto	l1622
  1030                           
  1031                           ;main.c: 104: {
  1032                           ;main.c: 105: return 2;
  1033  0003B6  0E00               	movlw	0
  1034  0003B8  6E26               	movwf	?_butnEvent+1,c
  1035  0003BA  0E02               	movlw	2
  1036  0003BC  6E25               	movwf	?_butnEvent,c
  1037  0003BE  0012               	return	
  1038  0003C0                     l1622:
  1039                           
  1040                           ;main.c: 107: return 0;
  1041  0003C0  0E00               	movlw	0
  1042  0003C2  6E26               	movwf	?_butnEvent+1,c
  1043  0003C4  0E00               	movlw	0
  1044  0003C6  6E25               	movwf	?_butnEvent,c
  1045  0003C8  0012               	return	
  1046  0003CA                     l81:
  1047                           
  1048                           ;main.c: 108: }
  1049                           ;main.c: 109: }
  1050                           ;main.c: 111: if (PORTBbits.RB0 == 0)
  1051  0003CA  B081               	btfsc	3969,0,c	;volatile
  1052  0003CC  D026               	goto	l86
  1053                           
  1054                           ;main.c: 112: {
  1055                           ;main.c: 113: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1056  0003CE  0E00               	movlw	0
  1057  0003D0  6E2D               	movwf	butnEvent@c_516+1,c
  1058  0003D2  0E00               	movlw	0
  1059  0003D4  6E2C               	movwf	butnEvent@c_516,c
  1060  0003D6  BE2D               	btfsc	butnEvent@c_516+1,7,c
  1061  0003D8  D006               	goto	l1632
  1062  0003DA  502D               	movf	butnEvent@c_516+1,w,c
  1063  0003DC  E112               	bnz	l88
  1064  0003DE  0E0B               	movlw	11
  1065  0003E0  5C2C               	subwf	butnEvent@c_516,w,c
  1066  0003E2  B0D8               	btfsc	status,0,c
  1067  0003E4  D00E               	goto	l88
  1068  0003E6                     l1632:
  1069  0003E6  0E0D               	movlw	13
  1070  0003E8  6E27               	movwf	??_butnEvent& (0+255),c
  1071  0003EA  0EFC               	movlw	252
  1072  0003EC                     u1377:
  1073  0003EC  2EE8               	decfsz	wreg,f,c
  1074  0003EE  D7FE               	goto	u1377
  1075  0003F0  2E27               	decfsz	??_butnEvent& (0+255),f,c
  1076  0003F2  D7FC               	goto	u1377
  1077  0003F4  4A2C               	infsnz	butnEvent@c_516,f,c
  1078  0003F6  2A2D               	incf	butnEvent@c_516+1,f,c
  1079  0003F8  BE2D               	btfsc	butnEvent@c_516+1,7,c
  1080  0003FA  D7F5               	goto	l1632
  1081  0003FC  502D               	movf	butnEvent@c_516+1,w,c
  1082  0003FE  E101               	bnz	u1000
  1083  000400  D7EE               	goto	L5
  1084  000402                     u1000:
  1085  000402                     l88:
  1086                           
  1087                           ;main.c: 114: if (PORTBbits.RB0 == 0)
  1088  000402  B081               	btfsc	3969,0,c	;volatile
  1089  000404  D005               	goto	l1642
  1090                           
  1091                           ;main.c: 115: {
  1092                           ;main.c: 116: return 3;
  1093  000406  0E00               	movlw	0
  1094  000408  6E26               	movwf	?_butnEvent+1,c
  1095  00040A  0E03               	movlw	3
  1096  00040C  6E25               	movwf	?_butnEvent,c
  1097  00040E  0012               	return	
  1098  000410                     l1642:
  1099                           
  1100                           ;main.c: 118: return 0;
  1101  000410  0E00               	movlw	0
  1102  000412  6E26               	movwf	?_butnEvent+1,c
  1103  000414  0E00               	movlw	0
  1104  000416  6E25               	movwf	?_butnEvent,c
  1105  000418  0012               	return	
  1106  00041A                     l86:
  1107                           
  1108                           ;main.c: 119: }
  1109                           ;main.c: 120: }
  1110                           ;main.c: 122: if (PORTBbits.RB5 == 0)
  1111  00041A  BA81               	btfsc	3969,5,c	;volatile
  1112  00041C  D026               	goto	l91
  1113                           
  1114                           ;main.c: 123: {
  1115                           ;main.c: 124: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1116  00041E  0E00               	movlw	0
  1117  000420  6E2F               	movwf	butnEvent@c_517+1,c
  1118  000422  0E00               	movlw	0
  1119  000424  6E2E               	movwf	butnEvent@c_517,c
  1120  000426  BE2F               	btfsc	butnEvent@c_517+1,7,c
  1121  000428  D006               	goto	l1652
  1122  00042A  502F               	movf	butnEvent@c_517+1,w,c
  1123  00042C  E112               	bnz	l93
  1124  00042E  0E0B               	movlw	11
  1125  000430  5C2E               	subwf	butnEvent@c_517,w,c
  1126  000432  B0D8               	btfsc	status,0,c
  1127  000434  D00E               	goto	l93
  1128  000436                     l1652:
  1129  000436  0E0D               	movlw	13
  1130  000438  6E27               	movwf	??_butnEvent& (0+255),c
  1131  00043A  0EFC               	movlw	252
  1132  00043C                     u1387:
  1133  00043C  2EE8               	decfsz	wreg,f,c
  1134  00043E  D7FE               	goto	u1387
  1135  000440  2E27               	decfsz	??_butnEvent& (0+255),f,c
  1136  000442  D7FC               	goto	u1387
  1137  000444  4A2E               	infsnz	butnEvent@c_517,f,c
  1138  000446  2A2F               	incf	butnEvent@c_517+1,f,c
  1139  000448  BE2F               	btfsc	butnEvent@c_517+1,7,c
  1140  00044A  D7F5               	goto	l1652
  1141  00044C  502F               	movf	butnEvent@c_517+1,w,c
  1142  00044E  E101               	bnz	u1040
  1143  000450  D7EE               	goto	L6
  1144  000452                     u1040:
  1145  000452                     l93:
  1146                           
  1147                           ;main.c: 125: if (PORTBbits.RB5 == 0)
  1148  000452  BA81               	btfsc	3969,5,c	;volatile
  1149  000454  D005               	goto	l1662
  1150                           
  1151                           ;main.c: 126: {
  1152                           ;main.c: 127: return 4;
  1153  000456  0E00               	movlw	0
  1154  000458  6E26               	movwf	?_butnEvent+1,c
  1155  00045A  0E04               	movlw	4
  1156  00045C  6E25               	movwf	?_butnEvent,c
  1157  00045E  0012               	return	
  1158  000460                     l1662:
  1159                           
  1160                           ;main.c: 129: return 0;
  1161  000460  0E00               	movlw	0
  1162  000462  6E26               	movwf	?_butnEvent+1,c
  1163  000464  0E00               	movlw	0
  1164  000466  6E25               	movwf	?_butnEvent,c
  1165  000468  0012               	return	
  1166  00046A                     l91:
  1167                           
  1168                           ;main.c: 130: }
  1169                           ;main.c: 131: }
  1170                           ;main.c: 133: if (PORTGbits.RG0 == 0)
  1171  00046A  B086               	btfsc	3974,0,c	;volatile
  1172  00046C  0012               	return	
  1173                           
  1174                           ;main.c: 134: {
  1175                           ;main.c: 135: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1176  00046E  0E00               	movlw	0
  1177  000470  6E31               	movwf	butnEvent@c_524+1,c
  1178  000472  0E00               	movlw	0
  1179  000474  6E30               	movwf	butnEvent@c_524,c
  1180  000476  BE31               	btfsc	butnEvent@c_524+1,7,c
  1181  000478  D006               	goto	l1672
  1182  00047A  5031               	movf	butnEvent@c_524+1,w,c
  1183  00047C  E112               	bnz	l98
  1184  00047E  0E0B               	movlw	11
  1185  000480  5C30               	subwf	butnEvent@c_524,w,c
  1186  000482  B0D8               	btfsc	status,0,c
  1187  000484  D00E               	goto	l98
  1188  000486                     l1672:
  1189  000486  0E0D               	movlw	13
  1190  000488  6E27               	movwf	??_butnEvent& (0+255),c
  1191  00048A  0EFC               	movlw	252
  1192  00048C                     u1397:
  1193  00048C  2EE8               	decfsz	wreg,f,c
  1194  00048E  D7FE               	goto	u1397
  1195  000490  2E27               	decfsz	??_butnEvent& (0+255),f,c
  1196  000492  D7FC               	goto	u1397
  1197  000494  4A30               	infsnz	butnEvent@c_524,f,c
  1198  000496  2A31               	incf	butnEvent@c_524+1,f,c
  1199  000498  BE31               	btfsc	butnEvent@c_524+1,7,c
  1200  00049A  D7F5               	goto	l1672
  1201  00049C  5031               	movf	butnEvent@c_524+1,w,c
  1202  00049E  E101               	bnz	u1080
  1203  0004A0  D7EE               	goto	L7
  1204  0004A2                     u1080:
  1205  0004A2                     l98:
  1206                           
  1207                           ;main.c: 136: if (PORTGbits.RG0 == 0)
  1208  0004A2  B086               	btfsc	3974,0,c	;volatile
  1209  0004A4  D005               	goto	l1682
  1210                           
  1211                           ;main.c: 137: {
  1212                           ;main.c: 138: return 5;
  1213  0004A6  0E00               	movlw	0
  1214  0004A8  6E26               	movwf	?_butnEvent+1,c
  1215  0004AA  0E05               	movlw	5
  1216  0004AC  6E25               	movwf	?_butnEvent,c
  1217                           
  1218                           ;main.c: 139: } else {
  1219  0004AE  0012               	return	
  1220  0004B0                     l1682:
  1221                           
  1222                           ;main.c: 140: return 0;
  1223  0004B0  0E00               	movlw	0
  1224  0004B2  6E26               	movwf	?_butnEvent+1,c
  1225  0004B4  0E00               	movlw	0
  1226  0004B6  6E25               	movwf	?_butnEvent,c
  1227  0004B8  0012               	return	
  1228  0004BA                     __end_of_butnEvent:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _VolumeUp *****************
  1236 ;; Defined at:
  1237 ;;		line 476 in file "main.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  down            1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  down            1    0[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      unsigned char 
  1244 ;; Registers used:
  1245 ;;		wreg
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1251 ;;      Params:         0       0       0       0
  1252 ;;      Locals:         0       0       0       0
  1253 ;;      Temps:          0       0       0       0
  1254 ;;      Totals:         0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text7
  1265  000A1A                     __ptext7:
  1266                           	opt stack 0
  1267  000A1A                     _VolumeUp:
  1268                           	opt stack 30
  1269                           
  1270                           ;main.c: 479: return 0;
  1271                           ;	Return value of _VolumeUp is never used
  1272                           
  1273                           ;incstack = 0
  1274  000A1A  0012               	return		;funcret
  1275  000A1C                     __end_of_VolumeUp:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _VolumeDown *****************
  1283 ;; Defined at:
  1284 ;;		line 482 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  down            1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  down            1    0[COMRAM] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1298 ;;      Params:         0       0       0       0
  1299 ;;      Locals:         0       0       0       0
  1300 ;;      Temps:          0       0       0       0
  1301 ;;      Totals:         0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text8
  1312  000A1C                     __ptext8:
  1313                           	opt stack 0
  1314  000A1C                     _VolumeDown:
  1315                           	opt stack 30
  1316                           
  1317                           ;main.c: 485: return 0;
  1318                           ;	Return value of _VolumeDown is never used
  1319                           
  1320                           ;incstack = 0
  1321  000A1C  0012               	return		;funcret
  1322  000A1E                     __end_of_VolumeDown:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function _MuteHard *****************
  1330 ;; Defined at:
  1331 ;;		line 488 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  down            1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  down            1    0[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      unsigned char 
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1345 ;;      Params:         0       0       0       0
  1346 ;;      Locals:         0       0       0       0
  1347 ;;      Temps:          0       0       0       0
  1348 ;;      Totals:         0       0       0       0
  1349 ;;Total ram usage:        0 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text9
  1359  000A1E                     __ptext9:
  1360                           	opt stack 0
  1361  000A1E                     _MuteHard:
  1362                           	opt stack 30
  1363                           
  1364                           ;main.c: 491: return 0;
  1365                           ;	Return value of _MuteHard is never used
  1366                           
  1367                           ;incstack = 0
  1368  000A1E  0012               	return		;funcret
  1369  000A20                     __end_of_MuteHard:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _Init *****************
  1377 ;; Defined at:
  1378 ;;		line 180 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  i               2    0        int 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1392 ;;      Params:         0       0       0       0
  1393 ;;      Locals:         0       0       0       0
  1394 ;;      Temps:          0       0       0       0
  1395 ;;      Totals:         0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    1
  1399 ;; This function calls:
  1400 ;;		_OpenI2C
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text10
  1407  00082A                     __ptext10:
  1408                           	opt stack 0
  1409  00082A                     _Init:
  1410                           	opt stack 29
  1411                           
  1412                           ;main.c: 182: int i;
  1413                           ;main.c: 184: OSCCON = 0b01110010;
  1414                           
  1415                           ;incstack = 0
  1416  00082A  0E72               	movlw	114
  1417  00082C  6ED3               	movwf	4051,c	;volatile
  1418                           
  1419                           ;main.c: 185: LCDSE0 = 0b11111111;
  1420  00082E  010F               	movlb	15	; () banked
  1421  000830  695A               	setf	90,b	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;main.c: 186: LCDSE1 = 0b11111111;
  1425  000832  010F               	movlb	15	; () banked
  1426  000834  695B               	setf	91,b	;volatile
  1427                           
  1428                           ; BSR set to: 15
  1429                           ;main.c: 187: LCDSE2 = 0b11111111;
  1430  000836  010F               	movlb	15	; () banked
  1431  000838  695C               	setf	92,b	;volatile
  1432                           
  1433                           ;main.c: 188: LCDSE3 = 0b00000000;
  1434  00083A  0E00               	movlw	0
  1435  00083C  010F               	movlb	15	; () banked
  1436  00083E  6F5D               	movwf	93,b	;volatile
  1437                           
  1438                           ;main.c: 189: LCDCON = 0b10001000;
  1439  000840  0E88               	movlw	136
  1440  000842  010F               	movlb	15	; () banked
  1441  000844  6F59               	movwf	89,b	;volatile
  1442                           
  1443                           ;main.c: 190: LCDPS = 0b00110110;
  1444  000846  0E36               	movlw	54
  1445  000848  010F               	movlb	15	; () banked
  1446  00084A  6F58               	movwf	88,b	;volatile
  1447                           
  1448                           ;main.c: 191: ADCON1 = 0b00111111;
  1449  00084C  0E3F               	movlw	63
  1450  00084E  6EC1               	movwf	4033,c	;volatile
  1451                           
  1452                           ;main.c: 192: TRISA = 0b00000011;
  1453  000850  0E03               	movlw	3
  1454  000852  6E92               	movwf	3986,c	;volatile
  1455                           
  1456                           ;main.c: 193: TRISB = 0b00100001;
  1457  000854  0E21               	movlw	33
  1458  000856  6E93               	movwf	3987,c	;volatile
  1459                           
  1460                           ;main.c: 194: TRISC = 0b00011000;
  1461  000858  0E18               	movlw	24
  1462  00085A  6E94               	movwf	3988,c	;volatile
  1463                           
  1464                           ; BSR set to: 15
  1465                           ;main.c: 195: TRISG = 0b11111111;
  1466  00085C  6898               	setf	3992,c	;volatile
  1467                           
  1468                           ;main.c: 196: PORTA = 0;
  1469  00085E  0E00               	movlw	0
  1470  000860  6E80               	movwf	3968,c	;volatile
  1471                           
  1472                           ;main.c: 197: PORTB = 0;
  1473  000862  0E00               	movlw	0
  1474  000864  6E81               	movwf	3969,c	;volatile
  1475                           
  1476                           ;main.c: 198: PORTC = 0;
  1477  000866  0E00               	movlw	0
  1478  000868  6E82               	movwf	3970,c	;volatile
  1479                           
  1480                           ; BSR set to: 15
  1481                           ;main.c: 199: INTCONbits.TMR0IF = 0;
  1482  00086A  94F2               	bcf	intcon,2,c	;volatile
  1483                           
  1484                           ;main.c: 201: T0CON = 0b00001000;
  1485  00086C  0E08               	movlw	8
  1486  00086E  6ED5               	movwf	4053,c	;volatile
  1487                           
  1488                           ;main.c: 202: TMR0H = 0;
  1489  000870  0E00               	movlw	0
  1490  000872  6ED7               	movwf	4055,c	;volatile
  1491                           
  1492                           ;main.c: 203: TMR0L = 0;
  1493  000874  0E00               	movlw	0
  1494  000876  6ED6               	movwf	4054,c	;volatile
  1495                           
  1496                           ; BSR set to: 15
  1497                           ;main.c: 204: T0CONbits.TMR0ON = 1;
  1498  000878  8ED5               	bsf	4053,7,c	;volatile
  1499                           
  1500                           ; BSR set to: 15
  1501                           ;main.c: 205: OpenI2C(0b00001000, 0b10000000);
  1502  00087A  0E80               	movlw	128
  1503  00087C  6E25               	movwf	OpenI2C@slew,c
  1504  00087E  0E08               	movlw	8
  1505  000880  ECC1  F004         	call	_OpenI2C
  1506                           
  1507                           ;main.c: 206: SSPADD = 0x3F;
  1508  000884  0E3F               	movlw	63
  1509  000886  6EC8               	movwf	4040,c	;volatile
  1510  000888  0012               	return	
  1511  00088A                     __end_of_Init:
  1512                           	opt stack 0
  1513                           tblptru	equ	0xFF8
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _OpenI2C *****************
  1520 ;; Defined at:
  1521 ;;		line 14 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_open.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  sync_mode       1    wreg     unsigned char 
  1524 ;;  slew            1    0[COMRAM] unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1536 ;;      Params:         1       0       0       0
  1537 ;;      Locals:         1       0       0       0
  1538 ;;      Temps:          0       0       0       0
  1539 ;;      Totals:         2       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_Init
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text11
  1550  000982                     __ptext11:
  1551                           	opt stack 0
  1552  000982                     _OpenI2C:
  1553                           	opt stack 29
  1554                           
  1555                           ;incstack = 0
  1556                           ;OpenI2C@sync_mode stored from wreg
  1557  000982  6E26               	movwf	OpenI2C@sync_mode,c
  1558  000984  0E3F               	movlw	63
  1559  000986  16C7               	andwf	4039,f,c	;volatile
  1560  000988  0E00               	movlw	0
  1561  00098A  6EC6               	movwf	4038,c	;volatile
  1562  00098C  0E00               	movlw	0
  1563  00098E  6EC5               	movwf	4037,c	;volatile
  1564  000990  5026               	movf	OpenI2C@sync_mode,w,c
  1565  000992  12C6               	iorwf	4038,f,c	;volatile
  1566  000994  5025               	movf	OpenI2C@slew,w,c
  1567  000996  12C7               	iorwf	4039,f,c	;volatile
  1568  000998  8694               	bsf	3988,3,c	;volatile
  1569  00099A  8894               	bsf	3988,4,c	;volatile
  1570  00099C  8AC6               	bsf	4038,5,c	;volatile
  1571  00099E  0012               	return		;funcret
  1572  0009A0                     __end_of_OpenI2C:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           status	equ	0xFD8
  1579                           
  1580 ;; *************** function _FMvers *****************
  1581 ;; Defined at:
  1582 ;;		line 426 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  1585 ;;		 -> main@ui(2), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      unsigned char 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1597 ;;      Params:         2       0       0       0
  1598 ;;      Locals:         0       0       0       0
  1599 ;;      Temps:          0       0       0       0
  1600 ;;      Totals:         2       0       0       0
  1601 ;;Total ram usage:        2 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		_FMread
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text12
  1612  000A08                     __ptext12:
  1613                           	opt stack 0
  1614  000A08                     _FMvers:
  1615                           	opt stack 27
  1616                           
  1617                           ;main.c: 427: if (FMread(0x1C, vsn) != 0) return 1;
  1618                           
  1619                           ;incstack = 0
  1620  000A08  C030  F027         	movff	FMvers@vsn,FMread@data
  1621  000A0C  C031  F028         	movff	FMvers@vsn+1,FMread@data+1
  1622  000A10  0E1C               	movlw	28
  1623  000A12  EC5D  F002         	call	_FMread
  1624                           
  1625                           ;	Return value of _FMvers is never used
  1626  000A16  0012               	return	
  1627  000A18                     __end_of_FMvers:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           intcon	equ	0xFF2
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _FMinit *****************
  1636 ;; Defined at:
  1637 ;;		line 358 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  dat             2   17[COMRAM] unsigned int 
  1642 ;;  ad              1   19[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      unsigned char 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1652 ;;      Params:         0       0       0       0
  1653 ;;      Locals:         3       0       0       0
  1654 ;;      Temps:          0       0       0       0
  1655 ;;      Totals:         3       0       0       0
  1656 ;;Total ram usage:        3 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    4
  1659 ;; This function calls:
  1660 ;;		_FMready
  1661 ;;		_FMwrite
  1662 ;;		_dly
  1663 ;;		_showFreq
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text13
  1670  000584                     __ptext13:
  1671                           	opt stack 0
  1672  000584                     _FMinit:
  1673                           	opt stack 26
  1674                           
  1675                           ;main.c: 360: unsigned char ad;
  1676                           ;main.c: 361: unsigned int dat;
  1677                           ;main.c: 364: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  1678                           
  1679                           ;incstack = 0
  1680  000584  0E00               	movlw	0
  1681  000586  6E38               	movwf	FMinit@ad,c
  1682  000588                     l1708:
  1683  000588  0E11               	movlw	17
  1684  00058A  6438               	cpfsgt	FMinit@ad,c
  1685  00058C  D001               	goto	l1712
  1686  00058E  D018               	goto	l160
  1687  000590                     l1712:
  1688  000590  5038               	movf	FMinit@ad,w,c
  1689  000592  0D02               	mullw	2
  1690  000594  0E01               	movlw	low _regDflt
  1691  000596  24F3               	addwf	prodl,w,c
  1692  000598  6EF6               	movwf	tblptrl,c
  1693  00059A  0E03               	movlw	high _regDflt
  1694  00059C  20F4               	addwfc	prodh,w,c
  1695  00059E  6EF7               	movwf	tblptrh,c
  1696  0005A0                     	if	0	;There are less than 3 active tblptr bytes
  1697  0005A0                     	endif
  1698  0005A0  5038               	movf	FMinit@ad,w,c
  1699  0005A2  0D02               	mullw	2
  1700  0005A4  0E01               	movlw	low _regImg
  1701  0005A6  24F3               	addwf	prodl,w,c
  1702  0005A8  6ED9               	movwf	fsr2l,c
  1703  0005AA  0E00               	movlw	high _regImg
  1704  0005AC  20F4               	addwfc	prodh,w,c
  1705  0005AE  6EDA               	movwf	fsr2h,c
  1706  0005B0  0009               	tblrd		*+
  1707  0005B2  CFF5 FFDE          	movff	tablat,postinc2
  1708  0005B6  0008               	tblrd		*
  1709  0005B8  CFF5 FFDD          	movff	tablat,postdec2
  1710  0005BC  2A38               	incf	FMinit@ad,f,c
  1711  0005BE  D7E4               	goto	l1708
  1712  0005C0                     l160:
  1713                           
  1714                           ;main.c: 366: dat = regImg[0];
  1715  0005C0  C001  F036         	movff	_regImg,FMinit@dat
  1716  0005C4  C002  F037         	movff	_regImg+1,FMinit@dat+1
  1717                           
  1718                           ;main.c: 367: regImg[0] &= ~1;
  1719  0005C8  9001               	bcf	_regImg,0,c
  1720                           
  1721                           ;main.c: 368: if (FMwrite(0) != 0) return 1;
  1722  0005CA  0E00               	movlw	0
  1723  0005CC  ECD4  F003         	call	_FMwrite
  1724  0005D0  0900               	iorlw	0
  1725  0005D2  B4D8               	btfsc	status,2,c
  1726  0005D4  D002               	goto	l1726
  1727  0005D6  0E01               	movlw	1
  1728  0005D8  0012               	return	
  1729  0005DA                     l1726:
  1730                           
  1731                           ;main.c: 369: for (ad = 1; ad < 18; ad++) {
  1732  0005DA  0E01               	movlw	1
  1733  0005DC  6E38               	movwf	FMinit@ad,c
  1734  0005DE                     l1728:
  1735  0005DE  0E11               	movlw	17
  1736  0005E0  6438               	cpfsgt	FMinit@ad,c
  1737  0005E2  D001               	goto	l1732
  1738  0005E4  D00A               	goto	l1742
  1739  0005E6                     l1732:
  1740                           
  1741                           ;main.c: 370: if (FMwrite(ad) != 0)return 1;
  1742  0005E6  5038               	movf	FMinit@ad,w,c
  1743  0005E8  ECD4  F003         	call	_FMwrite
  1744  0005EC  0900               	iorlw	0
  1745  0005EE  B4D8               	btfsc	status,2,c
  1746  0005F0  D002               	goto	l1738
  1747  0005F2  0E01               	movlw	1
  1748  0005F4  0012               	return	
  1749  0005F6                     l1738:
  1750  0005F6  2A38               	incf	FMinit@ad,f,c
  1751  0005F8  D7F2               	goto	l1728
  1752  0005FA                     l1742:
  1753                           
  1754                           ;main.c: 371: }
  1755                           ;main.c: 373: regImg[0] = dat | 1;
  1756  0005FA  0E01               	movlw	1
  1757  0005FC  1036               	iorwf	FMinit@dat,w,c
  1758  0005FE  6E01               	movwf	_regImg,c
  1759  000600  5037               	movf	FMinit@dat+1,w,c
  1760  000602  6E02               	movwf	_regImg+1,c
  1761                           
  1762                           ;main.c: 374: if (FMwrite(0) != 0) return 1;
  1763  000604  0E00               	movlw	0
  1764  000606  ECD4  F003         	call	_FMwrite
  1765  00060A  0900               	iorlw	0
  1766  00060C  B4D8               	btfsc	status,2,c
  1767  00060E  D002               	goto	l1750
  1768  000610  0E01               	movlw	1
  1769  000612  0012               	return	
  1770  000614                     l1750:
  1771                           
  1772                           ;main.c: 375: dly(20);
  1773  000614  0E00               	movlw	0
  1774  000616  6E26               	movwf	dly@d+1,c
  1775  000618  0E14               	movlw	20
  1776  00061A  6E25               	movwf	dly@d,c
  1777  00061C  EC97  F004         	call	_dly	;wreg free
  1778                           
  1779                           ;main.c: 376: while (FMready(&dat), !dat) dly(2);
  1780  000620  D006               	goto	l1754
  1781  000622                     l1752:
  1782  000622  0E00               	movlw	0
  1783  000624  6E26               	movwf	dly@d+1,c
  1784  000626  0E02               	movlw	2
  1785  000628  6E25               	movwf	dly@d,c
  1786  00062A  EC97  F004         	call	_dly	;wreg free
  1787  00062E                     l1754:
  1788  00062E  0E36               	movlw	low FMinit@dat
  1789  000630  6E30               	movwf	FMready@rdy,c
  1790  000632  0E00               	movlw	high FMinit@dat
  1791  000634  6E31               	movwf	FMready@rdy+1,c
  1792  000636  EC74  F004         	call	_FMready	;wreg free
  1793  00063A  5036               	movf	FMinit@dat,w,c
  1794  00063C  1037               	iorwf	FMinit@dat+1,w,c
  1795  00063E  B4D8               	btfsc	status,2,c
  1796  000640  D7F0               	goto	l1752
  1797                           
  1798                           ;main.c: 377: showFreq();
  1799  000642  EC10  F005         	call	_showFreq	;wreg free
  1800                           
  1801                           ;main.c: 378: return 0;
  1802  000646  0E00               	movlw	0
  1803  000648  0012               	return	
  1804  00064A                     __end_of_FMinit:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           prodh	equ	0xFF4
  1811                           prodl	equ	0xFF3
  1812                           intcon	equ	0xFF2
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postinc2	equ	0xFDE
  1816                           postdec2	equ	0xFDD
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _showFreq *****************
  1822 ;; Defined at:
  1823 ;;		line 521 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		None
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1837 ;;      Params:         0       0       0       0
  1838 ;;      Locals:         0       0       0       0
  1839 ;;      Temps:          0       0       0       0
  1840 ;;      Totals:         0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_FMinit
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text14
  1851  000A20                     __ptext14:
  1852                           	opt stack 0
  1853  000A20                     _showFreq:
  1854                           	opt stack 29
  1855                           
  1856                           ;main.c: 523: ;
  1857                           ;main.c: 524: return 0;
  1858                           ;	Return value of _showFreq is never used
  1859                           
  1860                           ;incstack = 0
  1861  000A20  0012               	return		;funcret
  1862  000A22                     __end_of_showFreq:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           prodh	equ	0xFF4
  1869                           prodl	equ	0xFF3
  1870                           intcon	equ	0xFF2
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           postinc2	equ	0xFDE
  1874                           postdec2	equ	0xFDD
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _dly *****************
  1880 ;; Defined at:
  1881 ;;		line 149 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  d               2    0[COMRAM] int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  i               2    2[COMRAM] int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1895 ;;      Params:         2       0       0       0
  1896 ;;      Locals:         2       0       0       0
  1897 ;;      Temps:          0       0       0       0
  1898 ;;      Totals:         4       0       0       0
  1899 ;;Total ram usage:        4 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_FMinit
  1905 ;;		_main
  1906 ;;		_FMfrequenc
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text15
  1911  00092E                     __ptext15:
  1912                           	opt stack 0
  1913  00092E                     _dly:
  1914                           	opt stack 30
  1915                           
  1916                           ;main.c: 151: int i = 0;
  1917                           
  1918                           ;incstack = 0
  1919  00092E  0E00               	movlw	0
  1920  000930  6E28               	movwf	dly@i+1,c
  1921  000932  0E00               	movlw	0
  1922  000934  6E27               	movwf	dly@i,c
  1923                           
  1924                           ;main.c: 153: for (; d; --d)
  1925  000936  D00F               	goto	l1548
  1926  000938                     l1540:
  1927                           
  1928                           ;main.c: 154: for (i = 100; i; --i);
  1929  000938  0E00               	movlw	0
  1930  00093A  6E28               	movwf	dly@i+1,c
  1931  00093C  0E64               	movlw	100
  1932  00093E  6E27               	movwf	dly@i,c
  1933  000940  D003               	goto	l1544
  1934  000942                     l1542:
  1935  000942  0627               	decf	dly@i,f,c
  1936  000944  A0D8               	btfss	status,0,c
  1937  000946  0628               	decf	dly@i+1,f,c
  1938  000948                     l1544:
  1939  000948  5027               	movf	dly@i,w,c
  1940  00094A  1028               	iorwf	dly@i+1,w,c
  1941  00094C  A4D8               	btfss	status,2,c
  1942  00094E  D7F9               	goto	l1542
  1943  000950  0625               	decf	dly@d,f,c
  1944  000952  A0D8               	btfss	status,0,c
  1945  000954  0626               	decf	dly@d+1,f,c
  1946  000956                     l1548:
  1947  000956  5025               	movf	dly@d,w,c
  1948  000958  1026               	iorwf	dly@d+1,w,c
  1949  00095A  B4D8               	btfsc	status,2,c
  1950  00095C  0012               	return	
  1951  00095E  D7EC               	goto	l1540
  1952  000960                     __end_of_dly:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           prodh	equ	0xFF4
  1959                           prodl	equ	0xFF3
  1960                           intcon	equ	0xFF2
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           postinc2	equ	0xFDE
  1964                           postdec2	equ	0xFDD
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _FMwrite *****************
  1970 ;; Defined at:
  1971 ;;		line 248 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  adr             1    wreg     unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  adr             1    6[COMRAM] unsigned char 
  1976 ;;  regstr          2    0        unsigned int 
  1977 ;;  secndByt        1    5[COMRAM] unsigned char 
  1978 ;;  firstByt        1    4[COMRAM] unsigned char 
  1979 ;;  rpy             1    0        unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      unsigned char 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       0       0       0
  1990 ;;      Locals:         3       0       0       0
  1991 ;;      Temps:          2       0       0       0
  1992 ;;      Totals:         5       0       0       0
  1993 ;;Total ram usage:        5 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    2
  1996 ;; This function calls:
  1997 ;;		_IdleI2C
  1998 ;;		_WriteI2C
  1999 ;; This function is called by:
  2000 ;;		_FMinit
  2001 ;;		_FMfrequenc
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text16
  2006  0007A8                     __ptext16:
  2007                           	opt stack 0
  2008  0007A8                     _FMwrite:
  2009                           	opt stack 27
  2010                           
  2011                           ;incstack = 0
  2012                           ;FMwrite@adr stored from wreg
  2013  0007A8  6E2B               	movwf	FMwrite@adr,c
  2014                           
  2015                           ;main.c: 250: unsigned int regstr;
  2016                           ;main.c: 251: unsigned char firstByt;
  2017                           ;main.c: 252: unsigned char secndByt;
  2018                           ;main.c: 253: unsigned char rpy;
  2019                           ;main.c: 255: firstByt = regImg[adr] >> 8;
  2020  0007AA  502B               	movf	FMwrite@adr,w,c
  2021  0007AC  0D02               	mullw	2
  2022  0007AE  0E01               	movlw	low _regImg
  2023  0007B0  24F3               	addwf	prodl,w,c
  2024  0007B2  6ED9               	movwf	fsr2l,c
  2025  0007B4  0E00               	movlw	high _regImg
  2026  0007B6  20F4               	addwfc	prodh,w,c
  2027  0007B8  6EDA               	movwf	fsr2h,c
  2028  0007BA  CFDE F027          	movff	postinc2,??_FMwrite
  2029  0007BE  CFDD F028          	movff	postdec2,??_FMwrite+1
  2030  0007C2  C028  F027         	movff	??_FMwrite+1,??_FMwrite
  2031  0007C6  6A28               	clrf	??_FMwrite+1,c
  2032  0007C8  5027               	movf	??_FMwrite,w,c
  2033  0007CA  6E29               	movwf	FMwrite@firstByt,c
  2034                           
  2035                           ;main.c: 256: secndByt = regImg[adr];
  2036  0007CC  502B               	movf	FMwrite@adr,w,c
  2037  0007CE  0D02               	mullw	2
  2038  0007D0  0E01               	movlw	low _regImg
  2039  0007D2  24F3               	addwf	prodl,w,c
  2040  0007D4  6ED9               	movwf	fsr2l,c
  2041  0007D6  0E00               	movlw	high _regImg
  2042  0007D8  20F4               	addwfc	prodh,w,c
  2043  0007DA  6EDA               	movwf	fsr2h,c
  2044  0007DC  50DF               	movf	indf2,w,c
  2045  0007DE  6E2A               	movwf	FMwrite@secndByt,c
  2046                           
  2047                           ;main.c: 258: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2048  0007E0  80C5               	bsf	4037,0,c	;volatile
  2049  0007E2                     l126:
  2050  0007E2  B0C5               	btfsc	4037,0,c	;volatile
  2051  0007E4  D7FE               	goto	l126
  2052                           
  2053                           ;main.c: 259: IdleI2C();
  2054  0007E6  ECFB  F004         	call	_IdleI2C	;wreg free
  2055                           
  2056                           ;main.c: 262: if (WriteI2C(0x20)) return 1;
  2057  0007EA  0E20               	movlw	32
  2058  0007EC  EC45  F004         	call	_WriteI2C
  2059  0007F0  0900               	iorlw	0
  2060  0007F2  B4D8               	btfsc	status,2,c
  2061  0007F4  D002               	goto	l1072
  2062  0007F6  0E01               	movlw	1
  2063  0007F8  0012               	return	
  2064  0007FA                     l1072:
  2065                           
  2066                           ;main.c: 263: IdleI2C();
  2067  0007FA  ECFB  F004         	call	_IdleI2C	;wreg free
  2068                           
  2069                           ;main.c: 264: WriteI2C(adr);
  2070  0007FE  502B               	movf	FMwrite@adr,w,c
  2071  000800  EC45  F004         	call	_WriteI2C
  2072                           
  2073                           ;main.c: 265: IdleI2C();
  2074  000804  ECFB  F004         	call	_IdleI2C	;wreg free
  2075                           
  2076                           ;main.c: 266: WriteI2C(firstByt);
  2077  000808  5029               	movf	FMwrite@firstByt,w,c
  2078  00080A  EC45  F004         	call	_WriteI2C
  2079                           
  2080                           ;main.c: 267: IdleI2C();
  2081  00080E  ECFB  F004         	call	_IdleI2C	;wreg free
  2082                           
  2083                           ;main.c: 268: WriteI2C(secndByt);
  2084  000812  502A               	movf	FMwrite@secndByt,w,c
  2085  000814  EC45  F004         	call	_WriteI2C
  2086                           
  2087                           ;main.c: 269: IdleI2C();
  2088  000818  ECFB  F004         	call	_IdleI2C	;wreg free
  2089                           
  2090                           ;main.c: 270: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2091  00081C  84C5               	bsf	4037,2,c	;volatile
  2092  00081E                     l131:
  2093  00081E  B4C5               	btfsc	4037,2,c	;volatile
  2094  000820  D7FE               	goto	l131
  2095                           
  2096                           ;main.c: 271: IdleI2C();
  2097  000822  ECFB  F004         	call	_IdleI2C	;wreg free
  2098                           
  2099                           ;main.c: 272: return 0;
  2100  000826  0E00               	movlw	0
  2101  000828  0012               	return	
  2102  00082A                     __end_of_FMwrite:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           prodh	equ	0xFF4
  2109                           prodl	equ	0xFF3
  2110                           intcon	equ	0xFF2
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           indf2	equ	0xFDF
  2114                           postinc2	equ	0xFDE
  2115                           postdec2	equ	0xFDD
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _FMready *****************
  2121 ;; Defined at:
  2122 ;;		line 338 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  2125 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  sts             2   15[COMRAM] unsigned int 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2137 ;;      Params:         2       0       0       0
  2138 ;;      Locals:         2       0       0       0
  2139 ;;      Temps:          2       0       0       0
  2140 ;;      Totals:         6       0       0       0
  2141 ;;Total ram usage:        6 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    3
  2144 ;; This function calls:
  2145 ;;		_FMread
  2146 ;; This function is called by:
  2147 ;;		_FMinit
  2148 ;;		_FMfrequenc
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text17
  2153  0008E8                     __ptext17:
  2154                           	opt stack 0
  2155  0008E8                     _FMready:
  2156                           	opt stack 26
  2157                           
  2158                           ;main.c: 340: unsigned int sts;
  2159                           ;main.c: 342: if (FMread(0x13, &sts) != 0) return 1;
  2160                           
  2161                           ;incstack = 0
  2162  0008E8  0E34               	movlw	low FMready@sts
  2163  0008EA  6E27               	movwf	FMread@data,c
  2164  0008EC  0E00               	movlw	high FMready@sts
  2165  0008EE  6E28               	movwf	FMread@data+1,c
  2166  0008F0  0E13               	movlw	19
  2167  0008F2  EC5D  F002         	call	_FMread
  2168  0008F6  0900               	iorlw	0
  2169  0008F8  B4D8               	btfsc	status,2,c
  2170  0008FA  D002               	goto	l1568
  2171  0008FC  0E01               	movlw	1
  2172  0008FE  0012               	return	
  2173  000900                     l1568:
  2174                           
  2175                           ;main.c: 343: sts &= 0x0020;
  2176  000900  0E20               	movlw	32
  2177  000902  1634               	andwf	FMready@sts,f,c
  2178  000904  0E00               	movlw	0
  2179  000906  1635               	andwf	FMready@sts+1,f,c
  2180                           
  2181                           ;main.c: 344: *rdy = sts ? 1 : 0;
  2182  000908  5034               	movf	FMready@sts,w,c
  2183  00090A  1035               	iorwf	FMready@sts+1,w,c
  2184  00090C  B4D8               	btfsc	status,2,c
  2185  00090E  D002               	goto	u870
  2186  000910  0E01               	movlw	1
  2187  000912  D001               	goto	u880
  2188  000914                     u870:
  2189  000914  0E00               	movlw	0
  2190  000916                     u880:
  2191  000916  6E32               	movwf	??_FMready& (0+255),c
  2192  000918  6A33               	clrf	(??_FMready+1)& (0+255),c
  2193  00091A  C030  FFD9         	movff	FMready@rdy,fsr2l
  2194  00091E  C031  FFDA         	movff	FMready@rdy+1,fsr2h
  2195  000922  C032  FFDE         	movff	??_FMready,postinc2
  2196  000926  C033  FFDD         	movff	??_FMready+1,postdec2
  2197                           
  2198                           ;main.c: 345: return 0;
  2199  00092A  0E00               	movlw	0
  2200  00092C  0012               	return	
  2201  00092E                     __end_of_FMready:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _FMread *****************
  2220 ;; Defined at:
  2221 ;;		line 290 in file "main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  regAddr         1    wreg     unsigned char 
  2224 ;;  data            2    2[COMRAM] PTR unsigned int 
  2225 ;;		 -> main@ui(2), FMready@sts(2), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  regAddr         1    8[COMRAM] unsigned char 
  2228 ;;  secndByt        1   10[COMRAM] unsigned char 
  2229 ;;  firstByt        1    9[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      unsigned char 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2239 ;;      Params:         2       0       0       0
  2240 ;;      Locals:         3       0       0       0
  2241 ;;      Temps:          4       0       0       0
  2242 ;;      Totals:         9       0       0       0
  2243 ;;Total ram usage:        9 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    2
  2246 ;; This function calls:
  2247 ;;		_IdleI2C
  2248 ;;		_ReadI2C
  2249 ;;		_WriteI2C
  2250 ;; This function is called by:
  2251 ;;		_FMready
  2252 ;;		_FMvers
  2253 ;;		_FMid
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text18
  2258  0004BA                     __ptext18:
  2259                           	opt stack 0
  2260  0004BA                     _FMread:
  2261                           	opt stack 27
  2262                           
  2263                           ;incstack = 0
  2264                           ;FMread@regAddr stored from wreg
  2265  0004BA  6E2D               	movwf	FMread@regAddr,c
  2266                           
  2267                           ;main.c: 292: unsigned char firstByt;
  2268                           ;main.c: 293: unsigned char secndByt;
  2269                           ;main.c: 295: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2270  0004BC  80C5               	bsf	4037,0,c	;volatile
  2271  0004BE                     l136:
  2272  0004BE  B0C5               	btfsc	4037,0,c	;volatile
  2273  0004C0  D7FE               	goto	l136
  2274                           
  2275                           ;main.c: 296: IdleI2C();
  2276  0004C2  ECFB  F004         	call	_IdleI2C	;wreg free
  2277                           
  2278                           ;main.c: 299: if (WriteI2C(0x20)) return 1;
  2279  0004C6  0E20               	movlw	32
  2280  0004C8  EC45  F004         	call	_WriteI2C
  2281  0004CC  0900               	iorlw	0
  2282  0004CE  B4D8               	btfsc	status,2,c
  2283  0004D0  D002               	goto	l1506
  2284  0004D2  0E01               	movlw	1
  2285  0004D4  0012               	return	
  2286  0004D6                     l1506:
  2287                           
  2288                           ;main.c: 300: IdleI2C();
  2289  0004D6  ECFB  F004         	call	_IdleI2C	;wreg free
  2290                           
  2291                           ;main.c: 301: WriteI2C(regAddr);
  2292  0004DA  502D               	movf	FMread@regAddr,w,c
  2293  0004DC  EC45  F004         	call	_WriteI2C
  2294                           
  2295                           ;main.c: 302: IdleI2C();
  2296  0004E0  ECFB  F004         	call	_IdleI2C	;wreg free
  2297                           
  2298                           ;main.c: 303: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2299  0004E4  82C5               	bsf	4037,1,c	;volatile
  2300  0004E6                     l141:
  2301  0004E6  B2C5               	btfsc	4037,1,c	;volatile
  2302  0004E8  D7FE               	goto	l141
  2303                           
  2304                           ;main.c: 304: IdleI2C();
  2305  0004EA  ECFB  F004         	call	_IdleI2C	;wreg free
  2306                           
  2307                           ;main.c: 305: WriteI2C(0x20 + 0x01);
  2308  0004EE  0E21               	movlw	33
  2309  0004F0  EC45  F004         	call	_WriteI2C
  2310                           
  2311                           ;main.c: 306: IdleI2C();
  2312  0004F4  ECFB  F004         	call	_IdleI2C	;wreg free
  2313                           
  2314                           ;main.c: 307: firstByt = ReadI2C();
  2315  0004F8  ECD0  F004         	call	_ReadI2C	;wreg free
  2316  0004FC  6E2E               	movwf	FMread@firstByt,c
  2317                           
  2318                           ;main.c: 308: IdleI2C();
  2319  0004FE  ECFB  F004         	call	_IdleI2C	;wreg free
  2320                           
  2321                           ;main.c: 309: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2322  000502  9AC5               	bcf	4037,5,c	;volatile
  2323  000504  88C5               	bsf	4037,4,c	;volatile
  2324  000506                     l144:
  2325  000506  B8C5               	btfsc	4037,4,c	;volatile
  2326  000508  D7FE               	goto	l144
  2327                           
  2328                           ;main.c: 310: IdleI2C();
  2329  00050A  ECFB  F004         	call	_IdleI2C	;wreg free
  2330                           
  2331                           ;main.c: 311: secndByt = ReadI2C();
  2332  00050E  ECD0  F004         	call	_ReadI2C	;wreg free
  2333  000512  6E2F               	movwf	FMread@secndByt,c
  2334                           
  2335                           ;main.c: 312: IdleI2C();
  2336  000514  ECFB  F004         	call	_IdleI2C	;wreg free
  2337                           
  2338                           ;main.c: 313: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2339  000518  8AC5               	bsf	4037,5,c	;volatile
  2340  00051A  88C5               	bsf	4037,4,c	;volatile
  2341  00051C                     l147:
  2342  00051C  B8C5               	btfsc	4037,4,c	;volatile
  2343  00051E  D7FE               	goto	l147
  2344                           
  2345                           ;main.c: 314: IdleI2C();
  2346  000520  ECFB  F004         	call	_IdleI2C	;wreg free
  2347                           
  2348                           ;main.c: 315: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2349  000524  84C5               	bsf	4037,2,c	;volatile
  2350  000526                     l150:
  2351  000526  B4C5               	btfsc	4037,2,c	;volatile
  2352  000528  D7FE               	goto	l150
  2353                           
  2354                           ;main.c: 316: IdleI2C();
  2355  00052A  ECFB  F004         	call	_IdleI2C	;wreg free
  2356                           
  2357                           ;main.c: 317: *data = firstByt;
  2358  00052E  502E               	movf	FMread@firstByt,w,c
  2359  000530  6E29               	movwf	??_FMread& (0+255),c
  2360  000532  6A2A               	clrf	(??_FMread+1)& (0+255),c
  2361  000534  C027  FFD9         	movff	FMread@data,fsr2l
  2362  000538  C028  FFDA         	movff	FMread@data+1,fsr2h
  2363  00053C  C029  FFDE         	movff	??_FMread,postinc2
  2364  000540  C02A  FFDD         	movff	??_FMread+1,postdec2
  2365                           
  2366                           ;main.c: 318: *data <<= 8;
  2367  000544  C027  FFD9         	movff	FMread@data,fsr2l
  2368  000548  C028  FFDA         	movff	FMread@data+1,fsr2h
  2369  00054C  50DE               	movf	postinc2,w,c
  2370  00054E  6EDD               	movwf	postdec2,c
  2371  000550  6ADF               	clrf	indf2,c
  2372                           
  2373                           ;main.c: 319: *data = *data | secndByt;
  2374  000552  C027  FFD9         	movff	FMread@data,fsr2l
  2375  000556  C028  FFDA         	movff	FMread@data+1,fsr2h
  2376  00055A  CFDE F029          	movff	postinc2,??_FMread
  2377  00055E  CFDD F02A          	movff	postdec2,??_FMread+1
  2378  000562  502F               	movf	FMread@secndByt,w,c
  2379  000564  6E2B               	movwf	(??_FMread+2)& (0+255),c
  2380  000566  6A2C               	clrf	(??_FMread+3)& (0+255),c
  2381  000568  5029               	movf	??_FMread,w,c
  2382  00056A  122B               	iorwf	??_FMread+2,f,c
  2383  00056C  502A               	movf	??_FMread+1,w,c
  2384  00056E  122C               	iorwf	??_FMread+3,f,c
  2385  000570  C027  FFD9         	movff	FMread@data,fsr2l
  2386  000574  C028  FFDA         	movff	FMread@data+1,fsr2h
  2387  000578  C02B  FFDE         	movff	??_FMread+2,postinc2
  2388  00057C  C02C  FFDD         	movff	??_FMread+3,postdec2
  2389                           
  2390                           ;main.c: 321: return 0;
  2391  000580  0E00               	movlw	0
  2392  000582  0012               	return	
  2393  000584                     __end_of_FMread:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           intcon	equ	0xFF2
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           indf2	equ	0xFDF
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function _WriteI2C *****************
  2412 ;; Defined at:
  2413 ;;		line 12 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_writ.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  data_out        1    wreg     unsigned char 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  data_out        1    1[COMRAM] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      char 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2427 ;;      Params:         0       0       0       0
  2428 ;;      Locals:         1       0       0       0
  2429 ;;      Temps:          0       0       0       0
  2430 ;;      Totals:         1       0       0       0
  2431 ;;Total ram usage:        1 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    1
  2434 ;; This function calls:
  2435 ;;		_IdleI2C
  2436 ;; This function is called by:
  2437 ;;		_FMwrite
  2438 ;;		_FMread
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text19
  2443  00088A                     __ptext19:
  2444                           	opt stack 0
  2445  00088A                     _WriteI2C:
  2446                           	opt stack 27
  2447                           
  2448                           ;incstack = 0
  2449                           ;WriteI2C@data_out stored from wreg
  2450  00088A  6E26               	movwf	WriteI2C@data_out,c
  2451  00088C  C026  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2452  000890  AEC6               	btfss	4038,7,c	;volatile
  2453  000892  D002               	goto	l954
  2454  000894  0EFF               	movlw	255
  2455  000896  0012               	return	
  2456  000898                     l954:
  2457  000898  50C6               	movf	4038,w,c	;volatile
  2458  00089A  0B0F               	andlw	15
  2459  00089C  0A08               	xorlw	8
  2460  00089E  B4D8               	btfsc	status,2,c
  2461  0008A0  D00F               	goto	l972
  2462  0008A2  50C6               	movf	4038,w,c	;volatile
  2463  0008A4  0B0F               	andlw	15
  2464  0008A6  0A0B               	xorlw	11
  2465  0008A8  B4D8               	btfsc	status,2,c
  2466  0008AA  D00A               	goto	l972
  2467  0008AC  88C6               	bsf	4038,4,c	;volatile
  2468  0008AE                     l311:
  2469  0008AE  A69E               	btfss	3998,3,c	;volatile
  2470  0008B0  D7FE               	goto	l311
  2471  0008B2  A4C7               	btfss	4039,2,c	;volatile
  2472  0008B4  B0C7               	btfsc	4039,0,c	;volatile
  2473  0008B6  D002               	goto	l968
  2474  0008B8  0EFE               	movlw	254
  2475  0008BA  0012               	return	
  2476  0008BC                     l968:
  2477  0008BC  0E00               	movlw	0
  2478  0008BE  0012               	return	
  2479  0008C0                     l972:
  2480  0008C0  50C6               	movf	4038,w,c	;volatile
  2481  0008C2  0B0F               	andlw	15
  2482  0008C4  0A08               	xorlw	8
  2483  0008C6  B4D8               	btfsc	status,2,c
  2484  0008C8  D005               	goto	l320
  2485  0008CA  50C6               	movf	4038,w,c	;volatile
  2486  0008CC  0B0F               	andlw	15
  2487  0008CE  0A0B               	xorlw	11
  2488  0008D0  A4D8               	btfss	status,2,c
  2489  0008D2  0012               	return	
  2490  0008D4                     l320:
  2491  0008D4  B0C7               	btfsc	4039,0,c	;volatile
  2492  0008D6  D7FE               	goto	l320
  2493  0008D8  ECFB  F004         	call	_IdleI2C	;wreg free
  2494  0008DC  ACC5               	btfss	4037,6,c	;volatile
  2495  0008DE  D002               	goto	l986
  2496  0008E0  0EFE               	movlw	254
  2497  0008E2  0012               	return	
  2498  0008E4                     l986:
  2499  0008E4  0E00               	movlw	0
  2500  0008E6  0012               	return	
  2501  0008E8                     __end_of_WriteI2C:
  2502                           	opt stack 0
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           prodh	equ	0xFF4
  2508                           prodl	equ	0xFF3
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           indf2	equ	0xFDF
  2513                           postinc2	equ	0xFDE
  2514                           postdec2	equ	0xFDD
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _IdleI2C *****************
  2520 ;; Defined at:
  2521 ;;		line 24 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_idle.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2535 ;;      Params:         0       0       0       0
  2536 ;;      Locals:         0       0       0       0
  2537 ;;      Temps:          1       0       0       0
  2538 ;;      Totals:         1       0       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_FMwrite
  2545 ;;		_FMread
  2546 ;;		_WriteI2C
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text20
  2551  0009F6                     __ptext20:
  2552                           	opt stack 0
  2553  0009F6                     _IdleI2C:
  2554                           	opt stack 27
  2555  0009F6                     l940:
  2556  0009F6  CFC5 F025          	movff	4037,??_IdleI2C	;volatile
  2557  0009FA  0E1F               	movlw	31
  2558  0009FC  1625               	andwf	??_IdleI2C,f,c
  2559  0009FE  A4D8               	btfss	status,2,c
  2560  000A00  D7FA               	goto	l940
  2561  000A02  A4C7               	btfss	4039,2,c	;volatile
  2562  000A04  0012               	return	
  2563  000A06  D7F7               	goto	l940
  2564  000A08                     __end_of_IdleI2C:
  2565                           	opt stack 0
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           intcon	equ	0xFF2
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           indf2	equ	0xFDF
  2576                           postinc2	equ	0xFDE
  2577                           postdec2	equ	0xFDD
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8
  2581                           
  2582 ;; *************** function _ReadI2C *****************
  2583 ;; Defined at:
  2584 ;;		line 11 in file "/Applications/microchip/xc8/v1.38/sources/pic18/plib/i2c/i2c_read.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2598 ;;      Params:         0       0       0       0
  2599 ;;      Locals:         0       0       0       0
  2600 ;;      Temps:          0       0       0       0
  2601 ;;      Totals:         0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_FMread
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text21
  2612  0009A0                     __ptext21:
  2613                           	opt stack 0
  2614  0009A0                     _ReadI2C:
  2615                           	opt stack 28
  2616                           
  2617                           ;incstack = 0
  2618  0009A0  50C6               	movf	4038,w,c	;volatile
  2619  0009A2  0B0F               	andlw	15
  2620  0009A4  0A08               	xorlw	8
  2621  0009A6  B4D8               	btfsc	status,2,c
  2622  0009A8  D004               	goto	l286
  2623  0009AA  50C6               	movf	4038,w,c	;volatile
  2624  0009AC  0B0F               	andlw	15
  2625  0009AE  0A0B               	xorlw	11
  2626  0009B0  B4D8               	btfsc	status,2,c
  2627  0009B2                     l286:
  2628  0009B2  86C5               	bsf	4037,3,c	;volatile
  2629  0009B4                     l287:
  2630  0009B4  A0C7               	btfss	4039,0,c	;volatile
  2631  0009B6  D7FE               	goto	l287
  2632  0009B8  50C9               	movf	4041,w,c	;volatile
  2633  0009BA  0012               	return	
  2634  0009BC                     __end_of_ReadI2C:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           prodh	equ	0xFF4
  2641                           prodl	equ	0xFF3
  2642                           intcon	equ	0xFF2
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           indf2	equ	0xFDF
  2646                           postinc2	equ	0xFDE
  2647                           postdec2	equ	0xFDD
  2648                           fsr2h	equ	0xFDA
  2649                           fsr2l	equ	0xFD9
  2650                           status	equ	0xFD8
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           intcon	equ	0xFF2
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           indf2	equ	0xFDF
  2661                           postinc2	equ	0xFDE
  2662                           postdec2	equ	0xFDD
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667                           	psect	rparam
  2668  0000                     tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           intcon	equ	0xFF2
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           indf2	equ	0xFDF
  2678                           postinc2	equ	0xFDE
  2679                           postdec2	equ	0xFDD
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FMinit
    _previousChannel->_delay_10ms
    _nextChannel->_delay_10ms
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    2788
                                             20 COMRAM     8     8      0
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                           _buttontn
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0     150
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0     150
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     150
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttontn                                             7     5      2      92
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           13    11      2     230
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     449
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1186
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dly                                                  4     2      2     304
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _FMready                                              6     4      2     565
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (2) _FMread                                               9     7      2     363
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _VolumeDown
   _VolumeUp
   _butnEvent
   _buttontn
   _dly
   _errfm
   _nextChannel
     _delay_10ms
   _previousChannel
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      40       1       67.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40       8        0.0%
DATA                 0      0      40      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Feb 17 11:56:18 2017

             __CFG_CP$OFF 000000               _SSPSTATbits 000FC7                        l81 03CA  
                      l91 046A                        l83 03B2                        l75 037A  
                      l93 0452                        l77 035E                        l86 041A  
                      l78 036E                        l88 0402                        l98 04A2  
             __CFG_BORV$3 000000                       l131 081E                       l211 0758  
                     l203 0A18                       l141 04E6                       l213 0740  
                     l150 0526                       l126 07E2                       l311 08AE  
                     l320 08D4                       l144 0506                       l136 04BE  
                     l160 05C0                       l224 065E                       l147 051C  
                     l219 0790                       l286 09B2                       l287 09B4  
                     l940 09F6                       l954 0898                       l972 08C0  
                     l968 08BC                       l986 08E4                       u920 035E  
                     u870 0914                       u880 0916                       u960 03B2  
                     _dly 092E                       prod 000FF3                       wreg 000FE8  
            __CFG_WDT$OFF 000000                      l1072 07FA                      l1506 04D6  
                    l1540 0938                      l1612 0396                      l1542 0942  
                    l1622 03C0                      l1544 0948                      l1712 0590  
                    l1632 03E6                      l1642 0410                      l1802 074E  
                    l1548 0956                      l1732 05E6                      l1708 0588  
                    l1652 0436                      l1812 0774                      l1580 0970  
                    l1750 0614                      l1742 05FA                      l1726 05DA  
                    l1662 0460                      l1590 0342                      l1822 079E  
                    l1568 0900                      l1752 0622                      l1728 05DE  
                    l1672 0486                      l1754 062E                      l1738 05F6  
                    l1682 04B0                      l1578 0962                      l1860 0672  
                    l1792 0724                      l1880 06AC                      l1864 0678  
                    ?_dly 0025                      l1882 06B2                      l1858 066C  
                    l1884 06BA                      l1892 06D0                      l1876 0698  
                    l1886 06C2                      l1878 06A6                      l1888 06CA  
                    u1000 0402                      u1040 0452                      u1200 0740  
                    u1080 04A2                      u1240 0790                      u1327 0968  
                    u1337 072A                      u1347 077A                      u1357 0348  
                    u1367 039C                      u1377 03EC                      u1387 043C  
                    u1397 048C                      _Init 082A            VolumeDown@down 0025  
         __end_of_FMready 092E                      _main 064A                      dly@d 0025  
                    dly@i 0027                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9           __end_of_FMwrite 082A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_IdleI2C 0A08             __CFG_MCLRE$ON 000000              ___param_bank 000010  
         __end_of_ReadI2C 09BC           __end_of_OpenI2C 09A0                     ??_dly 0027  
                   ?_Init 0025                     ?_main 0025                     _T0CON 000FD5  
                   _LCDPS 000F58                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISG 000F98             __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000  
         __end_of_regDflt 0325                     _errfm 0A18                     main@k 003B  
          __CFG_BOREN$OFF 000000                     tablat 000FF5                     status 000FD8  
            ?_nextChannel 0025           __initialization 09BC              __end_of_Init 088A  
            __end_of_main 0708                    ??_Init 0027                    ??_main 0039  
           __activetblptr 000002          __end_of_MuteHard 0A20                    _ADCON1 000FC1  
               ??_FMready 0032                    ?_errfm 0025          __end_of_WriteI2C 08E8  
               ??_FMwrite 0027          __end_of_VolumeUp 0A1C                    _LCDCON 000F59  
                  _LCDSE0 000F5A                    _LCDSE1 000F5B                    _LCDSE2 000F5C  
                  _LCDSE3 000F5D               OpenI2C@slew 0025                 ??_IdleI2C 0025  
                  _OSCCON 000FD3                    _FMinit 0584                    _FMread 04BA  
                  _SSPADD 000FC8                    _SSPBUF 000FC9                    _FMvers 0A08  
               ??_ReadI2C 0025                 ??_OpenI2C 0026            __CFG_XINST$OFF 000000  
                  _regImg 0001                    clear_0 09C2          __end_of_buttontn 07A8  
                  main@ui 003F          __end_of_showFreq 0A22              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 09C8             ___rparam_used 000001  
              _VolumeDown 0A1C              VolumeUp@down 0025            __pcstackCOMRAM 0025  
           __end_of_errfm 0A1A           __CFG_OSC$INTIO7 000000                   ??_errfm 0025  
__size_of_previousChannel 0012        __size_of_butnEvent 0194                _delay_10ms 0960  
                 ?_FMinit 0025                   ?_FMread 0027                   ?_FMvers 0030  
               ?_MuteHard 0025      __size_of_nextChannel 0012                 ?_WriteI2C 0025  
               ?_VolumeUp 0025                 FMinit@dat 0036                   _FMready 08E8  
                 _SSPCON1 000FC6                   _SSPCON2 000FC5                   _SSPSTAT 000FC7  
                 _FMwrite 07A8                   _IdleI2C 09F6                 ?_buttontn 0025  
         __size_of_FMinit 00C6           __size_of_FMread 00CA                 FMvers@vsn 0030  
                 _ReadI2C 09A0           __size_of_FMvers 0010                   _OpenI2C 0982  
                 __Hparam 0000                   __Lparam 0000               ?_VolumeDown 0025  
              ??_MuteHard 0025                 ?_showFreq 0025              __psmallconst 0300  
         __CFG_STVREN$OFF 000000                   __pcinit 09BC                ??_WriteI2C 0026  
       __end_of_butnEvent 04BA                ??_VolumeUp 0025                   __ramtop 0300  
                 __ptext0 064A                   __ptext1 09D2                   __ptext2 09E4  
                 __ptext3 0960                   __ptext4 0A18                   __ptext5 0708  
                 __ptext6 0326                   __ptext7 0A1A                   __ptext8 0A1C  
                 __ptext9 0A1E                 _T0CONbits 000FD5                   _regDflt 0301  
            __size_of_dly 0032                   main@evt 003D      end_of_initialization 09C8  
             ?_delay_10ms 0025             __Lmediumconst 0000                ??_buttontn 0027  
       ??_previousChannel 0028                ??_showFreq 0025                   postdec2 000FDD  
                 postinc0 000FEE                   postinc2 000FDE                 _PORTAbits 000F80  
               _PORTBbits 000F81                 _PORTCbits 000F82                 _PORTGbits 000F86  
               _TRISCbits 000F94       __size_of_VolumeDown 0002            __end_of_FMinit 064A  
          __end_of_FMread 0584            __end_of_FMvers 0A18       __size_of_delay_10ms 0022  
              butnEvent@c 0028       start_initialization 09BC               __end_of_dly 0960  
        WriteI2C@data_out 0026                  ??_FMinit 0036                  ??_FMread 0029  
                ??_FMvers 0032         __size_of_MuteHard 0002         __size_of_WriteI2C 005E  
       __size_of_VolumeUp 0002               __pbssCOMRAM 0001                  ?_FMready 0030  
                ?_FMwrite 0025                  ?_IdleI2C 0025                  ?_ReadI2C 0025  
                ?_OpenI2C 0025             ??_nextChannel 0028         __size_of_buttontn 00A0  
            ??_VolumeDown 0025         __size_of_showFreq 0002                  FMinit@ad 0038  
             __smallconst 0300                 _butnEvent 0326           FMwrite@firstByt 0029  
         _previousChannel 09D2                  _LCDDATA0 000F60        __end_of_VolumeDown 0A1E  
         FMwrite@secndByt 002A            __size_of_errfm 0002              ??_delay_10ms 0027  
            MuteHard@down 0025            FMread@firstByt 002E                FMread@data 0027  
                _PIR1bits 000F9E            FMread@secndByt 002F                FMready@rdy 0030  
              FMready@sts 0034       __end_of_nextChannel 09F6        __end_of_delay_10ms 0982  
              ?_butnEvent 0025          __size_of_FMready 0046          __size_of_FMwrite 0082  
        OpenI2C@sync_mode 0026          __size_of_IdleI2C 0012          __size_of_ReadI2C 001C  
                __Hrparam 0000          __size_of_OpenI2C 001E                  _MuteHard 0A1E  
                __Lrparam 0000                FMwrite@adr 002B                 buttontn@c 0028  
                _WriteI2C 088A                  _VolumeUp 0A1A   __end_of_previousChannel 09E4  
                __ptext10 082A                  __ptext11 0982                  __ptext20 09F6  
                __ptext12 0A08                  __ptext21 09A0                  __ptext13 0584  
                __ptext14 0A20                  __ptext15 092E                  __ptext16 07A8  
                __ptext17 08E8                  __ptext18 04BA                  __ptext19 088A  
             delay_10ms@n 0025             __size_of_Init 0060             __size_of_main 00BE  
                _buttontn 0708             FMread@regAddr 002D               _nextChannel 09E4  
                _showFreq 0A20               ??_butnEvent 0027                _INTCONbits 000FF2  
           buttontn@c_601 002A          ?_previousChannel 0025               _SSPCON1bits 000FC6  
             _SSPCON2bits 000FC5            butnEvent@c_507 002A            butnEvent@c_524 0030  
          butnEvent@c_516 002C            butnEvent@c_517 002E  
