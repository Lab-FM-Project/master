

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Feb 18 22:33:35 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	smallconst
    36  000300                     __psmallconst:
    37                           	opt stack 0
    38  000300  00                 	db	0
    39  000301                     _regDflt:
    40                           	opt stack 0
    41  000301  FFFF               	dw	65535
    42  000303  5B15               	dw	23317
    43  000305  D0B9               	dw	53433
    44  000307  A010               	dw	40976
    45  000309  0780               	dw	1920
    46  00030B  28AB               	dw	10411
    47  00030D  6400               	dw	25600
    48  00030F  1EE7               	dw	7911
    49  000311  7141               	dw	28993
    50  000313  007D               	dw	125
    51  000315  82C6               	dw	33478
    52  000317  4F55               	dw	20309
    53  000319  970C               	dw	38668
    54  00031B  B845               	dw	47173
    55  00031D  FC2D               	dw	64557
    56  00031F  8097               	dw	32919
    57  000321  04A1               	dw	1185
    58  000323  DF6A               	dw	57194
    59  000325                     __end_of_regDflt:
    60                           	opt stack 0
    61  000325                     setVolume@F6665:
    62                           	opt stack 0
    63  000325  0F                 	db	15
    64  000326  CF                 	db	207
    65  000327  DF                 	db	223
    66  000328  FF                 	db	255
    67  000329  CB                 	db	203
    68  00032A  DB                 	db	219
    69  00032B  FB                 	db	251
    70  00032C  FA                 	db	250
    71  00032D  F9                 	db	249
    72  00032E  F8                 	db	248
    73  00032F  F7                 	db	247
    74  000330  D6                 	db	214
    75  000331  E6                 	db	230
    76  000332  F6                 	db	246
    77  000333  E3                 	db	227
    78  000334  F3                 	db	243
    79  000335  F2                 	db	242
    80  000336  F1                 	db	241
    81  000337  F0                 	db	240
    82  000338                     __end_ofsetVolume@F6665:
    83                           	opt stack 0
    84  0000                     _LCDCON	set	3929
    85  0000                     _LCDPS	set	3928
    86  0000                     _LCDSE0	set	3930
    87  0000                     _LCDSE1	set	3931
    88  0000                     _LCDSE2	set	3932
    89  0000                     _LCDSE3	set	3933
    90  0000                     _ADCON1	set	4033
    91  0000                     _INTCONbits	set	4082
    92  0000                     _OSCCON	set	4051
    93  0000                     _PIR1bits	set	3998
    94  0000                     _PORTA	set	3968
    95  0000                     _PORTAbits	set	3968
    96  0000                     _PORTB	set	3969
    97  0000                     _PORTBbits	set	3969
    98  0000                     _PORTC	set	3970
    99  0000                     _PORTCbits	set	3970
   100  0000                     _PORTGbits	set	3974
   101  0000                     _SSPADD	set	4040
   102  0000                     _SSPBUF	set	4041
   103  0000                     _SSPCON1	set	4038
   104  0000                     _SSPCON1bits	set	4038
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPCON2bits	set	4037
   107  0000                     _SSPSTAT	set	4039
   108  0000                     _SSPSTATbits	set	4039
   109  0000                     _T0CON	set	4053
   110  0000                     _T0CONbits	set	4053
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TRISG	set	3992
   118  0000                     _LCDDATA0	set	3936
   119                           
   120                           ; #config settings
   121  000338  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  000AB6                     __pcinit:
   125                           	opt stack 0
   126  000AB6                     start_initialization:
   127                           	opt stack 0
   128  000AB6                     __initialization:
   129                           	opt stack 0
   130                           
   131                           ; Clear objects allocated to COMRAM (36 bytes)
   132  000AB6  EE00  F034         	lfsr	0,__pbssCOMRAM
   133  000ABA  0E24               	movlw	36
   134  000ABC                     clear_0:
   135  000ABC  6AEE               	clrf	postinc0,c
   136  000ABE  06E8               	decf	wreg,f,c
   137  000AC0  E1FD               	bnz	clear_0
   138  000AC2                     end_of_initialization:
   139                           	opt stack 0
   140  000AC2                     __end_of__initialization:
   141                           	opt stack 0
   142  000AC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143  000AC4  6EF8               	movwf	tblptru,c
   144  000AC6  0100               	movlb	0
   145  000AC8  EF89  F003         	goto	_main	;jump to C main() function
   146                           tblptru	equ	0xFF8
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	bssCOMRAM
   151  000034                     __pbssCOMRAM:
   152                           	opt stack 0
   153  000034                     _regImg:
   154                           	opt stack 0
   155  000034                     	ds	36
   156                           tblptru	equ	0xFF8
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           
   160                           	psect	cstackCOMRAM
   161  000001                     __pcstackCOMRAM:
   162                           	opt stack 0
   163  000001                     ??_IdleI2C:
   164  000001                     ?_butnEvent:
   165                           	opt stack 0
   166  000001                     OpenI2C@slew:
   167                           	opt stack 0
   168  000001                     dly@d:
   169                           	opt stack 0
   170  000001                     delay_10ms@n:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x0
   174  000001                     	ds	1
   175  000002                     OpenI2C@sync_mode:
   176                           	opt stack 0
   177  000002                     WriteI2C@data_out:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x1
   181  000002                     	ds	1
   182  000003                     ??_delay_10ms:
   183  000003                     ??_butnEvent:
   184  000003                     ??_FMwrite:
   185  000003                     dly@i:
   186                           	opt stack 0
   187  000003                     FMread@data:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x2
   191  000003                     	ds	1
   192  000004                     butnEvent@c:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x3
   196  000004                     	ds	1
   197  000005                     ??_FMread:
   198  000005                     FMwrite@firstByt:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x4
   202  000005                     	ds	1
   203  000006                     FMwrite@secndByt:
   204                           	opt stack 0
   205  000006                     butnEvent@c_499:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x5
   209  000006                     	ds	1
   210  000007                     FMwrite@adr:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x6
   214  000007                     	ds	1
   215  000008                     butnEvent@c_508:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x7
   219  000008                     	ds	1
   220  000009                     FMread@regAddr:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x8
   224  000009                     	ds	1
   225  00000A                     FMread@firstByt:
   226                           	opt stack 0
   227  00000A                     butnEvent@c_509:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x9
   231  00000A                     	ds	1
   232  00000B                     FMread@secndByt:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0xA
   236  00000B                     	ds	1
   237  00000C                     butnEvent@c_516:
   238                           	opt stack 0
   239  00000C                     FMready@rdy:
   240                           	opt stack 0
   241  00000C                     FMvers@vsn:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0xB
   245  00000C                     	ds	2
   246  00000E                     ??_FMready:
   247  00000E                     
   248                           ; 1 bytes @ 0xD
   249  00000E                     	ds	2
   250  000010                     FMready@sts:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xF
   254  000010                     	ds	2
   255  000012                     FMinit@dat:
   256                           	opt stack 0
   257  000012                     setVolume@volume:
   258                           	opt stack 0
   259  000012                     FMfrequenc@f:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x11
   263  000012                     	ds	2
   264  000014                     ??_setVolume:
   265  000014                     ??_FMfrequenc:
   266  000014                     FMinit@ad:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x13
   270  000014                     	ds	3
   271  000017                     setVolume@volume_map:
   272                           	opt stack 0
   273                           
   274                           ; 19 bytes @ 0x16
   275  000017                     	ds	1
   276  000018                     FMfrequenc@cn:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x17
   280  000018                     	ds	2
   281  00001A                     FMfrequenc@dat:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x19
   285  00001A                     	ds	2
   286  00001C                     
   287                           ; 1 bytes @ 0x1B
   288  00001C                     	ds	14
   289  00002A                     setVolume@dat:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x29
   293  00002A                     	ds	2
   294  00002C                     setVolume@volume_setting:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x2B
   298  00002C                     	ds	1
   299  00002D                     setVolume@temp_vol:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x2C
   303  00002D                     	ds	1
   304  00002E                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x2D
   307  00002E                     	ds	2
   308  000030                     main@evt:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x2F
   312  000030                     	ds	2
   313  000032                     main@ui:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x31
   317  000032                     	ds	2
   318                           tblptru	equ	0xFF8
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 569 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  ui              2   49[COMRAM] unsigned int 
   332 ;;  evt             2   47[COMRAM] int 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   342 ;;      Params:         0       0       0       0
   343 ;;      Locals:         4       0       0       0
   344 ;;      Temps:          2       0       0       0
   345 ;;      Totals:         6       0       0       0
   346 ;;Total ram usage:        6 bytes
   347 ;; Hardware stack levels required when called:    6
   348 ;; This function calls:
   349 ;;		_FMinit
   350 ;;		_FMvers
   351 ;;		_Init
   352 ;;		_MuteHard
   353 ;;		_VolumeDown
   354 ;;		_VolumeUp
   355 ;;		_butnEvent
   356 ;;		_dly
   357 ;;		_errfm
   358 ;;		_nextChannel
   359 ;;		_previousChannel
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  000712                     __ptext0:
   367                           	opt stack 0
   368  000712                     _main:
   369                           	opt stack 25
   370                           
   371                           ;main.c: 570: int evt;
   372                           ;main.c: 571: unsigned int ui;
   373                           ;main.c: 572: dly(20);
   374                           
   375                           ;incstack = 0
   376  000712  0E00               	movlw	0
   377  000714  6E02               	movwf	dly@d+1,c
   378  000716  0E14               	movlw	20
   379  000718  6E01               	movwf	dly@d,c
   380  00071A  ECD8  F004         	call	_dly	;wreg free
   381                           
   382                           ;main.c: 573: Init();
   383  00071E  EC56  F004         	call	_Init	;wreg free
   384                           
   385                           ;main.c: 575: PORTCbits.RC6 = 1;
   386  000722  8C82               	bsf	3970,6,c	;volatile
   387                           
   388                           ;main.c: 577: FMvers(&ui);
   389  000724  0E32               	movlw	low main@ui
   390  000726  6E0C               	movwf	FMvers@vsn,c
   391  000728  0E00               	movlw	high main@ui
   392  00072A  6E0D               	movwf	FMvers@vsn+1,c
   393  00072C  EC6F  F005         	call	_FMvers	;wreg free
   394                           
   395                           ;main.c: 578: if (ui != 0x1010) errfm();
   396  000730  0E10               	movlw	16
   397  000732  1832               	xorwf	main@ui,w,c
   398  000734  E103               	bnz	u1280
   399  000736  0E10               	movlw	16
   400  000738  1833               	xorwf	main@ui+1,w,c
   401  00073A  A4D8               	btfss	status,2,c
   402  00073C                     u1280:
   403  00073C  EC77  F005         	call	_errfm	;wreg free
   404                           
   405                           ;main.c: 579: if (FMinit() != 0) errfm();
   406  000740  ECCA  F002         	call	_FMinit	;wreg free
   407  000744  0900               	iorlw	0
   408  000746  A4D8               	btfss	status,2,c
   409  000748  EC77  F005         	call	_errfm	;wreg free
   410  00074C                     l1847:
   411                           
   412                           ;main.c: 582: evt = butnEvent();
   413  00074C  EC9D  F001         	call	_butnEvent	;wreg free
   414  000750  C001  F030         	movff	?_butnEvent,main@evt
   415  000754  C002  F031         	movff	?_butnEvent+1,main@evt+1
   416                           
   417                           ;main.c: 583: switch (evt) {
   418  000758  D013               	goto	l1863
   419  00075A                     l1849:
   420  00075A  EC11  F005         	call	_nextChannel	;wreg free
   421                           
   422                           ;main.c: 585: break;
   423  00075E  D7F6               	goto	l1847
   424  000760                     l1851:
   425  000760  EC02  F005         	call	_previousChannel	;wreg free
   426                           
   427                           ;main.c: 587: break;
   428  000764  D7F3               	goto	l1847
   429  000766                     l1853:
   430  000766  EC20  F005         	call	_VolumeUp	;wreg free
   431                           
   432                           ;main.c: 589: break;
   433  00076A  D7F0               	goto	l1847
   434  00076C                     l1855:
   435  00076C  EC2F  F005         	call	_VolumeDown	;wreg free
   436                           
   437                           ;main.c: 591: break;
   438  000770  D7ED               	goto	l1847
   439  000772                     l1857:
   440  000772  0E00               	movlw	0
   441  000774  EC78  F005         	call	_MuteHard
   442                           
   443                           ;main.c: 593: break;
   444  000778  D7E9               	goto	l1847
   445  00077A                     l1859:
   446  00077A  EC77  F005         	call	_errfm	;wreg free
   447                           
   448                           ;main.c: 599: }
   449                           
   450                           ;main.c: 598: default: break;
   451                           
   452                           ;main.c: 596: break;
   453  00077E  D7E6               	goto	l1847
   454  000780                     l1863:
   455  000780  C030  F02E         	movff	main@evt,??_main
   456  000784  C031  F02F         	movff	main@evt+1,??_main+1
   457                           
   458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   459                           ; Switch size 1, requested type "space"
   460                           ; Number of cases is 1, Range of values is 0 to 0
   461                           ; switch strategies available:
   462                           ; Name         Instructions Cycles
   463                           ; simple_byte            4     3 (average)
   464                           ;	Chosen strategy is simple_byte
   465  000788  502F               	movf	??_main+1,w,c
   466  00078A  0A00               	xorlw	0	; case 0
   467  00078C  A4D8               	btfss	status,2,c
   468  00078E  D7DE               	goto	l1847
   469                           
   470                           ; Switch size 1, requested type "space"
   471                           ; Number of cases is 6, Range of values is 1 to 8
   472                           ; switch strategies available:
   473                           ; Name         Instructions Cycles
   474                           ; simple_byte           19    10 (average)
   475                           ;	Chosen strategy is simple_byte
   476  000790  502E               	movf	??_main,w,c
   477  000792  0A01               	xorlw	1	; case 1
   478  000794  B4D8               	btfsc	status,2,c
   479  000796  D7E1               	goto	l1849
   480  000798  0A03               	xorlw	3	; case 2
   481  00079A  B4D8               	btfsc	status,2,c
   482  00079C  D7E1               	goto	l1851
   483  00079E  0A01               	xorlw	1	; case 3
   484  0007A0  B4D8               	btfsc	status,2,c
   485  0007A2  D7E1               	goto	l1853
   486  0007A4  0A07               	xorlw	7	; case 4
   487  0007A6  B4D8               	btfsc	status,2,c
   488  0007A8  D7E1               	goto	l1855
   489  0007AA  0A01               	xorlw	1	; case 5
   490  0007AC  B4D8               	btfsc	status,2,c
   491  0007AE  D7E1               	goto	l1857
   492  0007B0  0A0D               	xorlw	13	; case 8
   493  0007B2  B4D8               	btfsc	status,2,c
   494  0007B4  D7E2               	goto	l1859
   495                           
   496                           ;main.c: 600: }
   497  0007B6  D7CA               	goto	l1847
   498  0007B8                     __end_of_main:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           status	equ	0xFD8
   504                           
   505 ;; *************** function _previousChannel *****************
   506 ;; Defined at:
   507 ;;		line 500 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      unsigned char 
   514 ;; Registers used:
   515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   521 ;;      Params:         0       0       0       0
   522 ;;      Locals:         0       0       0       0
   523 ;;      Temps:          0       0       0       0
   524 ;;      Totals:         0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    5
   528 ;; This function calls:
   529 ;;		_FMfrequenc
   530 ;;		_delay_10ms
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text1
   537  000A04                     __ptext1:
   538                           	opt stack 0
   539  000A04                     _previousChannel:
   540                           	opt stack 25
   541                           
   542                           ;main.c: 501: FMfrequenc(1046);
   543                           
   544                           ;incstack = 0
   545  000A04  0E04               	movlw	4
   546  000A06  6E13               	movwf	FMfrequenc@f+1,c
   547  000A08  0E16               	movlw	22
   548  000A0A  6E12               	movwf	FMfrequenc@f,c
   549  000A0C  EC1D  F004         	call	_FMfrequenc	;wreg free
   550                           
   551                           ;main.c: 502: PORTCbits.RC7 = 1;
   552  000A10  8E82               	bsf	3970,7,c	;volatile
   553                           
   554                           ;main.c: 503: delay_10ms(10);
   555  000A12  0E00               	movlw	0
   556  000A14  6E02               	movwf	delay_10ms@n+1,c
   557  000A16  0E0A               	movlw	10
   558  000A18  6E01               	movwf	delay_10ms@n,c
   559  000A1A  ECF1  F004         	call	_delay_10ms	;wreg free
   560                           
   561                           ;main.c: 504: PORTCbits.RC7 = 0;
   562  000A1E  9E82               	bcf	3970,7,c	;volatile
   563  000A20  0012               	return	
   564  000A22                     __end_of_previousChannel:
   565                           	opt stack 0
   566                           tblptru	equ	0xFF8
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           status	equ	0xFD8
   570                           
   571 ;; *************** function _nextChannel *****************
   572 ;; Defined at:
   573 ;;		line 490 in file "main.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      unsigned char 
   580 ;; Registers used:
   581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   587 ;;      Params:         0       0       0       0
   588 ;;      Locals:         0       0       0       0
   589 ;;      Temps:          0       0       0       0
   590 ;;      Totals:         0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    5
   594 ;; This function calls:
   595 ;;		_FMfrequenc
   596 ;;		_delay_10ms
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text2
   603  000A22                     __ptext2:
   604                           	opt stack 0
   605  000A22                     _nextChannel:
   606                           	opt stack 25
   607                           
   608                           ;main.c: 491: FMfrequenc(964);
   609                           
   610                           ;incstack = 0
   611  000A22  0E03               	movlw	3
   612  000A24  6E13               	movwf	FMfrequenc@f+1,c
   613  000A26  0EC4               	movlw	196
   614  000A28  6E12               	movwf	FMfrequenc@f,c
   615  000A2A  EC1D  F004         	call	_FMfrequenc	;wreg free
   616                           
   617                           ;main.c: 492: PORTCbits.RC6 = 1;
   618  000A2E  8C82               	bsf	3970,6,c	;volatile
   619                           
   620                           ;main.c: 493: delay_10ms(10);
   621  000A30  0E00               	movlw	0
   622  000A32  6E02               	movwf	delay_10ms@n+1,c
   623  000A34  0E0A               	movlw	10
   624  000A36  6E01               	movwf	delay_10ms@n,c
   625  000A38  ECF1  F004         	call	_delay_10ms	;wreg free
   626                           
   627                           ;main.c: 494: PORTCbits.RC6 = 0;
   628  000A3C  9C82               	bcf	3970,6,c	;volatile
   629  000A3E  0012               	return	
   630  000A40                     __end_of_nextChannel:
   631                           	opt stack 0
   632                           tblptru	equ	0xFF8
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _FMfrequenc *****************
   638 ;; Defined at:
   639 ;;		line 425 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  f               2   17[COMRAM] unsigned int 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  dat             2   25[COMRAM] unsigned int 
   644 ;;  cn              2   23[COMRAM] unsigned int 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      unsigned char 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   654 ;;      Params:         2       0       0       0
   655 ;;      Locals:         4       0       0       0
   656 ;;      Temps:          4       0       0       0
   657 ;;      Totals:        10       0       0       0
   658 ;;Total ram usage:       10 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_FMready
   663 ;;		_FMwrite
   664 ;;		_dly
   665 ;; This function is called by:
   666 ;;		_nextChannel
   667 ;;		_previousChannel
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672  00083A                     __ptext3:
   673                           	opt stack 0
   674  00083A                     _FMfrequenc:
   675                           	opt stack 25
   676                           
   677                           ;main.c: 427: unsigned int dat;
   678                           ;main.c: 428: unsigned int cn;
   679                           ;main.c: 430: cn = f - 690;
   680                           
   681                           ;incstack = 0
   682  00083A  0E4E               	movlw	78
   683  00083C  2412               	addwf	FMfrequenc@f,w,c
   684  00083E  6E18               	movwf	FMfrequenc@cn,c
   685  000840  0EFD               	movlw	253
   686  000842  2013               	addwfc	FMfrequenc@f+1,w,c
   687  000844  6E19               	movwf	FMfrequenc@cn+1,c
   688                           
   689                           ;main.c: 433: regImg[2] &= ~0x0200;
   690  000846  9239               	bcf	_regImg+5,1,c
   691                           
   692                           ;main.c: 434: if (FMwrite(2) != 0) return 1;
   693  000848  0E02               	movlw	2
   694  00084A  ECDC  F003         	call	_FMwrite
   695  00084E  0900               	iorlw	0
   696  000850  A4D8               	btfss	status,2,c
   697  000852  0012               	return	
   698                           
   699                           ;main.c: 435: regImg[2] &= 0xfe00;
   700                           
   701                           ;	Return value of _FMfrequenc is never used
   702  000854  0E00               	movlw	0
   703  000856  1638               	andwf	_regImg+4,f,c
   704  000858  0EFE               	movlw	254
   705  00085A  1639               	andwf	_regImg+5,f,c
   706                           
   707                           ;main.c: 436: regImg[2] |= (cn | 0x0200);
   708  00085C  0E00               	movlw	0
   709  00085E  6E14               	movwf	??_FMfrequenc& (0+255),c
   710  000860  0E02               	movlw	2
   711  000862  6E15               	movwf	(??_FMfrequenc+1)& (0+255),c
   712  000864  C018  F016         	movff	FMfrequenc@cn,??_FMfrequenc+2
   713  000868  C019  F017         	movff	FMfrequenc@cn+1,??_FMfrequenc+3
   714  00086C  5014               	movf	??_FMfrequenc,w,c
   715  00086E  1216               	iorwf	??_FMfrequenc+2,f,c
   716  000870  5015               	movf	??_FMfrequenc+1,w,c
   717  000872  1217               	iorwf	??_FMfrequenc+3,f,c
   718  000874  5016               	movf	??_FMfrequenc+2,w,c
   719  000876  1238               	iorwf	_regImg+4,f,c
   720  000878  5017               	movf	??_FMfrequenc+3,w,c
   721  00087A  1239               	iorwf	_regImg+5,f,c
   722                           
   723                           ;main.c: 437: if (FMwrite(2) != 0) return 1;
   724  00087C  0E02               	movlw	2
   725  00087E  ECDC  F003         	call	_FMwrite
   726  000882  0900               	iorlw	0
   727  000884  A4D8               	btfss	status,2,c
   728  000886  0012               	return	
   729                           
   730                           ;main.c: 439: dly(2);
   731                           
   732                           ;main.c: 438: do {
   733                           
   734                           ;	Return value of _FMfrequenc is never used
   735  000888  0E00               	movlw	0
   736  00088A  6E02               	movwf	dly@d+1,c
   737  00088C  0E02               	movlw	2
   738  00088E  6E01               	movwf	dly@d,c
   739  000890  ECD8  F004         	call	_dly	;wreg free
   740                           
   741                           ;main.c: 440: if (FMready(&dat) != 0) return 1;
   742  000894  0E1A               	movlw	low FMfrequenc@dat
   743  000896  6E0C               	movwf	FMready@rdy,c
   744  000898  0E00               	movlw	high FMfrequenc@dat
   745  00089A  6E0D               	movwf	FMready@rdy+1,c
   746  00089C  ECB5  F004         	call	_FMready	;wreg free
   747  0008A0  0900               	iorlw	0
   748  0008A2  A4D8               	btfss	status,2,c
   749  0008A4  0012               	return	
   750                           
   751                           ;main.c: 441: } while (!dat);
   752                           
   753                           ;	Return value of _FMfrequenc is never used
   754  0008A6  501A               	movf	FMfrequenc@dat,w,c
   755  0008A8  101B               	iorwf	FMfrequenc@dat+1,w,c
   756  0008AA  D7EC               	goto	L1
   757  0008AC                     __end_of_FMfrequenc:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           status	equ	0xFD8
   763                           
   764 ;; *************** function _errfm *****************
   765 ;; Defined at:
   766 ;;		line 544 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		None
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   780 ;;      Params:         0       0       0       0
   781 ;;      Locals:         0       0       0       0
   782 ;;      Temps:          0       0       0       0
   783 ;;      Totals:         0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text4
   794  000AEE                     __ptext4:
   795                           	opt stack 0
   796  000AEE                     _errfm:
   797                           	opt stack 30
   798  000AEE                     l216:
   799  000AEE  D7FF               	goto	l216
   800  000AF0                     __end_of_errfm:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _butnEvent *****************
   808 ;; Defined at:
   809 ;;		line 78 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  c               2   11[COMRAM] int 
   814 ;;  c               2    9[COMRAM] int 
   815 ;;  c               2    7[COMRAM] int 
   816 ;;  c               2    5[COMRAM] int 
   817 ;;  c               2    3[COMRAM] int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2    0[COMRAM] int 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   827 ;;      Params:         2       0       0       0
   828 ;;      Locals:        10       0       0       0
   829 ;;      Temps:          1       0       0       0
   830 ;;      Totals:        13       0       0       0
   831 ;;Total ram usage:       13 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text5
   841  00033A                     __ptext5:
   842                           	opt stack 0
   843  00033A                     _butnEvent:
   844                           	opt stack 30
   845                           
   846                           ;main.c: 80: if (PORTAbits.RA0 == 0)
   847                           
   848                           ;incstack = 0
   849  00033A  B080               	btfsc	3968,0,c	;volatile
   850  00033C  D026               	goto	l75
   851                           
   852                           ;main.c: 81: {
   853                           ;main.c: 82: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   854  00033E  0E00               	movlw	0
   855  000340  6E05               	movwf	butnEvent@c+1,c
   856  000342  0E00               	movlw	0
   857  000344  6E04               	movwf	butnEvent@c,c
   858  000346  BE05               	btfsc	butnEvent@c+1,7,c
   859  000348  D006               	goto	l1613
   860  00034A  5005               	movf	butnEvent@c+1,w,c
   861  00034C  E112               	bnz	l77
   862  00034E  0E0B               	movlw	11
   863  000350  5C04               	subwf	butnEvent@c,w,c
   864  000352  B0D8               	btfsc	status,0,c
   865  000354  D00E               	goto	l77
   866  000356                     l1613:
   867  000356  0E0D               	movlw	13
   868  000358  6E03               	movwf	??_butnEvent& (0+255),c
   869  00035A  0EFC               	movlw	252
   870  00035C                     u1307:
   871  00035C  2EE8               	decfsz	wreg,f,c
   872  00035E  D7FE               	goto	u1307
   873  000360  2E03               	decfsz	??_butnEvent& (0+255),f,c
   874  000362  D7FC               	goto	u1307
   875  000364  4A04               	infsnz	butnEvent@c,f,c
   876  000366  2A05               	incf	butnEvent@c+1,f,c
   877  000368  BE05               	btfsc	butnEvent@c+1,7,c
   878  00036A  D7F5               	goto	l1613
   879  00036C  5005               	movf	butnEvent@c+1,w,c
   880  00036E  E101               	bnz	u1020
   881  000370  D7EE               	goto	L2
   882  000372                     u1020:
   883  000372                     l77:
   884                           
   885                           ;main.c: 83: if (PORTAbits.RA0 == 0)
   886  000372  B080               	btfsc	3968,0,c	;volatile
   887  000374  D005               	goto	l1623
   888                           
   889                           ;main.c: 84: {
   890                           ;main.c: 86: return 1;
   891  000376  0E00               	movlw	0
   892  000378  6E02               	movwf	?_butnEvent+1,c
   893  00037A  0E01               	movlw	1
   894  00037C  6E01               	movwf	?_butnEvent,c
   895  00037E  0012               	return	
   896  000380                     l1623:
   897                           
   898                           ;main.c: 89: return 0;
   899  000380  0E00               	movlw	0
   900  000382  6E02               	movwf	?_butnEvent+1,c
   901  000384  0E00               	movlw	0
   902  000386  6E01               	movwf	?_butnEvent,c
   903  000388  0012               	return	
   904  00038A                     l75:
   905                           
   906                           ;main.c: 90: }
   907                           ;main.c: 91: }
   908                           ;main.c: 93: if (PORTAbits.RA1 == 0)
   909  00038A  B280               	btfsc	3968,1,c	;volatile
   910  00038C  D026               	goto	l81
   911                           
   912                           ;main.c: 94: {
   913                           ;main.c: 95: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)));
   914  00038E  0E00               	movlw	0
   915  000390  6E07               	movwf	butnEvent@c_499+1,c
   916  000392  0E00               	movlw	0
   917  000394  6E06               	movwf	butnEvent@c_499,c
   918  000396  BE07               	btfsc	butnEvent@c_499+1,7,c
   919  000398  D006               	goto	l1633
   920  00039A  5007               	movf	butnEvent@c_499+1,w,c
   921  00039C  E112               	bnz	l83
   922  00039E  0E0B               	movlw	11
   923  0003A0  5C06               	subwf	butnEvent@c_499,w,c
   924  0003A2  B0D8               	btfsc	status,0,c
   925  0003A4  D00E               	goto	l83
   926  0003A6                     l1633:
   927  0003A6  0E0D               	movlw	13
   928  0003A8  6E03               	movwf	??_butnEvent& (0+255),c
   929  0003AA  0EFC               	movlw	252
   930  0003AC                     u1317:
   931  0003AC  2EE8               	decfsz	wreg,f,c
   932  0003AE  D7FE               	goto	u1317
   933  0003B0  2E03               	decfsz	??_butnEvent& (0+255),f,c
   934  0003B2  D7FC               	goto	u1317
   935  0003B4  4A06               	infsnz	butnEvent@c_499,f,c
   936  0003B6  2A07               	incf	butnEvent@c_499+1,f,c
   937  0003B8  BE07               	btfsc	butnEvent@c_499+1,7,c
   938  0003BA  D7F5               	goto	l1633
   939  0003BC  5007               	movf	butnEvent@c_499+1,w,c
   940  0003BE  E101               	bnz	u1060
   941  0003C0  D7EE               	goto	L3
   942  0003C2                     u1060:
   943  0003C2                     l83:
   944                           
   945                           ;main.c: 96: if (PORTAbits.RA1 == 0)
   946  0003C2  B280               	btfsc	3968,1,c	;volatile
   947  0003C4  D005               	goto	l1643
   948                           
   949                           ;main.c: 97: {
   950                           ;main.c: 98: return 2;
   951  0003C6  0E00               	movlw	0
   952  0003C8  6E02               	movwf	?_butnEvent+1,c
   953  0003CA  0E02               	movlw	2
   954  0003CC  6E01               	movwf	?_butnEvent,c
   955  0003CE  0012               	return	
   956  0003D0                     l1643:
   957                           
   958                           ;main.c: 100: return 0;
   959  0003D0  0E00               	movlw	0
   960  0003D2  6E02               	movwf	?_butnEvent+1,c
   961  0003D4  0E00               	movlw	0
   962  0003D6  6E01               	movwf	?_butnEvent,c
   963  0003D8  0012               	return	
   964  0003DA                     l81:
   965                           
   966                           ;main.c: 101: }
   967                           ;main.c: 102: }
   968                           ;main.c: 104: if (PORTBbits.RB0 == 0)
   969  0003DA  B081               	btfsc	3969,0,c	;volatile
   970  0003DC  D026               	goto	l86
   971                           
   972                           ;main.c: 105: {
   973                           ;main.c: 106: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
   974  0003DE  0E00               	movlw	0
   975  0003E0  6E09               	movwf	butnEvent@c_508+1,c
   976  0003E2  0E00               	movlw	0
   977  0003E4  6E08               	movwf	butnEvent@c_508,c
   978  0003E6  BE09               	btfsc	butnEvent@c_508+1,7,c
   979  0003E8  D006               	goto	l1653
   980  0003EA  5009               	movf	butnEvent@c_508+1,w,c
   981  0003EC  E112               	bnz	l88
   982  0003EE  0E0B               	movlw	11
   983  0003F0  5C08               	subwf	butnEvent@c_508,w,c
   984  0003F2  B0D8               	btfsc	status,0,c
   985  0003F4  D00E               	goto	l88
   986  0003F6                     l1653:
   987  0003F6  0E0D               	movlw	13
   988  0003F8  6E03               	movwf	??_butnEvent& (0+255),c
   989  0003FA  0EFC               	movlw	252
   990  0003FC                     u1327:
   991  0003FC  2EE8               	decfsz	wreg,f,c
   992  0003FE  D7FE               	goto	u1327
   993  000400  2E03               	decfsz	??_butnEvent& (0+255),f,c
   994  000402  D7FC               	goto	u1327
   995  000404  4A08               	infsnz	butnEvent@c_508,f,c
   996  000406  2A09               	incf	butnEvent@c_508+1,f,c
   997  000408  BE09               	btfsc	butnEvent@c_508+1,7,c
   998  00040A  D7F5               	goto	l1653
   999  00040C  5009               	movf	butnEvent@c_508+1,w,c
  1000  00040E  E101               	bnz	u1100
  1001  000410  D7EE               	goto	L4
  1002  000412                     u1100:
  1003  000412                     l88:
  1004                           
  1005                           ;main.c: 107: if (PORTBbits.RB0 == 0)
  1006  000412  B081               	btfsc	3969,0,c	;volatile
  1007  000414  D005               	goto	l1663
  1008                           
  1009                           ;main.c: 108: {
  1010                           ;main.c: 109: return 3;
  1011  000416  0E00               	movlw	0
  1012  000418  6E02               	movwf	?_butnEvent+1,c
  1013  00041A  0E03               	movlw	3
  1014  00041C  6E01               	movwf	?_butnEvent,c
  1015  00041E  0012               	return	
  1016  000420                     l1663:
  1017                           
  1018                           ;main.c: 111: return 0;
  1019  000420  0E00               	movlw	0
  1020  000422  6E02               	movwf	?_butnEvent+1,c
  1021  000424  0E00               	movlw	0
  1022  000426  6E01               	movwf	?_butnEvent,c
  1023  000428  0012               	return	
  1024  00042A                     l86:
  1025                           
  1026                           ;main.c: 112: }
  1027                           ;main.c: 113: }
  1028                           ;main.c: 115: if (PORTBbits.RB5 == 0)
  1029  00042A  BA81               	btfsc	3969,5,c	;volatile
  1030  00042C  D026               	goto	l91
  1031                           
  1032                           ;main.c: 116: {
  1033                           ;main.c: 117: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1034  00042E  0E00               	movlw	0
  1035  000430  6E0B               	movwf	butnEvent@c_509+1,c
  1036  000432  0E00               	movlw	0
  1037  000434  6E0A               	movwf	butnEvent@c_509,c
  1038  000436  BE0B               	btfsc	butnEvent@c_509+1,7,c
  1039  000438  D006               	goto	l1673
  1040  00043A  500B               	movf	butnEvent@c_509+1,w,c
  1041  00043C  E112               	bnz	l93
  1042  00043E  0E0B               	movlw	11
  1043  000440  5C0A               	subwf	butnEvent@c_509,w,c
  1044  000442  B0D8               	btfsc	status,0,c
  1045  000444  D00E               	goto	l93
  1046  000446                     l1673:
  1047  000446  0E0D               	movlw	13
  1048  000448  6E03               	movwf	??_butnEvent& (0+255),c
  1049  00044A  0EFC               	movlw	252
  1050  00044C                     u1337:
  1051  00044C  2EE8               	decfsz	wreg,f,c
  1052  00044E  D7FE               	goto	u1337
  1053  000450  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1054  000452  D7FC               	goto	u1337
  1055  000454  4A0A               	infsnz	butnEvent@c_509,f,c
  1056  000456  2A0B               	incf	butnEvent@c_509+1,f,c
  1057  000458  BE0B               	btfsc	butnEvent@c_509+1,7,c
  1058  00045A  D7F5               	goto	l1673
  1059  00045C  500B               	movf	butnEvent@c_509+1,w,c
  1060  00045E  E101               	bnz	u1140
  1061  000460  D7EE               	goto	L5
  1062  000462                     u1140:
  1063  000462                     l93:
  1064                           
  1065                           ;main.c: 118: if (PORTBbits.RB5 == 0)
  1066  000462  BA81               	btfsc	3969,5,c	;volatile
  1067  000464  D005               	goto	l1683
  1068                           
  1069                           ;main.c: 119: {
  1070                           ;main.c: 120: return 4;
  1071  000466  0E00               	movlw	0
  1072  000468  6E02               	movwf	?_butnEvent+1,c
  1073  00046A  0E04               	movlw	4
  1074  00046C  6E01               	movwf	?_butnEvent,c
  1075  00046E  0012               	return	
  1076  000470                     l1683:
  1077                           
  1078                           ;main.c: 122: return 0;
  1079  000470  0E00               	movlw	0
  1080  000472  6E02               	movwf	?_butnEvent+1,c
  1081  000474  0E00               	movlw	0
  1082  000476  6E01               	movwf	?_butnEvent,c
  1083  000478  0012               	return	
  1084  00047A                     l91:
  1085                           
  1086                           ;main.c: 123: }
  1087                           ;main.c: 124: }
  1088                           ;main.c: 126: if (PORTGbits.RG0 == 0)
  1089  00047A  B086               	btfsc	3974,0,c	;volatile
  1090  00047C  0012               	return	
  1091                           
  1092                           ;main.c: 127: {
  1093                           ;main.c: 128: for (int c = 0; c <= 10; c++)_delay((unsigned long)((5)*(8000000/4000.0)))
      +                          ;
  1094  00047E  0E00               	movlw	0
  1095  000480  6E0D               	movwf	butnEvent@c_516+1,c
  1096  000482  0E00               	movlw	0
  1097  000484  6E0C               	movwf	butnEvent@c_516,c
  1098  000486  BE0D               	btfsc	butnEvent@c_516+1,7,c
  1099  000488  D006               	goto	l1693
  1100  00048A  500D               	movf	butnEvent@c_516+1,w,c
  1101  00048C  E112               	bnz	l98
  1102  00048E  0E0B               	movlw	11
  1103  000490  5C0C               	subwf	butnEvent@c_516,w,c
  1104  000492  B0D8               	btfsc	status,0,c
  1105  000494  D00E               	goto	l98
  1106  000496                     l1693:
  1107  000496  0E0D               	movlw	13
  1108  000498  6E03               	movwf	??_butnEvent& (0+255),c
  1109  00049A  0EFC               	movlw	252
  1110  00049C                     u1347:
  1111  00049C  2EE8               	decfsz	wreg,f,c
  1112  00049E  D7FE               	goto	u1347
  1113  0004A0  2E03               	decfsz	??_butnEvent& (0+255),f,c
  1114  0004A2  D7FC               	goto	u1347
  1115  0004A4  4A0C               	infsnz	butnEvent@c_516,f,c
  1116  0004A6  2A0D               	incf	butnEvent@c_516+1,f,c
  1117  0004A8  BE0D               	btfsc	butnEvent@c_516+1,7,c
  1118  0004AA  D7F5               	goto	l1693
  1119  0004AC  500D               	movf	butnEvent@c_516+1,w,c
  1120  0004AE  E101               	bnz	u1180
  1121  0004B0  D7EE               	goto	L6
  1122  0004B2                     u1180:
  1123  0004B2                     l98:
  1124                           
  1125                           ;main.c: 129: if (PORTGbits.RG0 == 0)
  1126  0004B2  B086               	btfsc	3974,0,c	;volatile
  1127  0004B4  D005               	goto	l1703
  1128                           
  1129                           ;main.c: 130: {
  1130                           ;main.c: 131: return 5;
  1131  0004B6  0E00               	movlw	0
  1132  0004B8  6E02               	movwf	?_butnEvent+1,c
  1133  0004BA  0E05               	movlw	5
  1134  0004BC  6E01               	movwf	?_butnEvent,c
  1135                           
  1136                           ;main.c: 132: } else {
  1137  0004BE  0012               	return	
  1138  0004C0                     l1703:
  1139                           
  1140                           ;main.c: 133: return 0;
  1141  0004C0  0E00               	movlw	0
  1142  0004C2  6E02               	movwf	?_butnEvent+1,c
  1143  0004C4  0E00               	movlw	0
  1144  0004C6  6E01               	movwf	?_butnEvent,c
  1145  0004C8  0012               	return	
  1146  0004CA                     __end_of_butnEvent:
  1147                           	opt stack 0
  1148                           tblptru	equ	0xFF8
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           status	equ	0xFD8
  1152                           
  1153 ;; *************** function _VolumeUp *****************
  1154 ;; Defined at:
  1155 ;;		line 509 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      unsigned char 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1169 ;;      Params:         0       0       0       0
  1170 ;;      Locals:         0       0       0       0
  1171 ;;      Temps:          0       0       0       0
  1172 ;;      Totals:         0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    5
  1176 ;; This function calls:
  1177 ;;		_delay_10ms
  1178 ;;		_setVolume
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text6
  1185  000A40                     __ptext6:
  1186                           	opt stack 0
  1187  000A40                     _VolumeUp:
  1188                           	opt stack 25
  1189                           
  1190                           ;main.c: 510: setVolume(18);
  1191                           
  1192                           ;incstack = 0
  1193  000A40  0E00               	movlw	0
  1194  000A42  6E13               	movwf	setVolume@volume+1,c
  1195  000A44  0E12               	movlw	18
  1196  000A46  6E12               	movwf	setVolume@volume,c
  1197  000A48  EC2D  F003         	call	_setVolume	;wreg free
  1198                           
  1199                           ;main.c: 511: PORTCbits.RC6 = 1;
  1200  000A4C  8C82               	bsf	3970,6,c	;volatile
  1201                           
  1202                           ;main.c: 512: delay_10ms(10);
  1203  000A4E  0E00               	movlw	0
  1204  000A50  6E02               	movwf	delay_10ms@n+1,c
  1205  000A52  0E0A               	movlw	10
  1206  000A54  6E01               	movwf	delay_10ms@n,c
  1207  000A56  ECF1  F004         	call	_delay_10ms	;wreg free
  1208                           
  1209                           ;main.c: 513: PORTCbits.RC6 = 0;
  1210  000A5A  9C82               	bcf	3970,6,c	;volatile
  1211  000A5C  0012               	return	
  1212  000A5E                     __end_of_VolumeUp:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           status	equ	0xFD8
  1218                           
  1219 ;; *************** function _VolumeDown *****************
  1220 ;; Defined at:
  1221 ;;		line 518 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      unsigned char 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1235 ;;      Params:         0       0       0       0
  1236 ;;      Locals:         0       0       0       0
  1237 ;;      Temps:          0       0       0       0
  1238 ;;      Totals:         0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    5
  1242 ;; This function calls:
  1243 ;;		_delay_10ms
  1244 ;;		_setVolume
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text7
  1251  000A5E                     __ptext7:
  1252                           	opt stack 0
  1253  000A5E                     _VolumeDown:
  1254                           	opt stack 25
  1255                           
  1256                           ;main.c: 519: setVolume(10);
  1257                           
  1258                           ;incstack = 0
  1259  000A5E  0E00               	movlw	0
  1260  000A60  6E13               	movwf	setVolume@volume+1,c
  1261  000A62  0E0A               	movlw	10
  1262  000A64  6E12               	movwf	setVolume@volume,c
  1263  000A66  EC2D  F003         	call	_setVolume	;wreg free
  1264                           
  1265                           ;main.c: 520: PORTCbits.RC7 = 1;
  1266  000A6A  8E82               	bsf	3970,7,c	;volatile
  1267                           
  1268                           ;main.c: 521: delay_10ms(10);
  1269  000A6C  0E00               	movlw	0
  1270  000A6E  6E02               	movwf	delay_10ms@n+1,c
  1271  000A70  0E0A               	movlw	10
  1272  000A72  6E01               	movwf	delay_10ms@n,c
  1273  000A74  ECF1  F004         	call	_delay_10ms	;wreg free
  1274                           
  1275                           ;main.c: 522: PORTCbits.RC7 = 0;
  1276  000A78  9E82               	bcf	3970,7,c	;volatile
  1277  000A7A  0012               	return	
  1278  000A7C                     __end_of_VolumeDown:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _setVolume *****************
  1286 ;; Defined at:
  1287 ;;		line 387 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  volume          2   17[COMRAM] int 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  volume_map     19   22[COMRAM] const unsigned char [19]
  1292 ;;  dat             2   41[COMRAM] unsigned int 
  1293 ;;  cn              2    0        unsigned int 
  1294 ;;  temp_vol        1   44[COMRAM] unsigned char 
  1295 ;;  volume_setti    1   43[COMRAM] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      unsigned char 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1305 ;;      Params:         2       0       0       0
  1306 ;;      Locals:        23       0       0       0
  1307 ;;      Temps:          3       0       0       0
  1308 ;;      Totals:        28       0       0       0
  1309 ;;Total ram usage:       28 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    4
  1312 ;; This function calls:
  1313 ;;		_FMready
  1314 ;;		_FMwrite
  1315 ;;		_dly
  1316 ;; This function is called by:
  1317 ;;		_VolumeUp
  1318 ;;		_VolumeDown
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text8
  1323  00065A                     __ptext8:
  1324                           	opt stack 0
  1325  00065A                     _setVolume:
  1326                           	opt stack 25
  1327                           
  1328                           ;main.c: 388: unsigned int dat;
  1329                           ;main.c: 389: unsigned int cn;
  1330                           ;main.c: 392: unsigned char temp_vol = volume;
  1331                           
  1332                           ;incstack = 0
  1333  00065A  C012  F02D         	movff	setVolume@volume,setVolume@temp_vol
  1334                           
  1335                           ;main.c: 396: else if(temp_vol > 18)
  1336                           
  1337                           ;main.c: 395: temp_vol = 0;
  1338                           
  1339                           ;main.c: 394: if(temp_vol < 0)
  1340  00065E  0E12               	movlw	18
  1341  000660  642D               	cpfsgt	setVolume@temp_vol,c
  1342  000662  D002               	goto	l1551
  1343                           
  1344                           ;main.c: 397: temp_vol = 18;
  1345  000664  0E12               	movlw	18
  1346  000666  6E2D               	movwf	setVolume@temp_vol,c
  1347  000668                     l1551:
  1348                           
  1349                           ;main.c: 400: const unsigned char volume_map[19] = {
  1350                           ;main.c: 401: 0x0F, 0xCF, 0xDF, 0xFF, 0xCB,
  1351                           ;main.c: 402: 0xDB, 0xFB, 0xFA, 0xF9, 0xF8,
  1352                           ;main.c: 403: 0xF7, 0xD6, 0xE6, 0xF6, 0xE3,
  1353                           ;main.c: 404: 0xF3, 0xF2, 0xF1, 0xF0
  1354                           ;main.c: 405: };
  1355  000668  0E25               	movlw	low setVolume@F6665
  1356  00066A  6EF6               	movwf	tblptrl,c
  1357  00066C                     	if	1	;There is more than 1 active tblptr byte
  1358  00066C  0E03               	movlw	high setVolume@F6665
  1359  00066E  6EF7               	movwf	tblptrh,c
  1360  000670                     	endif
  1361  000670                     	if	0	;There are less than 3 active tblptr bytes
  1362  000670                     	endif
  1363  000670  EE20  F017         	lfsr	2,setVolume@volume_map
  1364  000674  0E12               	movlw	18
  1365  000676                     u890:
  1366  000676  0009               	tblrd		*+
  1367  000678  CFF5 FFDE          	movff	tablat,postinc2
  1368  00067C  06E8               	decf	wreg,f,c
  1369  00067E  E2FB               	bc	u890
  1370                           
  1371                           ;main.c: 408: unsigned char volume_setting = volume_map[temp_vol];
  1372  000680  502D               	movf	setVolume@temp_vol,w,c
  1373  000682  0D01               	mullw	1
  1374  000684  0E17               	movlw	low setVolume@volume_map
  1375  000686  24F3               	addwf	prodl,w,c
  1376  000688  6ED9               	movwf	fsr2l,c
  1377  00068A  0E00               	movlw	high setVolume@volume_map
  1378  00068C  20F4               	addwfc	prodh,w,c
  1379  00068E  6EDA               	movwf	fsr2h,c
  1380  000690  50DF               	movf	indf2,w,c
  1381  000692  6E2C               	movwf	setVolume@volume_setting,c
  1382                           
  1383                           ;main.c: 410: regImg[3] &= 0xF87F;
  1384  000694  0E7F               	movlw	127
  1385  000696  163A               	andwf	_regImg+6,f,c
  1386  000698  0EF8               	movlw	248
  1387  00069A  163B               	andwf	_regImg+7,f,c
  1388                           
  1389                           ;main.c: 411: regImg[3] |= ((volume_setting & 0x0F) << 7);
  1390  00069C  502C               	movf	setVolume@volume_setting,w,c
  1391  00069E  0B0F               	andlw	15
  1392  0006A0  6E14               	movwf	??_setVolume& (0+255),c
  1393  0006A2  6A15               	clrf	(??_setVolume+1)& (0+255),c
  1394  0006A4  0E07               	movlw	7
  1395  0006A6                     u905:
  1396  0006A6  90D8               	bcf	status,0,c
  1397  0006A8  3614               	rlcf	??_setVolume,f,c
  1398  0006AA  3615               	rlcf	??_setVolume+1,f,c
  1399  0006AC  2EE8               	decfsz	wreg,f,c
  1400  0006AE  D7FB               	goto	u905
  1401  0006B0  5014               	movf	??_setVolume,w,c
  1402  0006B2  123A               	iorwf	_regImg+6,f,c
  1403  0006B4  5015               	movf	??_setVolume+1,w,c
  1404  0006B6  123B               	iorwf	_regImg+7,f,c
  1405                           
  1406                           ;main.c: 412: if (FMwrite(3) != 0) return 1;
  1407  0006B8  0E03               	movlw	3
  1408  0006BA  ECDC  F003         	call	_FMwrite
  1409  0006BE  0900               	iorlw	0
  1410  0006C0  A4D8               	btfss	status,2,c
  1411  0006C2  0012               	return	
  1412                           
  1413                           ;main.c: 413: regImg[14] &= 0x0FFF;
  1414                           
  1415                           ;	Return value of _setVolume is never used
  1416  0006C4  0EFF               	movlw	255
  1417  0006C6  1650               	andwf	_regImg+28,f,c
  1418  0006C8  0E0F               	movlw	15
  1419  0006CA  1651               	andwf	_regImg+29,f,c
  1420                           
  1421                           ;main.c: 414: regImg[14] |= ((volume_setting & 0xF0) << 8);
  1422  0006CC  C02C  F014         	movff	setVolume@volume_setting,??_setVolume
  1423  0006D0  0EF0               	movlw	240
  1424  0006D2  1614               	andwf	??_setVolume,f,c
  1425  0006D4  5014               	movf	??_setVolume,w,c
  1426  0006D6  6E16               	movwf	(??_setVolume+2)& (0+255),c
  1427  0006D8  6A15               	clrf	(??_setVolume+1)& (0+255),c
  1428  0006DA  5015               	movf	??_setVolume+1,w,c
  1429  0006DC  1250               	iorwf	_regImg+28,f,c
  1430  0006DE  5016               	movf	??_setVolume+2,w,c
  1431  0006E0  1251               	iorwf	_regImg+29,f,c
  1432                           
  1433                           ;main.c: 415: if (FMwrite(14) != 0) return 1;
  1434  0006E2  0E0E               	movlw	14
  1435  0006E4  ECDC  F003         	call	_FMwrite
  1436  0006E8  0900               	iorlw	0
  1437  0006EA  A4D8               	btfss	status,2,c
  1438  0006EC  0012               	return	
  1439                           
  1440                           ;main.c: 418: dly(2);
  1441                           
  1442                           ;main.c: 417: do {
  1443                           
  1444                           ;	Return value of _setVolume is never used
  1445  0006EE  0E00               	movlw	0
  1446  0006F0  6E02               	movwf	dly@d+1,c
  1447  0006F2  0E02               	movlw	2
  1448  0006F4  6E01               	movwf	dly@d,c
  1449  0006F6  ECD8  F004         	call	_dly	;wreg free
  1450                           
  1451                           ;main.c: 419: if (FMready(&dat) != 0) return 1;
  1452  0006FA  0E2A               	movlw	low setVolume@dat
  1453  0006FC  6E0C               	movwf	FMready@rdy,c
  1454  0006FE  0E00               	movlw	high setVolume@dat
  1455  000700  6E0D               	movwf	FMready@rdy+1,c
  1456  000702  ECB5  F004         	call	_FMready	;wreg free
  1457  000706  0900               	iorlw	0
  1458  000708  A4D8               	btfss	status,2,c
  1459  00070A  0012               	return	
  1460                           
  1461                           ;main.c: 420: } while (!dat);
  1462                           
  1463                           ;	Return value of _setVolume is never used
  1464  00070C  502A               	movf	setVolume@dat,w,c
  1465  00070E  102B               	iorwf	setVolume@dat+1,w,c
  1466  000710  D7EC               	goto	L8
  1467  000712                     __end_of_setVolume:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           prodh	equ	0xFF4
  1474                           prodl	equ	0xFF3
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _delay_10ms *****************
  1484 ;; Defined at:
  1485 ;;		line 603 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  n               2    0[COMRAM] unsigned int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1499 ;;      Params:         2       0       0       0
  1500 ;;      Locals:         0       0       0       0
  1501 ;;      Temps:          1       0       0       0
  1502 ;;      Totals:         3       0       0       0
  1503 ;;Total ram usage:        3 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_nextChannel
  1509 ;;		_previousChannel
  1510 ;;		_VolumeUp
  1511 ;;		_VolumeDown
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text9
  1516  0009E2                     __ptext9:
  1517                           	opt stack 0
  1518  0009E2                     _delay_10ms:
  1519                           	opt stack 29
  1520                           
  1521                           ;main.c: 604: while (n-- != 0) {
  1522                           
  1523                           ;incstack = 0
  1524  0009E2  D007               	goto	l1603
  1525  0009E4                     l1601:
  1526                           
  1527                           ;main.c: 605: _delay((unsigned long)((12)*(8000000/4000.0)));
  1528  0009E4  0E20               	movlw	32
  1529  0009E6  6E03               	movwf	??_delay_10ms& (0+255),c
  1530  0009E8  0E2A               	movlw	42
  1531  0009EA                     u1357:
  1532  0009EA  2EE8               	decfsz	wreg,f,c
  1533  0009EC  D7FE               	goto	u1357
  1534  0009EE  2E03               	decfsz	??_delay_10ms& (0+255),f,c
  1535  0009F0  D7FC               	goto	u1357
  1536  0009F2                     l1603:
  1537  0009F2  0601               	decf	delay_10ms@n,f,c
  1538  0009F4  A0D8               	btfss	status,0,c
  1539  0009F6  0602               	decf	delay_10ms@n+1,f,c
  1540  0009F8  2801               	incf	delay_10ms@n,w,c
  1541  0009FA  E1F4               	bnz	l1601
  1542  0009FC  2802               	incf	delay_10ms@n+1,w,c
  1543  0009FE  B4D8               	btfsc	status,2,c
  1544  000A00  0012               	return	
  1545  000A02  D7F0               	goto	l1601
  1546  000A04                     __end_of_delay_10ms:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           prodh	equ	0xFF4
  1553                           prodl	equ	0xFF3
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           indf2	equ	0xFDF
  1557                           postinc2	equ	0xFDE
  1558                           fsr2h	equ	0xFDA
  1559                           fsr2l	equ	0xFD9
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _MuteHard *****************
  1563 ;; Defined at:
  1564 ;;		line 527 in file "main.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  down            1    wreg     unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  down            1    0[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      unsigned char 
  1571 ;; Registers used:
  1572 ;;		wreg
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1578 ;;      Params:         0       0       0       0
  1579 ;;      Locals:         0       0       0       0
  1580 ;;      Temps:          0       0       0       0
  1581 ;;      Totals:         0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text10
  1592  000AF0                     __ptext10:
  1593                           	opt stack 0
  1594  000AF0                     _MuteHard:
  1595                           	opt stack 30
  1596                           
  1597                           ;main.c: 530: return 0;
  1598                           ;	Return value of _MuteHard is never used
  1599                           
  1600                           ;incstack = 0
  1601  000AF0  0012               	return		;funcret
  1602  000AF2                     __end_of_MuteHard:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           prodh	equ	0xFF4
  1609                           prodl	equ	0xFF3
  1610                           postinc0	equ	0xFEE
  1611                           wreg	equ	0xFE8
  1612                           indf2	equ	0xFDF
  1613                           postinc2	equ	0xFDE
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _Init *****************
  1619 ;; Defined at:
  1620 ;;		line 173 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  i               2    0        int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1634 ;;      Params:         0       0       0       0
  1635 ;;      Locals:         0       0       0       0
  1636 ;;      Temps:          0       0       0       0
  1637 ;;      Totals:         0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    1
  1641 ;; This function calls:
  1642 ;;		_OpenI2C
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text11
  1649  0008AC                     __ptext11:
  1650                           	opt stack 0
  1651  0008AC                     _Init:
  1652                           	opt stack 29
  1653                           
  1654                           ;main.c: 175: int i;
  1655                           ;main.c: 177: OSCCON = 0b01110010;
  1656                           
  1657                           ;incstack = 0
  1658  0008AC  0E72               	movlw	114
  1659  0008AE  6ED3               	movwf	4051,c	;volatile
  1660                           
  1661                           ;main.c: 178: LCDSE0 = 0b11111111;
  1662  0008B0  010F               	movlb	15	; () banked
  1663  0008B2  695A               	setf	90,b	;volatile
  1664                           
  1665                           ; BSR set to: 15
  1666                           ;main.c: 179: LCDSE1 = 0b11111111;
  1667  0008B4  010F               	movlb	15	; () banked
  1668  0008B6  695B               	setf	91,b	;volatile
  1669                           
  1670                           ; BSR set to: 15
  1671                           ;main.c: 180: LCDSE2 = 0b11111111;
  1672  0008B8  010F               	movlb	15	; () banked
  1673  0008BA  695C               	setf	92,b	;volatile
  1674                           
  1675                           ;main.c: 181: LCDSE3 = 0b00000000;
  1676  0008BC  0E00               	movlw	0
  1677  0008BE  010F               	movlb	15	; () banked
  1678  0008C0  6F5D               	movwf	93,b	;volatile
  1679                           
  1680                           ;main.c: 182: LCDCON = 0b10001000;
  1681  0008C2  0E88               	movlw	136
  1682  0008C4  010F               	movlb	15	; () banked
  1683  0008C6  6F59               	movwf	89,b	;volatile
  1684                           
  1685                           ;main.c: 183: LCDPS = 0b00110110;
  1686  0008C8  0E36               	movlw	54
  1687  0008CA  010F               	movlb	15	; () banked
  1688  0008CC  6F58               	movwf	88,b	;volatile
  1689                           
  1690                           ;main.c: 184: ADCON1 = 0b00111111;
  1691  0008CE  0E3F               	movlw	63
  1692  0008D0  6EC1               	movwf	4033,c	;volatile
  1693                           
  1694                           ;main.c: 185: TRISA = 0b00000011;
  1695  0008D2  0E03               	movlw	3
  1696  0008D4  6E92               	movwf	3986,c	;volatile
  1697                           
  1698                           ;main.c: 186: TRISB = 0b00100001;
  1699  0008D6  0E21               	movlw	33
  1700  0008D8  6E93               	movwf	3987,c	;volatile
  1701                           
  1702                           ;main.c: 187: TRISC = 0b00011000;
  1703  0008DA  0E18               	movlw	24
  1704  0008DC  6E94               	movwf	3988,c	;volatile
  1705                           
  1706                           ; BSR set to: 15
  1707                           ;main.c: 188: TRISG = 0b11111111;
  1708  0008DE  6898               	setf	3992,c	;volatile
  1709                           
  1710                           ;main.c: 189: PORTA = 0;
  1711  0008E0  0E00               	movlw	0
  1712  0008E2  6E80               	movwf	3968,c	;volatile
  1713                           
  1714                           ;main.c: 190: PORTB = 0;
  1715  0008E4  0E00               	movlw	0
  1716  0008E6  6E81               	movwf	3969,c	;volatile
  1717                           
  1718                           ;main.c: 191: PORTC = 0;
  1719  0008E8  0E00               	movlw	0
  1720  0008EA  6E82               	movwf	3970,c	;volatile
  1721                           
  1722                           ; BSR set to: 15
  1723                           ;main.c: 192: INTCONbits.TMR0IF = 0;
  1724  0008EC  94F2               	bcf	intcon,2,c	;volatile
  1725                           
  1726                           ;main.c: 194: T0CON = 0b00001000;
  1727  0008EE  0E08               	movlw	8
  1728  0008F0  6ED5               	movwf	4053,c	;volatile
  1729                           
  1730                           ;main.c: 195: TMR0H = 0;
  1731  0008F2  0E00               	movlw	0
  1732  0008F4  6ED7               	movwf	4055,c	;volatile
  1733                           
  1734                           ;main.c: 196: TMR0L = 0;
  1735  0008F6  0E00               	movlw	0
  1736  0008F8  6ED6               	movwf	4054,c	;volatile
  1737                           
  1738                           ; BSR set to: 15
  1739                           ;main.c: 197: T0CONbits.TMR0ON = 1;
  1740  0008FA  8ED5               	bsf	4053,7,c	;volatile
  1741                           
  1742                           ; BSR set to: 15
  1743                           ;main.c: 198: OpenI2C(0b00001000, 0b10000000);
  1744  0008FC  0E80               	movlw	128
  1745  0008FE  6E01               	movwf	OpenI2C@slew,c
  1746  000900  0E08               	movlw	8
  1747  000902  EC3E  F005         	call	_OpenI2C
  1748                           
  1749                           ;main.c: 199: SSPADD = 0x3F;
  1750  000906  0E3F               	movlw	63
  1751  000908  6EC8               	movwf	4040,c	;volatile
  1752  00090A  0012               	return	
  1753  00090C                     __end_of_Init:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           prodh	equ	0xFF4
  1760                           prodl	equ	0xFF3
  1761                           intcon	equ	0xFF2
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           indf2	equ	0xFDF
  1765                           postinc2	equ	0xFDE
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _OpenI2C *****************
  1771 ;; Defined at:
  1772 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_open.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  sync_mode       1    wreg     unsigned char 
  1775 ;;  slew            1    0[COMRAM] unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1787 ;;      Params:         1       0       0       0
  1788 ;;      Locals:         1       0       0       0
  1789 ;;      Temps:          0       0       0       0
  1790 ;;      Totals:         2       0       0       0
  1791 ;;Total ram usage:        2 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_Init
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text12
  1801  000A7C                     __ptext12:
  1802                           	opt stack 0
  1803  000A7C                     _OpenI2C:
  1804                           	opt stack 29
  1805                           
  1806                           ;incstack = 0
  1807                           ;OpenI2C@sync_mode stored from wreg
  1808  000A7C  6E02               	movwf	OpenI2C@sync_mode,c
  1809  000A7E  0E3F               	movlw	63
  1810  000A80  16C7               	andwf	4039,f,c	;volatile
  1811  000A82  0E00               	movlw	0
  1812  000A84  6EC6               	movwf	4038,c	;volatile
  1813  000A86  0E00               	movlw	0
  1814  000A88  6EC5               	movwf	4037,c	;volatile
  1815  000A8A  5002               	movf	OpenI2C@sync_mode,w,c
  1816  000A8C  12C6               	iorwf	4038,f,c	;volatile
  1817  000A8E  5001               	movf	OpenI2C@slew,w,c
  1818  000A90  12C7               	iorwf	4039,f,c	;volatile
  1819  000A92  8694               	bsf	3988,3,c	;volatile
  1820  000A94  8894               	bsf	3988,4,c	;volatile
  1821  000A96  8AC6               	bsf	4038,5,c	;volatile
  1822  000A98  0012               	return		;funcret
  1823  000A9A                     __end_of_OpenI2C:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           prodh	equ	0xFF4
  1830                           prodl	equ	0xFF3
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           indf2	equ	0xFDF
  1835                           postinc2	equ	0xFDE
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _FMvers *****************
  1841 ;; Defined at:
  1842 ;;		line 457 in file "main.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  vsn             2   11[COMRAM] PTR unsigned int 
  1845 ;;		 -> main@ui(2), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1857 ;;      Params:         2       0       0       0
  1858 ;;      Locals:         0       0       0       0
  1859 ;;      Temps:          0       0       0       0
  1860 ;;      Totals:         2       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		_FMread
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text13
  1872  000ADE                     __ptext13:
  1873                           	opt stack 0
  1874  000ADE                     _FMvers:
  1875                           	opt stack 27
  1876                           
  1877                           ;main.c: 458: if (FMread(0x1C, vsn) != 0) return 1;
  1878                           
  1879                           ;incstack = 0
  1880  000ADE  C00C  F003         	movff	FMvers@vsn,FMread@data
  1881  000AE2  C00D  F004         	movff	FMvers@vsn+1,FMread@data+1
  1882  000AE6  0E1C               	movlw	28
  1883  000AE8  EC65  F002         	call	_FMread
  1884                           
  1885                           ;	Return value of _FMvers is never used
  1886  000AEC  0012               	return	
  1887  000AEE                     __end_of_FMvers:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           prodh	equ	0xFF4
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           indf2	equ	0xFDF
  1899                           postinc2	equ	0xFDE
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _FMinit *****************
  1905 ;; Defined at:
  1906 ;;		line 351 in file "main.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  dat             2   17[COMRAM] unsigned int 
  1911 ;;  ad              1   19[COMRAM] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      unsigned char 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         3       0       0       0
  1923 ;;      Temps:          0       0       0       0
  1924 ;;      Totals:         3       0       0       0
  1925 ;;Total ram usage:        3 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    4
  1928 ;; This function calls:
  1929 ;;		_FMready
  1930 ;;		_FMwrite
  1931 ;;		_dly
  1932 ;;		_showFreq
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text14
  1939  000594                     __ptext14:
  1940                           	opt stack 0
  1941  000594                     _FMinit:
  1942                           	opt stack 26
  1943                           
  1944                           ;main.c: 353: unsigned char ad;
  1945                           ;main.c: 354: unsigned int dat;
  1946                           ;main.c: 357: for (ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
  1947                           
  1948                           ;incstack = 0
  1949  000594  0E00               	movlw	0
  1950  000596  6E14               	movwf	FMinit@ad,c
  1951  000598                     l1729:
  1952  000598  0E11               	movlw	17
  1953  00059A  6414               	cpfsgt	FMinit@ad,c
  1954  00059C  D001               	goto	l1733
  1955  00059E  D018               	goto	l160
  1956  0005A0                     l1733:
  1957  0005A0  5014               	movf	FMinit@ad,w,c
  1958  0005A2  0D02               	mullw	2
  1959  0005A4  0E01               	movlw	low _regDflt
  1960  0005A6  24F3               	addwf	prodl,w,c
  1961  0005A8  6EF6               	movwf	tblptrl,c
  1962  0005AA  0E03               	movlw	high _regDflt
  1963  0005AC  20F4               	addwfc	prodh,w,c
  1964  0005AE  6EF7               	movwf	tblptrh,c
  1965  0005B0                     	if	0	;There are less than 3 active tblptr bytes
  1966  0005B0                     	endif
  1967  0005B0  5014               	movf	FMinit@ad,w,c
  1968  0005B2  0D02               	mullw	2
  1969  0005B4  0E34               	movlw	low _regImg
  1970  0005B6  24F3               	addwf	prodl,w,c
  1971  0005B8  6ED9               	movwf	fsr2l,c
  1972  0005BA  0E00               	movlw	high _regImg
  1973  0005BC  20F4               	addwfc	prodh,w,c
  1974  0005BE  6EDA               	movwf	fsr2h,c
  1975  0005C0  0009               	tblrd		*+
  1976  0005C2  CFF5 FFDE          	movff	tablat,postinc2
  1977  0005C6  0008               	tblrd		*
  1978  0005C8  CFF5 FFDD          	movff	tablat,postdec2
  1979  0005CC  2A14               	incf	FMinit@ad,f,c
  1980  0005CE  D7E4               	goto	l1729
  1981  0005D0                     l160:
  1982                           
  1983                           ;main.c: 359: dat = regImg[0];
  1984  0005D0  C034  F012         	movff	_regImg,FMinit@dat
  1985  0005D4  C035  F013         	movff	_regImg+1,FMinit@dat+1
  1986                           
  1987                           ;main.c: 360: regImg[0] &= ~1;
  1988  0005D8  9034               	bcf	_regImg,0,c
  1989                           
  1990                           ;main.c: 361: if (FMwrite(0) != 0) return 1;
  1991  0005DA  0E00               	movlw	0
  1992  0005DC  ECDC  F003         	call	_FMwrite
  1993  0005E0  0900               	iorlw	0
  1994  0005E2  B4D8               	btfsc	status,2,c
  1995  0005E4  D002               	goto	l1747
  1996  0005E6  0E01               	movlw	1
  1997  0005E8  0012               	return	
  1998  0005EA                     l1747:
  1999                           
  2000                           ;main.c: 362: for (ad = 1; ad < 18; ad++) {
  2001  0005EA  0E01               	movlw	1
  2002  0005EC  6E14               	movwf	FMinit@ad,c
  2003  0005EE                     l1749:
  2004  0005EE  0E11               	movlw	17
  2005  0005F0  6414               	cpfsgt	FMinit@ad,c
  2006  0005F2  D001               	goto	l1753
  2007  0005F4  D00A               	goto	l1763
  2008  0005F6                     l1753:
  2009                           
  2010                           ;main.c: 363: if (FMwrite(ad) != 0)return 1;
  2011  0005F6  5014               	movf	FMinit@ad,w,c
  2012  0005F8  ECDC  F003         	call	_FMwrite
  2013  0005FC  0900               	iorlw	0
  2014  0005FE  B4D8               	btfsc	status,2,c
  2015  000600  D002               	goto	l1759
  2016  000602  0E01               	movlw	1
  2017  000604  0012               	return	
  2018  000606                     l1759:
  2019  000606  2A14               	incf	FMinit@ad,f,c
  2020  000608  D7F2               	goto	l1749
  2021  00060A                     l1763:
  2022                           
  2023                           ;main.c: 364: }
  2024                           ;main.c: 366: regImg[0] = dat | 1;
  2025  00060A  0E01               	movlw	1
  2026  00060C  1012               	iorwf	FMinit@dat,w,c
  2027  00060E  6E34               	movwf	_regImg,c
  2028  000610  5013               	movf	FMinit@dat+1,w,c
  2029  000612  6E35               	movwf	_regImg+1,c
  2030                           
  2031                           ;main.c: 367: if (FMwrite(0) != 0) return 1;
  2032  000614  0E00               	movlw	0
  2033  000616  ECDC  F003         	call	_FMwrite
  2034  00061A  0900               	iorlw	0
  2035  00061C  B4D8               	btfsc	status,2,c
  2036  00061E  D002               	goto	l1771
  2037  000620  0E01               	movlw	1
  2038  000622  0012               	return	
  2039  000624                     l1771:
  2040                           
  2041                           ;main.c: 368: dly(20);
  2042  000624  0E00               	movlw	0
  2043  000626  6E02               	movwf	dly@d+1,c
  2044  000628  0E14               	movlw	20
  2045  00062A  6E01               	movwf	dly@d,c
  2046  00062C  ECD8  F004         	call	_dly	;wreg free
  2047                           
  2048                           ;main.c: 369: while (FMready(&dat), !dat) dly(2);
  2049  000630  D006               	goto	l1775
  2050  000632                     l1773:
  2051  000632  0E00               	movlw	0
  2052  000634  6E02               	movwf	dly@d+1,c
  2053  000636  0E02               	movlw	2
  2054  000638  6E01               	movwf	dly@d,c
  2055  00063A  ECD8  F004         	call	_dly	;wreg free
  2056  00063E                     l1775:
  2057  00063E  0E12               	movlw	low FMinit@dat
  2058  000640  6E0C               	movwf	FMready@rdy,c
  2059  000642  0E00               	movlw	high FMinit@dat
  2060  000644  6E0D               	movwf	FMready@rdy+1,c
  2061  000646  ECB5  F004         	call	_FMready	;wreg free
  2062  00064A  5012               	movf	FMinit@dat,w,c
  2063  00064C  1013               	iorwf	FMinit@dat+1,w,c
  2064  00064E  B4D8               	btfsc	status,2,c
  2065  000650  D7F0               	goto	l1773
  2066                           
  2067                           ;main.c: 370: showFreq();
  2068  000652  EC79  F005         	call	_showFreq	;wreg free
  2069                           
  2070                           ;main.c: 371: return 0;
  2071  000656  0E00               	movlw	0
  2072  000658  0012               	return	
  2073  00065A                     __end_of_FMinit:
  2074                           	opt stack 0
  2075                           tblptru	equ	0xFF8
  2076                           tblptrh	equ	0xFF7
  2077                           tblptrl	equ	0xFF6
  2078                           tablat	equ	0xFF5
  2079                           prodh	equ	0xFF4
  2080                           prodl	equ	0xFF3
  2081                           intcon	equ	0xFF2
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           indf2	equ	0xFDF
  2085                           postinc2	equ	0xFDE
  2086                           postdec2	equ	0xFDD
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _showFreq *****************
  2092 ;; Defined at:
  2093 ;;		line 560 in file "main.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		None
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2107 ;;      Params:         0       0       0       0
  2108 ;;      Locals:         0       0       0       0
  2109 ;;      Temps:          0       0       0       0
  2110 ;;      Totals:         0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_FMinit
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text15
  2121  000AF2                     __ptext15:
  2122                           	opt stack 0
  2123  000AF2                     _showFreq:
  2124                           	opt stack 29
  2125                           
  2126                           ;main.c: 562: ;
  2127                           ;main.c: 563: return 0;
  2128                           ;	Return value of _showFreq is never used
  2129                           
  2130                           ;incstack = 0
  2131  000AF2  0012               	return		;funcret
  2132  000AF4                     __end_of_showFreq:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           tblptrh	equ	0xFF7
  2136                           tblptrl	equ	0xFF6
  2137                           tablat	equ	0xFF5
  2138                           prodh	equ	0xFF4
  2139                           prodl	equ	0xFF3
  2140                           intcon	equ	0xFF2
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           indf2	equ	0xFDF
  2144                           postinc2	equ	0xFDE
  2145                           postdec2	equ	0xFDD
  2146                           fsr2h	equ	0xFDA
  2147                           fsr2l	equ	0xFD9
  2148                           status	equ	0xFD8
  2149                           
  2150 ;; *************** function _dly *****************
  2151 ;; Defined at:
  2152 ;;		line 142 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  d               2    0[COMRAM] int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  i               2    2[COMRAM] int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2166 ;;      Params:         2       0       0       0
  2167 ;;      Locals:         2       0       0       0
  2168 ;;      Temps:          0       0       0       0
  2169 ;;      Totals:         4       0       0       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_FMinit
  2176 ;;		_setVolume
  2177 ;;		_FMfrequenc
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text16
  2183  0009B0                     __ptext16:
  2184                           	opt stack 0
  2185  0009B0                     _dly:
  2186                           	opt stack 28
  2187                           
  2188                           ;main.c: 144: int i = 0;
  2189                           
  2190                           ;incstack = 0
  2191  0009B0  0E00               	movlw	0
  2192  0009B2  6E04               	movwf	dly@i+1,c
  2193  0009B4  0E00               	movlw	0
  2194  0009B6  6E03               	movwf	dly@i,c
  2195                           
  2196                           ;main.c: 146: for (; d; --d)
  2197  0009B8  D00F               	goto	l1515
  2198  0009BA                     l1507:
  2199                           
  2200                           ;main.c: 147: for (i = 100; i; --i);
  2201  0009BA  0E00               	movlw	0
  2202  0009BC  6E04               	movwf	dly@i+1,c
  2203  0009BE  0E64               	movlw	100
  2204  0009C0  6E03               	movwf	dly@i,c
  2205  0009C2  D003               	goto	l1511
  2206  0009C4                     l1509:
  2207  0009C4  0603               	decf	dly@i,f,c
  2208  0009C6  A0D8               	btfss	status,0,c
  2209  0009C8  0604               	decf	dly@i+1,f,c
  2210  0009CA                     l1511:
  2211  0009CA  5003               	movf	dly@i,w,c
  2212  0009CC  1004               	iorwf	dly@i+1,w,c
  2213  0009CE  A4D8               	btfss	status,2,c
  2214  0009D0  D7F9               	goto	l1509
  2215  0009D2  0601               	decf	dly@d,f,c
  2216  0009D4  A0D8               	btfss	status,0,c
  2217  0009D6  0602               	decf	dly@d+1,f,c
  2218  0009D8                     l1515:
  2219  0009D8  5001               	movf	dly@d,w,c
  2220  0009DA  1002               	iorwf	dly@d+1,w,c
  2221  0009DC  B4D8               	btfsc	status,2,c
  2222  0009DE  0012               	return	
  2223  0009E0  D7EC               	goto	l1507
  2224  0009E2                     __end_of_dly:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           intcon	equ	0xFF2
  2233                           postinc0	equ	0xFEE
  2234                           wreg	equ	0xFE8
  2235                           indf2	equ	0xFDF
  2236                           postinc2	equ	0xFDE
  2237                           postdec2	equ	0xFDD
  2238                           fsr2h	equ	0xFDA
  2239                           fsr2l	equ	0xFD9
  2240                           status	equ	0xFD8
  2241                           
  2242 ;; *************** function _FMwrite *****************
  2243 ;; Defined at:
  2244 ;;		line 241 in file "main.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  adr             1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  adr             1    6[COMRAM] unsigned char 
  2249 ;;  regstr          2    0        unsigned int 
  2250 ;;  secndByt        1    5[COMRAM] unsigned char 
  2251 ;;  firstByt        1    4[COMRAM] unsigned char 
  2252 ;;  rpy             1    0        unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2262 ;;      Params:         0       0       0       0
  2263 ;;      Locals:         3       0       0       0
  2264 ;;      Temps:          2       0       0       0
  2265 ;;      Totals:         5       0       0       0
  2266 ;;Total ram usage:        5 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    2
  2269 ;; This function calls:
  2270 ;;		_IdleI2C
  2271 ;;		_WriteI2C
  2272 ;; This function is called by:
  2273 ;;		_FMinit
  2274 ;;		_setVolume
  2275 ;;		_FMfrequenc
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text17
  2280  0007B8                     __ptext17:
  2281                           	opt stack 0
  2282  0007B8                     _FMwrite:
  2283                           	opt stack 26
  2284                           
  2285                           ;incstack = 0
  2286                           ;FMwrite@adr stored from wreg
  2287  0007B8  6E07               	movwf	FMwrite@adr,c
  2288                           
  2289                           ;main.c: 243: unsigned int regstr;
  2290                           ;main.c: 244: unsigned char firstByt;
  2291                           ;main.c: 245: unsigned char secndByt;
  2292                           ;main.c: 246: unsigned char rpy;
  2293                           ;main.c: 248: firstByt = regImg[adr] >> 8;
  2294  0007BA  5007               	movf	FMwrite@adr,w,c
  2295  0007BC  0D02               	mullw	2
  2296  0007BE  0E34               	movlw	low _regImg
  2297  0007C0  24F3               	addwf	prodl,w,c
  2298  0007C2  6ED9               	movwf	fsr2l,c
  2299  0007C4  0E00               	movlw	high _regImg
  2300  0007C6  20F4               	addwfc	prodh,w,c
  2301  0007C8  6EDA               	movwf	fsr2h,c
  2302  0007CA  CFDE F003          	movff	postinc2,??_FMwrite
  2303  0007CE  CFDD F004          	movff	postdec2,??_FMwrite+1
  2304  0007D2  C004  F003         	movff	??_FMwrite+1,??_FMwrite
  2305  0007D6  6A04               	clrf	??_FMwrite+1,c
  2306  0007D8  5003               	movf	??_FMwrite,w,c
  2307  0007DA  6E05               	movwf	FMwrite@firstByt,c
  2308                           
  2309                           ;main.c: 249: secndByt = regImg[adr];
  2310  0007DC  5007               	movf	FMwrite@adr,w,c
  2311  0007DE  0D02               	mullw	2
  2312  0007E0  0E34               	movlw	low _regImg
  2313  0007E2  24F3               	addwf	prodl,w,c
  2314  0007E4  6ED9               	movwf	fsr2l,c
  2315  0007E6  0E00               	movlw	high _regImg
  2316  0007E8  20F4               	addwfc	prodh,w,c
  2317  0007EA  6EDA               	movwf	fsr2h,c
  2318  0007EC  50DF               	movf	indf2,w,c
  2319  0007EE  6E06               	movwf	FMwrite@secndByt,c
  2320                           
  2321                           ;main.c: 251: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2322  0007F0  80C5               	bsf	4037,0,c	;volatile
  2323  0007F2                     l126:
  2324  0007F2  B0C5               	btfsc	4037,0,c	;volatile
  2325  0007F4  D7FE               	goto	l126
  2326                           
  2327                           ;main.c: 252: IdleI2C();
  2328  0007F6  EC66  F005         	call	_IdleI2C	;wreg free
  2329                           
  2330                           ;main.c: 255: if (WriteI2C(0x20)) return 1;
  2331  0007FA  0E20               	movlw	32
  2332  0007FC  EC86  F004         	call	_WriteI2C
  2333  000800  0900               	iorlw	0
  2334  000802  B4D8               	btfsc	status,2,c
  2335  000804  D002               	goto	l1051
  2336  000806  0E01               	movlw	1
  2337  000808  0012               	return	
  2338  00080A                     l1051:
  2339                           
  2340                           ;main.c: 256: IdleI2C();
  2341  00080A  EC66  F005         	call	_IdleI2C	;wreg free
  2342                           
  2343                           ;main.c: 257: WriteI2C(adr);
  2344  00080E  5007               	movf	FMwrite@adr,w,c
  2345  000810  EC86  F004         	call	_WriteI2C
  2346                           
  2347                           ;main.c: 258: IdleI2C();
  2348  000814  EC66  F005         	call	_IdleI2C	;wreg free
  2349                           
  2350                           ;main.c: 259: WriteI2C(firstByt);
  2351  000818  5005               	movf	FMwrite@firstByt,w,c
  2352  00081A  EC86  F004         	call	_WriteI2C
  2353                           
  2354                           ;main.c: 260: IdleI2C();
  2355  00081E  EC66  F005         	call	_IdleI2C	;wreg free
  2356                           
  2357                           ;main.c: 261: WriteI2C(secndByt);
  2358  000822  5006               	movf	FMwrite@secndByt,w,c
  2359  000824  EC86  F004         	call	_WriteI2C
  2360                           
  2361                           ;main.c: 262: IdleI2C();
  2362  000828  EC66  F005         	call	_IdleI2C	;wreg free
  2363                           
  2364                           ;main.c: 263: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2365  00082C  84C5               	bsf	4037,2,c	;volatile
  2366  00082E                     l131:
  2367  00082E  B4C5               	btfsc	4037,2,c	;volatile
  2368  000830  D7FE               	goto	l131
  2369                           
  2370                           ;main.c: 264: IdleI2C();
  2371  000832  EC66  F005         	call	_IdleI2C	;wreg free
  2372                           
  2373                           ;main.c: 265: return 0;
  2374  000836  0E00               	movlw	0
  2375  000838  0012               	return	
  2376  00083A                     __end_of_FMwrite:
  2377                           	opt stack 0
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           prodh	equ	0xFF4
  2383                           prodl	equ	0xFF3
  2384                           intcon	equ	0xFF2
  2385                           postinc0	equ	0xFEE
  2386                           wreg	equ	0xFE8
  2387                           indf2	equ	0xFDF
  2388                           postinc2	equ	0xFDE
  2389                           postdec2	equ	0xFDD
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _FMready *****************
  2395 ;; Defined at:
  2396 ;;		line 331 in file "main.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  2399 ;;		 -> FMfrequenc@dat(2), setVolume@dat(2), FMinit@dat(2), 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  sts             2   15[COMRAM] unsigned int 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2411 ;;      Params:         2       0       0       0
  2412 ;;      Locals:         2       0       0       0
  2413 ;;      Temps:          2       0       0       0
  2414 ;;      Totals:         6       0       0       0
  2415 ;;Total ram usage:        6 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    3
  2418 ;; This function calls:
  2419 ;;		_FMread
  2420 ;; This function is called by:
  2421 ;;		_FMinit
  2422 ;;		_setVolume
  2423 ;;		_FMfrequenc
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text18
  2428  00096A                     __ptext18:
  2429                           	opt stack 0
  2430  00096A                     _FMready:
  2431                           	opt stack 25
  2432                           
  2433                           ;main.c: 333: unsigned int sts;
  2434                           ;main.c: 335: if (FMread(0x13, &sts) != 0) return 1;
  2435                           
  2436                           ;incstack = 0
  2437  00096A  0E10               	movlw	low FMready@sts
  2438  00096C  6E03               	movwf	FMread@data,c
  2439  00096E  0E00               	movlw	high FMready@sts
  2440  000970  6E04               	movwf	FMread@data+1,c
  2441  000972  0E13               	movlw	19
  2442  000974  EC65  F002         	call	_FMread
  2443  000978  0900               	iorlw	0
  2444  00097A  B4D8               	btfsc	status,2,c
  2445  00097C  D002               	goto	l1523
  2446  00097E  0E01               	movlw	1
  2447  000980  0012               	return	
  2448  000982                     l1523:
  2449                           
  2450                           ;main.c: 336: sts &= 0x0020;
  2451  000982  0E20               	movlw	32
  2452  000984  1610               	andwf	FMready@sts,f,c
  2453  000986  0E00               	movlw	0
  2454  000988  1611               	andwf	FMready@sts+1,f,c
  2455                           
  2456                           ;main.c: 337: *rdy = sts ? 1 : 0;
  2457  00098A  5010               	movf	FMready@sts,w,c
  2458  00098C  1011               	iorwf	FMready@sts+1,w,c
  2459  00098E  B4D8               	btfsc	status,2,c
  2460  000990  D002               	goto	u860
  2461  000992  0E01               	movlw	1
  2462  000994  D001               	goto	u870
  2463  000996                     u860:
  2464  000996  0E00               	movlw	0
  2465  000998                     u870:
  2466  000998  6E0E               	movwf	??_FMready& (0+255),c
  2467  00099A  6A0F               	clrf	(??_FMready+1)& (0+255),c
  2468  00099C  C00C  FFD9         	movff	FMready@rdy,fsr2l
  2469  0009A0  C00D  FFDA         	movff	FMready@rdy+1,fsr2h
  2470  0009A4  C00E  FFDE         	movff	??_FMready,postinc2
  2471  0009A8  C00F  FFDD         	movff	??_FMready+1,postdec2
  2472                           
  2473                           ;main.c: 338: return 0;
  2474  0009AC  0E00               	movlw	0
  2475  0009AE  0012               	return	
  2476  0009B0                     __end_of_FMready:
  2477                           	opt stack 0
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           prodh	equ	0xFF4
  2483                           prodl	equ	0xFF3
  2484                           intcon	equ	0xFF2
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           indf2	equ	0xFDF
  2488                           postinc2	equ	0xFDE
  2489                           postdec2	equ	0xFDD
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _FMread *****************
  2495 ;; Defined at:
  2496 ;;		line 283 in file "main.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  regAddr         1    wreg     unsigned char 
  2499 ;;  data            2    2[COMRAM] PTR unsigned int 
  2500 ;;		 -> main@ui(2), FMready@sts(2), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  regAddr         1    8[COMRAM] unsigned char 
  2503 ;;  secndByt        1   10[COMRAM] unsigned char 
  2504 ;;  firstByt        1    9[COMRAM] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2514 ;;      Params:         2       0       0       0
  2515 ;;      Locals:         3       0       0       0
  2516 ;;      Temps:          4       0       0       0
  2517 ;;      Totals:         9       0       0       0
  2518 ;;Total ram usage:        9 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    2
  2521 ;; This function calls:
  2522 ;;		_IdleI2C
  2523 ;;		_ReadI2C
  2524 ;;		_WriteI2C
  2525 ;; This function is called by:
  2526 ;;		_FMready
  2527 ;;		_FMvers
  2528 ;;		_FMid
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text19
  2533  0004CA                     __ptext19:
  2534                           	opt stack 0
  2535  0004CA                     _FMread:
  2536                           	opt stack 25
  2537                           
  2538                           ;incstack = 0
  2539                           ;FMread@regAddr stored from wreg
  2540  0004CA  6E09               	movwf	FMread@regAddr,c
  2541                           
  2542                           ;main.c: 285: unsigned char firstByt;
  2543                           ;main.c: 286: unsigned char secndByt;
  2544                           ;main.c: 288: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2545  0004CC  80C5               	bsf	4037,0,c	;volatile
  2546  0004CE                     l136:
  2547  0004CE  B0C5               	btfsc	4037,0,c	;volatile
  2548  0004D0  D7FE               	goto	l136
  2549                           
  2550                           ;main.c: 289: IdleI2C();
  2551  0004D2  EC66  F005         	call	_IdleI2C	;wreg free
  2552                           
  2553                           ;main.c: 292: if (WriteI2C(0x20)) return 1;
  2554  0004D6  0E20               	movlw	32
  2555  0004D8  EC86  F004         	call	_WriteI2C
  2556  0004DC  0900               	iorlw	0
  2557  0004DE  B4D8               	btfsc	status,2,c
  2558  0004E0  D002               	goto	l1473
  2559  0004E2  0E01               	movlw	1
  2560  0004E4  0012               	return	
  2561  0004E6                     l1473:
  2562                           
  2563                           ;main.c: 293: IdleI2C();
  2564  0004E6  EC66  F005         	call	_IdleI2C	;wreg free
  2565                           
  2566                           ;main.c: 294: WriteI2C(regAddr);
  2567  0004EA  5009               	movf	FMread@regAddr,w,c
  2568  0004EC  EC86  F004         	call	_WriteI2C
  2569                           
  2570                           ;main.c: 295: IdleI2C();
  2571  0004F0  EC66  F005         	call	_IdleI2C	;wreg free
  2572                           
  2573                           ;main.c: 296: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2574  0004F4  82C5               	bsf	4037,1,c	;volatile
  2575  0004F6                     l141:
  2576  0004F6  B2C5               	btfsc	4037,1,c	;volatile
  2577  0004F8  D7FE               	goto	l141
  2578                           
  2579                           ;main.c: 297: IdleI2C();
  2580  0004FA  EC66  F005         	call	_IdleI2C	;wreg free
  2581                           
  2582                           ;main.c: 298: WriteI2C(0x20 + 0x01);
  2583  0004FE  0E21               	movlw	33
  2584  000500  EC86  F004         	call	_WriteI2C
  2585                           
  2586                           ;main.c: 299: IdleI2C();
  2587  000504  EC66  F005         	call	_IdleI2C	;wreg free
  2588                           
  2589                           ;main.c: 300: firstByt = ReadI2C();
  2590  000508  EC4D  F005         	call	_ReadI2C	;wreg free
  2591  00050C  6E0A               	movwf	FMread@firstByt,c
  2592                           
  2593                           ;main.c: 301: IdleI2C();
  2594  00050E  EC66  F005         	call	_IdleI2C	;wreg free
  2595                           
  2596                           ;main.c: 302: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2597  000512  9AC5               	bcf	4037,5,c	;volatile
  2598  000514  88C5               	bsf	4037,4,c	;volatile
  2599  000516                     l144:
  2600  000516  B8C5               	btfsc	4037,4,c	;volatile
  2601  000518  D7FE               	goto	l144
  2602                           
  2603                           ;main.c: 303: IdleI2C();
  2604  00051A  EC66  F005         	call	_IdleI2C	;wreg free
  2605                           
  2606                           ;main.c: 304: secndByt = ReadI2C();
  2607  00051E  EC4D  F005         	call	_ReadI2C	;wreg free
  2608  000522  6E0B               	movwf	FMread@secndByt,c
  2609                           
  2610                           ;main.c: 305: IdleI2C();
  2611  000524  EC66  F005         	call	_IdleI2C	;wreg free
  2612                           
  2613                           ;main.c: 306: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2614  000528  8AC5               	bsf	4037,5,c	;volatile
  2615  00052A  88C5               	bsf	4037,4,c	;volatile
  2616  00052C                     l147:
  2617  00052C  B8C5               	btfsc	4037,4,c	;volatile
  2618  00052E  D7FE               	goto	l147
  2619                           
  2620                           ;main.c: 307: IdleI2C();
  2621  000530  EC66  F005         	call	_IdleI2C	;wreg free
  2622                           
  2623                           ;main.c: 308: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2624  000534  84C5               	bsf	4037,2,c	;volatile
  2625  000536                     l150:
  2626  000536  B4C5               	btfsc	4037,2,c	;volatile
  2627  000538  D7FE               	goto	l150
  2628                           
  2629                           ;main.c: 309: IdleI2C();
  2630  00053A  EC66  F005         	call	_IdleI2C	;wreg free
  2631                           
  2632                           ;main.c: 310: *data = firstByt;
  2633  00053E  500A               	movf	FMread@firstByt,w,c
  2634  000540  6E05               	movwf	??_FMread& (0+255),c
  2635  000542  6A06               	clrf	(??_FMread+1)& (0+255),c
  2636  000544  C003  FFD9         	movff	FMread@data,fsr2l
  2637  000548  C004  FFDA         	movff	FMread@data+1,fsr2h
  2638  00054C  C005  FFDE         	movff	??_FMread,postinc2
  2639  000550  C006  FFDD         	movff	??_FMread+1,postdec2
  2640                           
  2641                           ;main.c: 311: *data <<= 8;
  2642  000554  C003  FFD9         	movff	FMread@data,fsr2l
  2643  000558  C004  FFDA         	movff	FMread@data+1,fsr2h
  2644  00055C  50DE               	movf	postinc2,w,c
  2645  00055E  6EDD               	movwf	postdec2,c
  2646  000560  6ADF               	clrf	indf2,c
  2647                           
  2648                           ;main.c: 312: *data = *data | secndByt;
  2649  000562  C003  FFD9         	movff	FMread@data,fsr2l
  2650  000566  C004  FFDA         	movff	FMread@data+1,fsr2h
  2651  00056A  CFDE F005          	movff	postinc2,??_FMread
  2652  00056E  CFDD F006          	movff	postdec2,??_FMread+1
  2653  000572  500B               	movf	FMread@secndByt,w,c
  2654  000574  6E07               	movwf	(??_FMread+2)& (0+255),c
  2655  000576  6A08               	clrf	(??_FMread+3)& (0+255),c
  2656  000578  5005               	movf	??_FMread,w,c
  2657  00057A  1207               	iorwf	??_FMread+2,f,c
  2658  00057C  5006               	movf	??_FMread+1,w,c
  2659  00057E  1208               	iorwf	??_FMread+3,f,c
  2660  000580  C003  FFD9         	movff	FMread@data,fsr2l
  2661  000584  C004  FFDA         	movff	FMread@data+1,fsr2h
  2662  000588  C007  FFDE         	movff	??_FMread+2,postinc2
  2663  00058C  C008  FFDD         	movff	??_FMread+3,postdec2
  2664                           
  2665                           ;main.c: 314: return 0;
  2666  000590  0E00               	movlw	0
  2667  000592  0012               	return	
  2668  000594                     __end_of_FMread:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _WriteI2C *****************
  2687 ;; Defined at:
  2688 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_writ.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  data_out        1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  data_out        1    1[COMRAM] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      char 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2702 ;;      Params:         0       0       0       0
  2703 ;;      Locals:         1       0       0       0
  2704 ;;      Temps:          0       0       0       0
  2705 ;;      Totals:         1       0       0       0
  2706 ;;Total ram usage:        1 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		_IdleI2C
  2711 ;; This function is called by:
  2712 ;;		_FMwrite
  2713 ;;		_FMread
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text20
  2718  00090C                     __ptext20:
  2719                           	opt stack 0
  2720  00090C                     _WriteI2C:
  2721                           	opt stack 26
  2722                           
  2723                           ;incstack = 0
  2724                           ;WriteI2C@data_out stored from wreg
  2725  00090C  6E02               	movwf	WriteI2C@data_out,c
  2726  00090E  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2727  000912  AEC6               	btfss	4038,7,c	;volatile
  2728  000914  D002               	goto	l945
  2729  000916  0EFF               	movlw	255
  2730  000918  0012               	return	
  2731  00091A                     l945:
  2732  00091A  50C6               	movf	4038,w,c	;volatile
  2733  00091C  0B0F               	andlw	15
  2734  00091E  0A08               	xorlw	8
  2735  000920  B4D8               	btfsc	status,2,c
  2736  000922  D00F               	goto	l963
  2737  000924  50C6               	movf	4038,w,c	;volatile
  2738  000926  0B0F               	andlw	15
  2739  000928  0A0B               	xorlw	11
  2740  00092A  B4D8               	btfsc	status,2,c
  2741  00092C  D00A               	goto	l963
  2742  00092E  88C6               	bsf	4038,4,c	;volatile
  2743  000930                     l302:
  2744  000930  A69E               	btfss	3998,3,c	;volatile
  2745  000932  D7FE               	goto	l302
  2746  000934  A4C7               	btfss	4039,2,c	;volatile
  2747  000936  B0C7               	btfsc	4039,0,c	;volatile
  2748  000938  D002               	goto	l959
  2749  00093A  0EFE               	movlw	254
  2750  00093C  0012               	return	
  2751  00093E                     l959:
  2752  00093E  0E00               	movlw	0
  2753  000940  0012               	return	
  2754  000942                     l963:
  2755  000942  50C6               	movf	4038,w,c	;volatile
  2756  000944  0B0F               	andlw	15
  2757  000946  0A08               	xorlw	8
  2758  000948  B4D8               	btfsc	status,2,c
  2759  00094A  D005               	goto	l311
  2760  00094C  50C6               	movf	4038,w,c	;volatile
  2761  00094E  0B0F               	andlw	15
  2762  000950  0A0B               	xorlw	11
  2763  000952  A4D8               	btfss	status,2,c
  2764  000954  0012               	return	
  2765  000956                     l311:
  2766  000956  B0C7               	btfsc	4039,0,c	;volatile
  2767  000958  D7FE               	goto	l311
  2768  00095A  EC66  F005         	call	_IdleI2C	;wreg free
  2769  00095E  ACC5               	btfss	4037,6,c	;volatile
  2770  000960  D002               	goto	l977
  2771  000962  0EFE               	movlw	254
  2772  000964  0012               	return	
  2773  000966                     l977:
  2774  000966  0E00               	movlw	0
  2775  000968  0012               	return	
  2776  00096A                     __end_of_WriteI2C:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           prodh	equ	0xFF4
  2783                           prodl	equ	0xFF3
  2784                           intcon	equ	0xFF2
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           indf2	equ	0xFDF
  2788                           postinc2	equ	0xFDE
  2789                           postdec2	equ	0xFDD
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _IdleI2C *****************
  2795 ;; Defined at:
  2796 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_idle.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2810 ;;      Params:         0       0       0       0
  2811 ;;      Locals:         0       0       0       0
  2812 ;;      Temps:          1       0       0       0
  2813 ;;      Totals:         1       0       0       0
  2814 ;;Total ram usage:        1 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_FMwrite
  2820 ;;		_FMread
  2821 ;;		_WriteI2C
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text21
  2826  000ACC                     __ptext21:
  2827                           	opt stack 0
  2828  000ACC                     _IdleI2C:
  2829                           	opt stack 26
  2830  000ACC                     l931:
  2831  000ACC  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  2832  000AD0  0E1F               	movlw	31
  2833  000AD2  1601               	andwf	??_IdleI2C,f,c
  2834  000AD4  A4D8               	btfss	status,2,c
  2835  000AD6  D7FA               	goto	l931
  2836  000AD8  A4C7               	btfss	4039,2,c	;volatile
  2837  000ADA  0012               	return	
  2838  000ADC  D7F7               	goto	l931
  2839  000ADE                     __end_of_IdleI2C:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           intcon	equ	0xFF2
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           indf2	equ	0xFDF
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _ReadI2C *****************
  2858 ;; Defined at:
  2859 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_read.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      unsigned char 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2873 ;;      Params:         0       0       0       0
  2874 ;;      Locals:         0       0       0       0
  2875 ;;      Temps:          0       0       0       0
  2876 ;;      Totals:         0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_FMread
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text22
  2887  000A9A                     __ptext22:
  2888                           	opt stack 0
  2889  000A9A                     _ReadI2C:
  2890                           	opt stack 26
  2891                           
  2892                           ;incstack = 0
  2893  000A9A  50C6               	movf	4038,w,c	;volatile
  2894  000A9C  0B0F               	andlw	15
  2895  000A9E  0A08               	xorlw	8
  2896  000AA0  B4D8               	btfsc	status,2,c
  2897  000AA2  D004               	goto	l277
  2898  000AA4  50C6               	movf	4038,w,c	;volatile
  2899  000AA6  0B0F               	andlw	15
  2900  000AA8  0A0B               	xorlw	11
  2901  000AAA  B4D8               	btfsc	status,2,c
  2902  000AAC                     l277:
  2903  000AAC  86C5               	bsf	4037,3,c	;volatile
  2904  000AAE                     l278:
  2905  000AAE  A0C7               	btfss	4039,0,c	;volatile
  2906  000AB0  D7FE               	goto	l278
  2907  000AB2  50C9               	movf	4041,w,c	;volatile
  2908  000AB4  0012               	return	
  2909  000AB6                     __end_of_ReadI2C:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           prodh	equ	0xFF4
  2916                           prodl	equ	0xFF3
  2917                           intcon	equ	0xFF2
  2918                           postinc0	equ	0xFEE
  2919                           wreg	equ	0xFE8
  2920                           indf2	equ	0xFDF
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942                           	psect	rparam
  2943  0000                     tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon	equ	0xFF2
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           indf2	equ	0xFDF
  2953                           postinc2	equ	0xFDE
  2954                           postdec2	equ	0xFDD
  2955                           fsr2h	equ	0xFDA
  2956                           fsr2l	equ	0xFD9
  2957                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    55
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      87
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), setVolume@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _previousChannel->_FMfrequenc
    _nextChannel->_FMfrequenc
    _FMfrequenc->_FMready
    _VolumeUp->_setVolume
    _VolumeDown->_setVolume
    _setVolume->_FMready
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9065
                                             45 COMRAM     6     6      0
                             _FMinit
                             _FMvers
                               _Init
                           _MuteHard
                         _VolumeDown
                           _VolumeUp
                          _butnEvent
                                _dly
                              _errfm
                        _nextChannel
                    _previousChannel
 ---------------------------------------------------------------------------------
 (1) _previousChannel                                      0     0      0    1584
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _nextChannel                                          0     0      0    1584
                         _FMfrequenc
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _FMfrequenc                                          10     8      2    1306
                                             17 COMRAM    10     8      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                           13    11      2     230
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (1) _VolumeUp                                             0     0      0    1677
                         _delay_10ms
                          _setVolume
 ---------------------------------------------------------------------------------
 (1) _VolumeDown                                           0     0      0    1677
                         _delay_10ms
                          _setVolume
 ---------------------------------------------------------------------------------
 (2) _setVolume                                           30    28      2    1399
                                             17 COMRAM    28    26      2
                            _FMready
                            _FMwrite
                                _dly
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           3     1      2     278
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MuteHard                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     449
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1314
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly                                                  4     2      2     368
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _FMwrite                                              8     8      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _FMready                                              6     4      2     629
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (4) _FMread                                               9     7      2     363
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _MuteHard
   _VolumeDown
     _delay_10ms
     _setVolume
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
   _VolumeUp
     _delay_10ms
     _setVolume
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
   _butnEvent
   _dly
   _errfm
   _nextChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms
   _previousChannel
     _FMfrequenc
       _FMready
         _FMread
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       _FMwrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _dly
     _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      57       1       91.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      57       8        0.0%
DATA                 0      0      57      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Feb 18 22:33:35 2017

             __CFG_CP$OFF 000000               _SSPSTATbits 000FC7                        l81 03DA  
                      l91 047A                        l83 03C2                        l75 038A  
                      l93 0462                        l77 0372                        l86 042A  
                      l88 0412                        l98 04B2               __CFG_BORV$3 000000  
                     l131 082E                       l141 04F6                       l302 0930  
                     l150 0536                       l126 07F2                       l311 0956  
                     l144 0516                       l136 04CE                       l160 05D0  
                     l216 0AEE                       l147 052C                       l277 0AAC  
                     l278 0AAE                       l931 0ACC                       l945 091A  
                     l963 0942                       l959 093E                       l977 0966  
                     u905 06A6                       u860 0996                       u870 0998  
                     u890 0676                       _dly 09B0                       prod 000FF3  
                     wreg 000FE8              __CFG_WDT$OFF 000000                      l1051 080A  
                    l1511 09CA                      l1601 09E4                      l1523 0982  
                    l1507 09BA                      l1515 09D8                      l1603 09F2  
                    l1509 09C4                      l1613 0356                      l1551 0668  
                    l1703 04C0                      l1623 0380                      l1473 04E6  
                    l1633 03A6                      l1643 03D0                      l1733 05A0  
                    l1653 03F6                      l1663 0420                      l1753 05F6  
                    l1729 0598                      l1673 0446                      l1771 0624  
                    l1763 060A                      l1747 05EA                      l1683 0470  
                    l1851 0760                      l1773 0632                      l1749 05EE  
                    l1693 0496                      l1853 0766                      l1775 063E  
                    l1759 0606                      l1855 076C                      l1863 0780  
                    l1847 074C                      l1857 0772                      l1849 075A  
                    ?_dly 0001                      l1859 077A                      u1100 0412  
                    u1020 0372                      u1140 0462                      u1060 03C2  
                    u1307 035C                      u1180 04B2                      u1317 03AC  
                    u1327 03FC                      u1280 073C                      u1337 044C  
                    u1347 049C                      u1357 09EA                      _Init 08AC  
         __end_of_FMready 09B0                      _main 0712                      dly@d 0001  
                    dly@i 0003                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9           __end_of_FMwrite 083A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_IdleI2C 0ADE             __CFG_MCLRE$ON 000000              ___param_bank 000010  
         __end_of_ReadI2C 0AB6           __end_of_OpenI2C 0A9A                     ??_dly 0003  
                   ?_Init 0001                     ?_main 0001                     _T0CON 000FD5  
                   _LCDPS 000F58                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISG 000F98             __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000  
         __end_of_regDflt 0325                     _errfm 0AEE               ?_FMfrequenc 0012  
          __CFG_BOREN$OFF 000000                     tablat 000FF5                     status 000FD8  
            ?_nextChannel 0001           __initialization 0AB6              __end_of_Init 090C  
            __end_of_main 07B8                    ??_Init 0003                    ??_main 002E  
           __activetblptr 000002          __end_of_MuteHard 0AF2                    _ADCON1 000FC1  
               ??_FMready 000E                    ?_errfm 0001          __end_of_WriteI2C 096A  
               ??_FMwrite 0003          __end_of_VolumeUp 0A5E                    _LCDCON 000F59  
                  _LCDSE0 000F5A                    _LCDSE1 000F5B                    _LCDSE2 000F5C  
                  _LCDSE3 000F5D               OpenI2C@slew 0001                 ??_IdleI2C 0001  
                  _OSCCON 000FD3                    _FMinit 0594                    _FMread 04CA  
                  _SSPADD 000FC8                    _SSPBUF 000FC9                    _FMvers 0ADE  
               ??_ReadI2C 0001                 ??_OpenI2C 0002            __CFG_XINST$OFF 000000  
     __size_of_FMfrequenc 0072                    _regImg 0034                    clear_0 0ABC  
                  main@ui 0032          __end_of_showFreq 0AF4              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 0AC2             ___rparam_used 000001  
              _VolumeDown 0A5E            __pcstackCOMRAM 0001             __end_of_errfm 0AF0  
          setVolume@F6665 0325           __CFG_OSC$INTIO7 000000                   ??_errfm 0001  
__size_of_previousChannel 001E        __size_of_butnEvent 0190                _delay_10ms 09E2  
                 ?_FMinit 0001                   ?_FMread 0003                   ?_FMvers 000C  
               ?_MuteHard 0001    __end_ofsetVolume@F6665 0338      __size_of_nextChannel 001E  
               ?_WriteI2C 0001        __size_of_setVolume 00B8                 ?_VolumeUp 0001  
               FMinit@dat 0012                   _FMready 096A                   _SSPCON1 000FC6  
                 _SSPCON2 000FC5              ??_FMfrequenc 0014                   _SSPSTAT 000FC7  
                 _FMwrite 07B8                   _IdleI2C 0ACC           __size_of_FMinit 00C6  
         __size_of_FMread 00CA                 FMvers@vsn 000C                   _ReadI2C 0A9A  
         __size_of_FMvers 0010                   _OpenI2C 0A7C                   __Hparam 0000  
                 __Lparam 0000               ?_VolumeDown 0001                ??_MuteHard 0001  
               ?_showFreq 0001              __psmallconst 0300           __CFG_STVREN$OFF 000000  
                 __pcinit 0AB6                ??_WriteI2C 0002         __end_of_butnEvent 04CA  
      __end_of_FMfrequenc 08AC                ??_VolumeUp 002E                   __ramtop 0300  
                 __ptext0 0712                   __ptext1 0A04                   __ptext2 0A22  
                 __ptext3 083A                   __ptext4 0AEE                   __ptext5 033A  
                 __ptext6 0A40                   __ptext7 0A5E                   __ptext8 065A  
                 __ptext9 09E2                 _T0CONbits 000FD5                   _regDflt 0301  
            __size_of_dly 0032                   main@evt 0030      end_of_initialization 0AC2  
       __end_of_setVolume 0712               ?_delay_10ms 0001             __Lmediumconst 0000  
       ??_previousChannel 001C         setVolume@temp_vol 002D               FMfrequenc@f 0012  
              ??_showFreq 0001                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                 _PORTAbits 000F80                 _PORTBbits 000F81  
               _PORTCbits 000F82                 _PORTGbits 000F86                 _TRISCbits 000F94  
     __size_of_VolumeDown 001E            __end_of_FMinit 065A            __end_of_FMread 0594  
          __end_of_FMvers 0AEE       __size_of_delay_10ms 0022                butnEvent@c 0004  
     start_initialization 0AB6               __end_of_dly 09E2          WriteI2C@data_out 0002  
                ??_FMinit 0012                  ??_FMread 0005                  ??_FMvers 000E  
       __size_of_MuteHard 0002           setVolume@volume 0012         __size_of_WriteI2C 005E  
       __size_of_VolumeUp 001E               __pbssCOMRAM 0034                  ?_FMready 000C  
                ?_FMwrite 0001                  ?_IdleI2C 0001                  ?_ReadI2C 0001  
                ?_OpenI2C 0001             ??_nextChannel 001C              ??_VolumeDown 002E  
       __size_of_showFreq 0002                  FMinit@ad 0014               __smallconst 0300  
               _butnEvent 033A           FMwrite@firstByt 0005           _previousChannel 0A04  
                _LCDDATA0 000F60        __end_of_VolumeDown 0A7C           FMwrite@secndByt 0006  
          __size_of_errfm 0002              ??_delay_10ms 0003              MuteHard@down 0001  
          FMread@firstByt 000A                 _setVolume 065A                FMread@data 0003  
                _PIR1bits 000F9E            FMread@secndByt 000B                FMready@rdy 000C  
              FMready@sts 0010       __end_of_nextChannel 0A40        __end_of_delay_10ms 0A04  
              ?_butnEvent 0001   setVolume@volume_setting 002C          __size_of_FMready 0046  
        __size_of_FMwrite 0082          OpenI2C@sync_mode 0002          __size_of_IdleI2C 0012  
        __size_of_ReadI2C 001C                  __Hrparam 0000                ?_setVolume 0012  
        __size_of_OpenI2C 001E                  _MuteHard 0AF0                  __Lrparam 0000  
              FMwrite@adr 0007                  _WriteI2C 090C                  _VolumeUp 0A40  
 __end_of_previousChannel 0A22              setVolume@dat 002A                  __ptext10 0AF0  
                __ptext11 08AC                  __ptext20 090C                  __ptext12 0A7C  
                __ptext21 0ACC                  __ptext13 0ADE                  __ptext22 0A9A  
                __ptext14 0594                  __ptext15 0AF2                  __ptext16 09B0  
                __ptext17 07B8                  __ptext18 096A                  __ptext19 04CA  
             delay_10ms@n 0001             __size_of_Init 0060             __size_of_main 00A6  
           FMread@regAddr 0009               _nextChannel 0A22                  _showFreq 0AF2  
           FMfrequenc@dat 001A               ??_butnEvent 0003                _INTCONbits 000FF2  
     setVolume@volume_map 0017               ??_setVolume 0014              FMfrequenc@cn 0018  
        ?_previousChannel 0001               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
              _FMfrequenc 083A            butnEvent@c_516 000C            butnEvent@c_508 0008  
          butnEvent@c_509 000A            butnEvent@c_499 0006  
